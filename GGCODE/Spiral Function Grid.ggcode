//Spiral Function Grid Test

// â”€â”€ G-code File Variables â”€â”€
let id = 4453            // File ID
let nline = 1            // Line numbering: 1 = enabled, 0 = disabled
let decimalpoint = 3     // Number of decimal places (range: 0â€“6)

note {
  Inverted Spiral Function Grid Test
  File: [ggcode_file_name]
  Time: [time]
  Program ID: [id]
}

G90 G94 G17
G20
G53 G0 Z0
T1 M6
S[6000] M3
G54
M8

let z_safe = 1
let feed = 300

function spiral_down(cx, cy, start_radius, max_radius, slope_deg, angle_step_deg) {
    let angle = 0
    let radius = start_radius
    let z = 0
    let incline_ratio = tan(slope_deg * DEG_TO_RAD)

    // Move to center start
    let x = cx + radius * cos(angle * DEG_TO_RAD)
    let y = cy + radius * sin(angle * DEG_TO_RAD)

    G0 Z[z_safe]
    G0 X[x] Y[y]
    G1 Z[z] F[feed]

    while (radius <= max_radius) {
        angle = angle + angle_step_deg
        radius = start_radius + angle * (angle_step_deg / 360)

        x = cx + radius * cos(angle * DEG_TO_RAD)
        y = cy + radius * sin(angle * DEG_TO_RAD)
        z = -incline_ratio * (radius - start_radius)

        // Round values
        x = floor(x * 1000 + 0.5) / 1000
        y = floor(y * 1000 + 0.5) / 1000
        z = floor(z * 1000 + 0.5) / 1000

        if (abs(x) < 0.0001) { x = 0 }
        if (abs(y) < 0.0001) { y = 0 }

        G1 X[x] Y[y] Z[z] F[feed]
    }

    G0 Z[z_safe]
}

// ðŸ”² Grid placement (3x3 spirals)
let grid_spacing = 120 /// @number 80 200 // Grid spacing between spirals
let spiral_start_radius = 1 /// @number 0.5 5 // Spiral start radius
let spiral_max_radius = 30 /// @number 10 50 // Spiral maximum radius
let spiral_angle_step = 2 /// @number 1 5 // Spiral angle step
let spiral_slope = 30 /// @number 10 60 // Spiral slope angle

for row = -1..1 {
    for col = -1..1 {
        cx = col * grid_spacing
        cy = row * grid_spacing
        spiral_down(cx, cy, spiral_start_radius, spiral_max_radius, spiral_slope, spiral_angle_step)
    }
}
