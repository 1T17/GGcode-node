// Math Functions Example
// This example demonstrates all available mathematical functions in GGcode

// ── G-code File Variables ──
let id = 4453            // File ID
let nline = 1            // Line numbering: 1 = enabled, 0 = disabled
let decimalpoint = 3     // Number of decimal places (range: 0–6)


let center_x = 0 /// @number -50 50 // Center X coordinate
let center_y = 0 /// @number -50 50 // Center Y coordinate

// Move to starting position
G0 X[center_x] Y[center_y]

// Test trigonometric functions
let angle_30 = 30 * DEG_TO_RAD
let angle_45 = 45 * DEG_TO_RAD
let angle_60 = 60 * DEG_TO_RAD

// Draw a triangle using sin and cos
G1 X[center_x + 10 * cos(angle_30)] Y[center_y + 10 * sin(angle_30)] F[100]
G1 X[center_x + 10 * cos(angle_60)] Y[center_y + 10 * sin(angle_60)] F[100]
G1 X[center_x + 10 * cos(0)] Y[center_y + 10 * sin(0)] F[100]
G1 X[center_x + 10 * cos(angle_30)] Y[center_y + 10 * sin(angle_30)] F[100]

// Test other math functions
let value1 = abs(-15)
let value2 = sqrt(25)
let value3 = floor(3.7)
let value4 = ceil(3.2)
let value5 = round(3.6)
let value6 = hypot(3, 4)

// Draw a pattern using calculated values
G0 X[center_x + value1] Y[center_y]
G1 X[center_x + value2] Y[center_y + value3] F[100]
G1 X[center_x + value4] Y[center_y + value5] F[100]
G1 X[center_x + value6] Y[center_y] F[100]

// Test clamp function
let clamped_value = clamp(15, 0, 10)
G1 X[center_x + clamped_value] Y[center_y + 5] F[100]

// Test distance function
let dist = distance(0, 0, 5, 5)
G1 X[center_x + dist] Y[center_y - 5] F[100]
// Return to center
G0 X[center_x] Y[center_y] 