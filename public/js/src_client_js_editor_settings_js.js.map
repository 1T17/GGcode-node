{"version":3,"file":"src_client_js_editor_settings_js.js","mappings":"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","sources":["webpack://ggcode-compiler/./src/client/js/editor/settings.js"],"sourcesContent":["/**\n * Editor Settings Manager\n * Manages Monaco editor settings and preferences\n */\n\nimport themeManager from './themes.js';\nimport storageManager from '../utils/storageManager.js';\n\nclass EditorSettingsManager {\n  constructor() {\n    this.settings = {};\n    this.modalElement = null;\n    this.contentElement = null;\n    this.formElement = null;\n    this.onSettingsChange = null;\n    this.editorInstance = null;\n\n    // Default settings\n    this.defaultSettings = {\n      theme: 'ggcode-dark',\n      fontSize: 14,\n      fontFamily: 'Consolas, \"Courier New\", monospace',\n      wordWrap: 'off',\n      minimap: 'enabled',\n      lineNumbers: 'on',\n      renderWhitespace: 'none',\n      renderIndentGuides: true,\n      bracketMatching: true,\n      autoClosingBrackets: 'always',\n      autoClosingQuotes: 'always',\n      autoClosingDelete: 'always',\n      autoClosingOvertype: 'always',\n      surroudWithBrackets: true,\n      autoSave: false,\n      autoSaveDelay: 30000,\n      tabSize: 2,\n      insertSpaces: true,\n      cursorBlinking: 'blink',\n      cursorStyle: 'line',\n      scrollBeyondLastLine: true,\n      smoothScrolling: true,\n      mouseWheelZoom: true,\n      contextmenu: true,\n      quickSuggestions: true,\n      suggestOnTriggerCharacters: true,\n      acceptSuggestionOnEnter: 'on',\n      tabCompletion: 'on',\n      wordBasedSuggestions: true,\n      parameterHints: true,\n      formatOnType: false,\n      formatOnPaste: false,\n      renderLineHighlight: 'line',\n      glyphMargin: false,\n      folding: true,\n      showFoldingControls: 'mouseover',\n      dragAndDrop: true,\n      links: true,\n      colorDecorators: true,\n      lightbulb: { enabled: true },\n      codeLens: false,\n      inlayHints: { enabled: 'offUnlessPressed' },\n      hideBrowserValidation: true,\n    };\n\n    this.loadSettings();\n  }\n\n  /**\n   * Initialize the settings manager\n   * @param {Object} options - Configuration options\n   * @param {string} options.modalId - ID of the modal element\n   * @param {string} options.contentId - ID of the content container\n   * @param {Function} options.onSettingsChange - Callback for settings changes\n   */\n  initialize(options = {}) {\n    // Prevent multiple initializations\n    if (this._initialized) {\n      return true;\n    }\n\n    const {\n      modalId = 'settingsModal',\n      contentId = 'settingsContent',\n      onSettingsChange = null,\n    } = options;\n\n    this.modalElement = document.getElementById(modalId);\n    this.contentElement = document.getElementById(contentId);\n    this.onSettingsChange = onSettingsChange;\n\n    if (!this.modalElement || !this.contentElement) {\n      console.error('Settings: Required DOM elements not found');\n      return false;\n    }\n\n    // Add CSS styles\n    this._addStyles();\n\n    // Ensure browser validation setting is applied (only once)\n    this.applyBrowserValidationSetting(this.settings.hideBrowserValidation);\n\n    this._initialized = true;\n    return true;\n  }\n\n  /**\n   * Load settings from localStorage\n   */\n  loadSettings() {\n    try {\n      const savedSettings = localStorage.getItem('ggcode-editor-settings');\n      if (savedSettings) {\n        const parsed = JSON.parse(savedSettings);\n        this.settings = { ...this.defaultSettings, ...parsed };\n      } else {\n        this.settings = { ...this.defaultSettings };\n      }\n\n      // Apply browser validation setting after DOM is ready\n      if (document.readyState === 'loading') {\n        document.addEventListener('DOMContentLoaded', () => {\n          this.applyBrowserValidationSetting(this.settings.hideBrowserValidation);\n        });\n      } else {\n        // DOM is already ready\n        this.applyBrowserValidationSetting(this.settings.hideBrowserValidation);\n      }\n    } catch (error) {\n      console.error('Settings: Failed to load settings:', error);\n      this.settings = { ...this.defaultSettings };\n      // Apply default browser validation setting\n      if (document.readyState === 'loading') {\n        document.addEventListener('DOMContentLoaded', () => {\n          this.applyBrowserValidationSetting(this.defaultSettings.hideBrowserValidation);\n        });\n      } else {\n        this.applyBrowserValidationSetting(this.defaultSettings.hideBrowserValidation);\n      }\n    }\n  }\n\n  /**\n   * Save settings to localStorage\n   */\n  saveSettings() {\n    try {\n      localStorage.setItem('ggcode-editor-settings', JSON.stringify(this.settings));\n    } catch (error) {\n      console.error('Settings: Failed to save settings:', error);\n    }\n  }\n\n  /**\n   * Get current settings\n   * @returns {Object} Current settings\n   */\n  getSettings() {\n    return { ...this.settings };\n  }\n\n  /**\n   * Update a specific setting\n   * @param {string} key - Setting key\n   * @param {any} value - Setting value\n   */\n  updateSetting(key, value) {\n    this.settings[key] = value;\n    this.saveSettings();\n\n    // Apply setting to editor if available\n    if (this.editorInstance) {\n      this.applySettingToEditor(key, value);\n    }\n\n    // Notify callback\n    if (this.onSettingsChange) {\n      this.onSettingsChange(key, value, this.settings);\n    }\n  }\n\n  /**\n   * Apply a setting to all Monaco editors\n   * @param {string} key - Setting key\n   * @param {any} value - Setting value\n   */\n  applySettingToEditor(key, value) {\n    // Get all Monaco editors\n    const editors = typeof monaco !== 'undefined' ? monaco.editor.getEditors() : [];\n\n    // If no editors available, store the setting for later application\n    if (editors.length === 0) {\n      //console.log(`Settings: No editors available, storing setting '${key}' for later application`);\n      return;\n    }\n\n    try {\n      editors.forEach(editor => {\n        this.applySettingToSingleEditor(editor, key, value);\n      });\n    } catch (error) {\n      console.error(`Settings: Failed to apply setting '${key}' to editors:`, error);\n    }\n  }\n\n  /**\n   * Apply a setting to a single editor instance\n   * @param {Object} editor - Monaco editor instance\n   * @param {string} key - Setting key\n   * @param {any} value - Setting value\n   */\n  applySettingToSingleEditor(editor, key, value) {\n    try {\n      switch (key) {\n        case 'theme':\n          // Wait for themes to be available and then switch\n          if (themeManager.getAvailableThemes().includes(value)) {\n            themeManager.switchTheme(value);\n          } else {\n            // Store the preference for when themes become available\n            storageManager.setSelectedTheme(value);\n          }\n          break;\n\n        case 'fontSize':\n          editor.updateOptions({ fontSize: parseInt(value) });\n          break;\n\n        case 'fontFamily':\n          editor.updateOptions({ fontFamily: value });\n          break;\n\n        case 'wordWrap':\n          editor.updateOptions({ wordWrap: value });\n          break;\n\n        case 'minimap': {\n          const minimapValue = value === 'enabled' ? { enabled: true } : { enabled: false };\n          editor.updateOptions({ minimap: minimapValue });\n          break;\n        }\n\n        case 'lineNumbers':\n          editor.updateOptions({ lineNumbers: value });\n          break;\n\n        case 'renderWhitespace':\n          editor.updateOptions({ renderWhitespace: value });\n          break;\n\n        case 'renderIndentGuides':\n          editor.updateOptions({ renderIndentGuides: value });\n          break;\n\n        case 'bracketMatching':\n          editor.updateOptions({ bracketMatching: value });\n          break;\n\n        case 'autoClosingBrackets':\n          editor.updateOptions({ autoClosingBrackets: value });\n          break;\n\n        case 'autoClosingQuotes':\n          editor.updateOptions({ autoClosingQuotes: value });\n          break;\n\n        case 'autoClosingDelete':\n          editor.updateOptions({ autoClosingDelete: value });\n          break;\n\n        case 'autoClosingOvertype':\n          editor.updateOptions({ autoClosingOvertype: value });\n          break;\n\n        case 'surroudWithBrackets':\n          editor.updateOptions({ surroudWithBrackets: value });\n          break;\n\n        case 'tabSize':\n          editor.updateOptions({ tabSize: parseInt(value) });\n          break;\n\n        case 'insertSpaces':\n          editor.updateOptions({ insertSpaces: value });\n          break;\n\n        case 'cursorBlinking':\n          editor.updateOptions({ cursorBlinking: value });\n          break;\n\n        case 'cursorStyle':\n          editor.updateOptions({ cursorStyle: value });\n          break;\n\n        case 'scrollBeyondLastLine':\n          editor.updateOptions({ scrollBeyondLastLine: value });\n          break;\n\n        case 'smoothScrolling':\n          editor.updateOptions({ smoothScrolling: value });\n          break;\n\n        case 'mouseWheelZoom':\n          editor.updateOptions({ mouseWheelZoom: value });\n          break;\n\n        case 'contextmenu':\n          editor.updateOptions({ contextmenu: value });\n          break;\n\n        case 'quickSuggestions':\n          editor.updateOptions({ quickSuggestions: value });\n          break;\n\n        case 'suggestOnTriggerCharacters':\n          editor.updateOptions({ suggestOnTriggerCharacters: value });\n          break;\n\n        case 'acceptSuggestionOnEnter':\n          editor.updateOptions({ acceptSuggestionOnEnter: value });\n          break;\n\n        case 'tabCompletion':\n          editor.updateOptions({ tabCompletion: value });\n          break;\n\n        case 'wordBasedSuggestions':\n          editor.updateOptions({ wordBasedSuggestions: value });\n          break;\n\n        case 'parameterHints':\n          editor.updateOptions({ parameterHints: value });\n          break;\n\n        case 'formatOnType':\n          editor.updateOptions({ formatOnType: value });\n          break;\n\n        case 'formatOnPaste':\n          editor.updateOptions({ formatOnPaste: value });\n          break;\n\n        case 'renderLineHighlight':\n          editor.updateOptions({ renderLineHighlight: value });\n          break;\n\n        case 'glyphMargin':\n          editor.updateOptions({ glyphMargin: value });\n          break;\n\n        case 'folding':\n          editor.updateOptions({ folding: value });\n          break;\n\n        case 'showFoldingControls':\n          editor.updateOptions({ showFoldingControls: value });\n          break;\n\n        case 'dragAndDrop':\n          editor.updateOptions({ dragAndDrop: value });\n          break;\n\n        case 'links':\n          editor.updateOptions({ links: value });\n          break;\n\n        case 'colorDecorators':\n          editor.updateOptions({ colorDecorators: value });\n          break;\n\n        case 'lightbulb':\n          editor.updateOptions({ lightbulb: value });\n          break;\n\n        case 'codeLens':\n          editor.updateOptions({ codeLens: value });\n          break;\n\n        case 'inlayHints':\n          editor.updateOptions({ inlayHints: value });\n          break;\n\n        case 'hideBrowserValidation':\n          this.applyBrowserValidationSetting(value);\n          break;\n\n        case 'autoSave':\n          // Auto save is handled by the application, not Monaco editor\n          // Just acknowledge the setting without warning\n          break;\n\n        case 'autoSaveDelay':\n          // Auto save delay is handled by the application, not Monaco editor\n          // Just acknowledge the setting without warning\n          break;\n\n        default:\n          console.warn(`Settings: Unknown setting '${key}'`);\n      }\n    } catch (error) {\n      console.error(`Settings: Failed to apply setting '${key}' to editor:`, error);\n    }\n  }\n\n  /**\n   * Apply browser validation setting\n   * @param {boolean} hide - Whether to hide browser validation styling\n   */\n  applyBrowserValidationSetting(hide) {\n    const styleId = 'browser-validation-override';\n    let existingStyle = document.getElementById(styleId);\n\n    // Check if we need to make any changes\n    const shouldHaveStyle = hide;\n    const hasStyle = !!existingStyle;\n\n    if (shouldHaveStyle === hasStyle) {\n      // No change needed\n      return;\n    }\n\n    if (hide) {\n      // Add CSS to hide browser validation styling\n      const style = document.createElement('style');\n      style.id = styleId;\n      style.textContent = `\n        /* DISABLE BROWSER VALIDATION STYLING ON EDITOR CONTAINERS */\n        #editor,\n        #output,\n        #editor *,\n        #output *,\n        .monaco-editor,\n        .monaco-editor * {\n          /* Remove browser validation styling */\n          box-shadow: none !important;\n          outline: none !important;\n          border: none !important;\n          /* Disable browser form validation styling */\n          -webkit-appearance: none !important;\n          -moz-appearance: none !important;\n          appearance: none !important;\n        }\n\n        /* FORM VALIDATION OVERRIDE - Prevent red validation styling */\n        form #editor,\n        form #output,\n        form .monaco-editor,\n        form .monaco-editor * {\n          /* Override any form validation styling */\n          box-shadow: none !important;\n          outline: none !important;\n          border: none !important;\n          /* Remove any red validation styling */\n          border-color: transparent !important;\n          outline-color: transparent !important;\n        }\n\n        /* FOCUS STATE OVERRIDE - Ensure no red focus styling */\n        #editor:focus,\n        #output:focus,\n        #editor:focus-within,\n        #output:focus-within,\n        .monaco-editor:focus,\n        .monaco-editor:focus-within {\n          box-shadow: none !important;\n          outline: none !important;\n          border: none !important;\n          border-color: transparent !important;\n          outline-color: transparent !important;\n        }\n\n        /* BROWSER-SPECIFIC VALIDATION OVERRIDES */\n        /* Chrome/Safari validation styling */\n        #editor:invalid,\n        #output:invalid,\n        .monaco-editor:invalid {\n          box-shadow: none !important;\n          outline: none !important;\n          border: none !important;\n        }\n\n        /* Firefox validation styling */\n        #editor:-moz-ui-invalid,\n        #output:-moz-ui-invalid,\n        .monaco-editor:-moz-ui-invalid {\n          box-shadow: none !important;\n          outline: none !important;\n          border: none !important;\n        }\n\n        /* Edge/IE validation styling */\n        #editor:-ms-input-placeholder,\n        #output:-ms-input-placeholder {\n          box-shadow: none !important;\n          outline: none !important;\n          border: none !important;\n        }\n\n        /* Remove any red glow or shadow effects */\n        #editor,\n        #output,\n        .monaco-editor {\n          /* Webkit browsers */\n          -webkit-box-shadow: none !important;\n          /* Mozilla browsers */\n          -moz-box-shadow: none !important;\n          /* Standard */\n          box-shadow: none !important;\n          /* Remove any outline */\n          outline: 0 !important;\n          outline: none !important;\n          /* Remove any border */\n          border: 0 !important;\n          border: none !important;\n        }\n      `;\n      document.head.appendChild(style);\n    } else {\n      // Remove the override style to allow browser validation styling\n      existingStyle.remove();\n    }\n  }\n\n  /**\n   * Test the browser validation toggle\n   */\n  testBrowserValidationToggle() {\n    // Toggle the setting\n    const newValue = !this.settings.hideBrowserValidation;\n    this.updateSetting('hideBrowserValidation', newValue);\n\n    return newValue;\n  }\n\n  /**\n   * Apply all current settings to all Monaco editors\n   * @param {Object} editorInstance - Monaco editor instance (for backward compatibility)\n   */\n  applyAllSettingsToEditor(editorInstance = null) {\n    // Prevent multiple rapid applications\n    if (this._applyingAllSettings) {\n      return;\n    }\n    this._applyingAllSettings = true;\n\n    try {\n      // Store the editor instance for backward compatibility\n      if (editorInstance) {\n        this.editorInstance = editorInstance;\n      }\n\n      // Apply all settings to all available editors\n      Object.entries(this.settings).forEach(([key, value]) => {\n        this.applySettingToEditor(key, value);\n      });\n    } finally {\n      // Reset flag after a short delay\n      setTimeout(() => {\n        this._applyingAllSettings = false;\n      }, 100);\n    }\n  }\n\n  /**\n   * Reset settings to defaults\n   */\n  resetToDefaults() {\n    this.settings = { ...this.defaultSettings };\n    this.saveSettings();\n\n    // Apply defaults to all available editors\n    Object.entries(this.settings).forEach(([key, value]) => {\n      this.applySettingToEditor(key, value);\n    });\n  }\n\n  /**\n   * Get all current Monaco editors\n   * @returns {Array} Array of Monaco editor instances\n   */\n  getAllEditors() {\n    if (typeof monaco !== 'undefined') {\n      return monaco.editor.getEditors();\n    }\n    return [];\n  }\n\n  /**\n   * Check if settings are properly connected to editors\n   * @returns {Object} Connection status\n   */\n  getConnectionStatus() {\n    const editors = this.getAllEditors();\n    return {\n      settingsManagerInitialized: !!this.modalElement && !!this.contentElement,\n      themeManagerAvailable: !!themeManager,\n      monacoAvailable: typeof monaco !== 'undefined',\n      editorCount: editors.length,\n      editorsConnected: editors.length > 0,\n      currentTheme: themeManager ? themeManager.getCurrentTheme() : null,\n      availableThemes: themeManager ? themeManager.getAvailableThemes() : []\n    };\n  }\n\n  /**\n   * Show settings modal\n   */\n  showSettings() {\n    if (!this.modalElement || !this.contentElement) {\n      console.error('Settings not initialized');\n      return;\n    }\n\n    // Render the settings form\n    const formHtml = this.renderSettingsForm();\n    this.contentElement.innerHTML = formHtml;\n\n    // Get form element and setup event handlers\n    this.formElement = document.getElementById('settingsForm');\n    if (this.formElement) {\n      this.setupFormHandlers();\n    }\n\n    // Show modal\n    this.modalElement.style.display = 'flex';\n    this.modalElement.classList.add('settings-fade-in');\n  }\n\n  /**\n   * Close settings modal\n   */\n  closeSettings() {\n    if (this.modalElement) {\n      this.modalElement.style.display = 'none';\n      this.modalElement.classList.remove('settings-fade-in');\n    }\n  }\n\n  /**\n   * Render the settings form HTML\n   * @returns {string} HTML string\n   */\n  renderSettingsForm() {\n    const settings = this.settings;\n    const themes = themeManager.getAvailableThemes();\n\n    return `\n      <div class=\"settings-container\">\n        <div class=\"settings-header\">\n          <div class=\"settings-header-content\">\n            <div class=\"settings-title-section\">\n              <h3>Editor Settings</h3>\n              <p class=\"settings-description\">Customize your Monaco editor experience</p>\n            </div>\n          </div>\n        </div>\n\n        <form id=\"settingsForm\" class=\"settings-form\">\n          <!-- Theme Selection -->\n          <div class=\"settings-group\">\n            <h4>Appearance</h4>\n\n            <div class=\"setting-item\">\n              <label for=\"theme\">Theme</label>\n              <select id=\"theme\" name=\"theme\">\n                ${themes.map(theme => `<option value=\"${theme}\" ${settings.theme === theme ? 'selected' : ''}>${theme}</option>`).join('')}\n              </select>\n              <div class=\"setting-description\">Choose your editor theme</div>\n            </div>\n\n            <div class=\"setting-item\">\n              <label for=\"fontSize\">Font Size</label>\n              <input type=\"number\" id=\"fontSize\" name=\"fontSize\" min=\"8\" max=\"24\" value=\"${settings.fontSize}\">\n              <div class=\"setting-description\">Editor font size in pixels</div>\n            </div>\n\n            <div class=\"setting-item\">\n              <label for=\"fontFamily\">Font Family</label>\n              <select id=\"fontFamily\" name=\"fontFamily\">\n                <option value=\"Consolas, 'Courier New', monospace\" ${settings.fontFamily === \"Consolas, 'Courier New', monospace\" ? 'selected' : ''}>Consolas (Windows)</option>\n                <option value=\"'Courier New', monospace\" ${settings.fontFamily === \"'Courier New', monospace\" ? 'selected' : ''}>Courier New (Classic)</option>\n                <option value=\"'Monaco', Consolas, 'Courier New', monospace\" ${settings.fontFamily === \"'Monaco', Consolas, 'Courier New', monospace\" ? 'selected' : ''}>Monaco (macOS)</option>\n                <option value=\"'Menlo', 'Monaco', Consolas, 'Courier New', monospace\" ${settings.fontFamily === \"'Menlo', 'Monaco', Consolas, 'Courier New', monospace\" ? 'selected' : ''}>Menlo (macOS)</option>\n                <option value=\"'Lucida Console', 'Courier New', monospace\" ${settings.fontFamily === \"'Lucida Console', 'Courier New', monospace\" ? 'selected' : ''}>Lucida Console</option>\n                <option value=\"'DejaVu Sans Mono', 'Lucida Console', 'Courier New', monospace\" ${settings.fontFamily === \"'DejaVu Sans Mono', 'Lucida Console', 'Courier New', monospace\" ? 'selected' : ''}>DejaVu Sans Mono</option>\n                <option value=\"'Liberation Mono', 'DejaVu Sans Mono', 'Courier New', monospace\" ${settings.fontFamily === \"'Liberation Mono', 'DejaVu Sans Mono', 'Courier New', monospace\" ? 'selected' : ''}>Liberation Mono</option>\n                <option value=\"'Ubuntu Mono', 'DejaVu Sans Mono', 'Courier New', monospace\" ${settings.fontFamily === \"'Ubuntu Mono', 'DejaVu Sans Mono', 'Courier New', monospace\" ? 'selected' : ''}>Ubuntu Mono (Linux)</option>\n                <option value=\"'Inconsolata', 'DejaVu Sans Mono', 'Courier New', monospace\" ${settings.fontFamily === \"'Inconsolata', 'DejaVu Sans Mono', 'Courier New', monospace\" ? 'selected' : ''}>Inconsolata</option>\n                <option value=\"'Source Code Pro', 'DejaVu Sans Mono', 'Courier New', monospace\" ${settings.fontFamily === \"'Source Code Pro', 'DejaVu Sans Mono', 'Courier New', monospace\" ? 'selected' : ''}>Source Code Pro</option>\n                <option value=\"'Fira Code', 'Fira Mono', 'DejaVu Sans Mono', 'Courier New', monospace\" ${settings.fontFamily === \"'Fira Code', 'Fira Mono', 'DejaVu Sans Mono', 'Courier New', monospace\" ? 'selected' : ''}>Fira Code (Ligatures)</option>\n                <option value=\"SFMono-Regular, 'SF Mono', Consolas, 'Courier New', monospace\" ${settings.fontFamily === \"SFMono-Regular, 'SF Mono', Consolas, 'Courier New', monospace\" ? 'selected' : ''}>SF Mono (macOS)</option>\n                <option value=\"monospace\" ${settings.fontFamily === \"monospace\" ? 'selected' : ''}>System Default</option>\n              </select>\n              <div class=\"setting-description\">Choose a monospace font - all include reliable fallbacks for maximum compatibility</div>\n            </div>\n\n            <div class=\"setting-item\">\n              <label for=\"lineNumbers\">Line Numbers</label>\n              <select id=\"lineNumbers\" name=\"lineNumbers\">\n                <option value=\"on\" ${settings.lineNumbers === 'on' ? 'selected' : ''}>Show</option>\n                <option value=\"off\" ${settings.lineNumbers === 'off' ? 'selected' : ''}>Hide</option>\n                <option value=\"relative\" ${settings.lineNumbers === 'relative' ? 'selected' : ''}>Relative</option>\n                <option value=\"interval\" ${settings.lineNumbers === 'interval' ? 'selected' : ''}>Interval</option>\n              </select>\n              <div class=\"setting-description\">Display line numbers in the editor</div>\n            </div>\n\n            <div class=\"setting-item\">\n              <label for=\"wordWrap\">Word Wrap</label>\n              <select id=\"wordWrap\" name=\"wordWrap\">\n                <option value=\"off\" ${settings.wordWrap === 'off' ? 'selected' : ''}>No Wrap</option>\n                <option value=\"on\" ${settings.wordWrap === 'on' ? 'selected' : ''}>Wrap Lines</option>\n                <option value=\"wordWrapColumn\" ${settings.wordWrap === 'wordWrapColumn' ? 'selected' : ''}>Wrap at Column</option>\n                <option value=\"bounded\" ${settings.wordWrap === 'bounded' ? 'selected' : ''}>Bounded Wrap</option>\n              </select>\n              <div class=\"setting-description\">How to handle long lines</div>\n            </div>\n\n            <div class=\"setting-item\">\n              <label for=\"renderWhitespace\">Render Whitespace</label>\n              <select id=\"renderWhitespace\" name=\"renderWhitespace\">\n                <option value=\"none\" ${settings.renderWhitespace === 'none' ? 'selected' : ''}>None</option>\n                <option value=\"boundary\" ${settings.renderWhitespace === 'boundary' ? 'selected' : ''}>Boundary</option>\n                <option value=\"selection\" ${settings.renderWhitespace === 'selection' ? 'selected' : ''}>Selection</option>\n                <option value=\"trailing\" ${settings.renderWhitespace === 'trailing' ? 'selected' : ''}>Trailing</option>\n                <option value=\"all\" ${settings.renderWhitespace === 'all' ? 'selected' : ''}>All</option>\n              </select>\n              <div class=\"setting-description\">Show whitespace characters</div>\n            </div>\n\n            <div class=\"setting-item\">\n              <label class=\"checkbox-label\">\n                <input type=\"checkbox\" id=\"hideBrowserValidation\" name=\"hideBrowserValidation\" ${settings.hideBrowserValidation ? 'checked' : ''}>\n                Hide Browser Validation Styling\n              </label>\n              <div class=\"setting-description\">Remove red shadow lines and browser validation styling from editor (recommended)</div>\n            </div>\n          </div>\n\n          <!-- Editor Behavior -->\n          <div class=\"settings-group\">\n            <h4>Editor Behavior</h4>\n\n            <div class=\"setting-item\">\n              <label for=\"tabSize\">Tab Size</label>\n              <input type=\"number\" id=\"tabSize\" name=\"tabSize\" min=\"1\" max=\"8\" value=\"${settings.tabSize}\">\n              <div class=\"setting-description\">Number of spaces for tab</div>\n            </div>\n\n            <div class=\"setting-item\">\n              <label class=\"checkbox-label\">\n                <input type=\"checkbox\" id=\"insertSpaces\" name=\"insertSpaces\" ${settings.insertSpaces ? 'checked' : ''}>\n                Insert Spaces\n              </label>\n              <div class=\"setting-description\">Use spaces instead of tabs</div>\n            </div>\n\n            <div class=\"setting-item\">\n              <label for=\"cursorBlinking\">Cursor Blinking</label>\n              <select id=\"cursorBlinking\" name=\"cursorBlinking\">\n                <option value=\"blink\" ${settings.cursorBlinking === 'blink' ? 'selected' : ''}>Blink</option>\n                <option value=\"smooth\" ${settings.cursorBlinking === 'smooth' ? 'selected' : ''}>Smooth</option>\n                <option value=\"phase\" ${settings.cursorBlinking === 'phase' ? 'selected' : ''}>Phase</option>\n                <option value=\"expand\" ${settings.cursorBlinking === 'expand' ? 'selected' : ''}>Expand</option>\n                <option value=\"solid\" ${settings.cursorBlinking === 'solid' ? 'selected' : ''}>Solid</option>\n              </select>\n              <div class=\"setting-description\">Cursor blinking style</div>\n            </div>\n\n            <div class=\"setting-item\">\n              <label for=\"cursorStyle\">Cursor Style</label>\n              <select id=\"cursorStyle\" name=\"cursorStyle\">\n                <option value=\"line\" ${settings.cursorStyle === 'line' ? 'selected' : ''}>Line</option>\n                <option value=\"block\" ${settings.cursorStyle === 'block' ? 'selected' : ''}>Block</option>\n                <option value=\"underline\" ${settings.cursorStyle === 'underline' ? 'selected' : ''}>Underline</option>\n                <option value=\"line-thin\" ${settings.cursorStyle === 'line-thin' ? 'selected' : ''}>Thin Line</option>\n                <option value=\"block-outline\" ${settings.cursorStyle === 'block-outline' ? 'selected' : ''}>Block Outline</option>\n                <option value=\"underline-thin\" ${settings.cursorStyle === 'underline-thin' ? 'selected' : ''}>Thin Underline</option>\n              </select>\n              <div class=\"setting-description\">Cursor appearance</div>\n            </div>\n          </div>\n\n          <!-- Features -->\n          <div class=\"settings-group\">\n            <h4>Features</h4>\n\n            <div class=\"setting-item\">\n              <label for=\"minimap\">Minimap</label>\n              <select id=\"minimap\" name=\"minimap\">\n                <option value=\"enabled\" ${settings.minimap === 'enabled' || (settings.minimap && typeof settings.minimap === 'object' && settings.minimap.enabled === true) ? 'selected' : ''}>Show Minimap</option>\n                <option value=\"disabled\" ${settings.minimap === 'disabled' || (settings.minimap && typeof settings.minimap === 'object' && settings.minimap.enabled === false) ? 'selected' : ''}>Hide Minimap</option>\n              </select>\n              <div class=\"setting-description\">Display code minimap on the right side of the editor</div>\n            </div>\n\n            <div class=\"setting-item\">\n              <label class=\"checkbox-label\">\n                <input type=\"checkbox\" id=\"renderIndentGuides\" name=\"renderIndentGuides\" ${settings.renderIndentGuides ? 'checked' : ''}>\n                Indent Guides\n              </label>\n              <div class=\"setting-description\">Show indentation guides</div>\n            </div>\n\n            <div class=\"setting-item\">\n              <label class=\"checkbox-label\">\n                <input type=\"checkbox\" id=\"bracketMatching\" name=\"bracketMatching\" ${settings.bracketMatching ? 'checked' : ''}>\n                Bracket Matching\n              </label>\n              <div class=\"setting-description\">Highlight matching brackets</div>\n            </div>\n\n            <div class=\"setting-item\">\n              <label class=\"checkbox-label\">\n                <input type=\"checkbox\" id=\"folding\" name=\"folding\" ${settings.folding ? 'checked' : ''}>\n                Code Folding\n              </label>\n              <div class=\"setting-description\">Allow code folding</div>\n            </div>\n\n            <div class=\"setting-item\">\n              <label class=\"checkbox-label\">\n                <input type=\"checkbox\" id=\"dragAndDrop\" name=\"dragAndDrop\" ${settings.dragAndDrop ? 'checked' : ''}>\n                Drag & Drop\n              </label>\n              <div class=\"setting-description\">Enable drag and drop editing</div>\n            </div>\n\n            <div class=\"setting-item\">\n              <label class=\"checkbox-label\">\n                <input type=\"checkbox\" id=\"links\" name=\"links\" ${settings.links ? 'checked' : ''}>\n                Clickable Links\n              </label>\n              <div class=\"setting-description\">Make URLs clickable</div>\n            </div>\n          </div>\n\n          <!-- Suggestions & Intellisense -->\n          <div class=\"settings-group\">\n            <h4>IntelliSense</h4>\n\n            <div class=\"setting-item\">\n              <label class=\"checkbox-label\">\n                <input type=\"checkbox\" id=\"quickSuggestions\" name=\"quickSuggestions\" ${settings.quickSuggestions ? 'checked' : ''}>\n                Quick Suggestions\n              </label>\n              <div class=\"setting-description\">Show suggestions as you type</div>\n            </div>\n\n            <div class=\"setting-item\">\n              <label class=\"checkbox-label\">\n                <input type=\"checkbox\" id=\"suggestOnTriggerCharacters\" name=\"suggestOnTriggerCharacters\" ${settings.suggestOnTriggerCharacters ? 'checked' : ''}>\n                Trigger Characters\n              </label>\n              <div class=\"setting-description\">Show suggestions on trigger characters</div>\n            </div>\n\n            <div class=\"setting-item\">\n              <label class=\"checkbox-label\">\n                <input type=\"checkbox\" id=\"parameterHints\" name=\"parameterHints\" ${settings.parameterHints ? 'checked' : ''}>\n                Parameter Hints\n              </label>\n              <div class=\"setting-description\">Show parameter hints</div>\n            </div>\n\n            <div class=\"setting-item\">\n              <label class=\"checkbox-label\">\n                <input type=\"checkbox\" id=\"formatOnType\" name=\"formatOnType\" ${settings.formatOnType ? 'checked' : ''}>\n                Format on Type\n              </label>\n              <div class=\"setting-description\">Auto-format as you type</div>\n            </div>\n\n            <div class=\"setting-item\">\n              <label class=\"checkbox-label\">\n                <input type=\"checkbox\" id=\"formatOnPaste\" name=\"formatOnPaste\" ${settings.formatOnPaste ? 'checked' : ''}>\n                Format on Paste\n              </label>\n              <div class=\"setting-description\">Auto-format when pasting</div>\n            </div>\n          </div>\n\n          <!-- Auto Save -->\n          <div class=\"settings-group\">\n            <h4>Auto Save</h4>\n\n            <div class=\"setting-item\">\n              <label class=\"checkbox-label\">\n                <input type=\"checkbox\" id=\"autoSave\" name=\"autoSave\" ${settings.autoSave ? 'checked' : ''}>\n                Enable Auto Save\n              </label>\n              <div class=\"setting-description\">Automatically save content periodically</div>\n            </div>\n\n            <div class=\"setting-item\">\n              <label for=\"autoSaveDelay\">Auto Save Delay (ms)</label>\n              <input type=\"number\" id=\"autoSaveDelay\" name=\"autoSaveDelay\" min=\"5000\" max=\"300000\" step=\"5000\" value=\"${settings.autoSaveDelay}\">\n              <div class=\"setting-description\">Delay between auto-saves (in milliseconds)</div>\n            </div>\n          </div>\n        </form>\n\n\n      </div>\n    `;\n  }\n\n  /**\n   * Setup form event handlers\n   */\n  setupFormHandlers() {\n    if (!this.formElement) return;\n\n    // Handle input changes\n    this.formElement.addEventListener('input', (e) => {\n      const { name, value, type, checked } = e.target;\n\n      if (!name) return;\n\n      let finalValue;\n      if (type === 'checkbox') {\n        finalValue = checked;\n      } else if (type === 'number') {\n        finalValue = parseInt(value);\n      } else if (name === 'minimap') {\n        finalValue = value; // 'enabled' or 'disabled'\n      } else {\n        finalValue = value;\n      }\n\n      this.updateSetting(name, finalValue);\n    });\n\n    // Handle select changes\n    this.formElement.addEventListener('change', (e) => {\n      const { name, value, type, checked } = e.target;\n\n      if (!name) return;\n\n      let finalValue;\n      if (type === 'checkbox') {\n        finalValue = checked;\n      } else if (type === 'number') {\n        finalValue = parseInt(value);\n      } else if (name === 'minimap') {\n        finalValue = value; // 'enabled' or 'disabled'\n      } else {\n        finalValue = value;\n      }\n\n      this.updateSetting(name, finalValue);\n    });\n  }\n\n  /**\n   * Apply current form settings\n   */\n  applyCurrentSettings() {\n    // Settings are applied in real-time via event handlers\n    // This method can be used for batch operations if needed\n    this.closeSettings();\n  }\n\n  /**\n   * Add CSS link for settings modal\n   * @private\n   */\n  _addStyles() {\n    const linkId = 'settings-styles-link';\n    if (document.getElementById(linkId)) return;\n\n    const link = document.createElement('link');\n    link.id = linkId;\n    link.rel = 'stylesheet';\n    link.href = '/css/modals/settings.css';\n\n    document.head.appendChild(link);\n  }\n}\n\n// Create global settings manager instance\nconst settingsManager = new EditorSettingsManager();\n\n// Export for use in other modules\nexport { EditorSettingsManager, settingsManager };\nexport default settingsManager;\n\n// Make globally available\nif (typeof window !== 'undefined') {\n  window.settingsManager = settingsManager;\n}"],"names":["themeManager","storageManager","EditorSettingsManager","_classCallCheck","settings","modalElement","contentElement","formElement","onSettingsChange","editorInstance","defaultSettings","theme","fontSize","fontFamily","wordWrap","minimap","lineNumbers","renderWhitespace","renderIndentGuides","bracketMatching","autoClosingBrackets","autoClosingQuotes","autoClosingDelete","autoClosingOvertype","surroudWithBrackets","autoSave","autoSaveDelay","tabSize","insertSpaces","cursorBlinking","cursorStyle","scrollBeyondLastLine","smoothScrolling","mouseWheelZoom","contextmenu","quickSuggestions","suggestOnTriggerCharacters","acceptSuggestionOnEnter","tabCompletion","wordBasedSuggestions","parameterHints","formatOnType","formatOnPaste","renderLineHighlight","glyphMargin","folding","showFoldingControls","dragAndDrop","links","colorDecorators","lightbulb","enabled","codeLens","inlayHints","hideBrowserValidation","loadSettings","_createClass","key","value","initialize","options","arguments","length","undefined","_initialized","_options$modalId","modalId","_options$contentId","contentId","_options$onSettingsCh","document","getElementById","console","error","_addStyles","applyBrowserValidationSetting","_this","savedSettings","localStorage","getItem","parsed","JSON","parse","_objectSpread","readyState","addEventListener","saveSettings","setItem","stringify","getSettings","updateSetting","applySettingToEditor","_this2","editors","monaco","editor","getEditors","forEach","applySettingToSingleEditor","concat","getAvailableThemes","includes","switchTheme","setSelectedTheme","updateOptions","parseInt","minimapValue","warn","hide","styleId","existingStyle","shouldHaveStyle","hasStyle","style","createElement","id","textContent","head","appendChild","remove","testBrowserValidationToggle","newValue","applyAllSettingsToEditor","_this3","_applyingAllSettings","Object","entries","_ref","_ref2","_slicedToArray","setTimeout","resetToDefaults","_this4","_ref3","_ref4","getAllEditors","getConnectionStatus","settingsManagerInitialized","themeManagerAvailable","monacoAvailable","editorCount","editorsConnected","currentTheme","getCurrentTheme","availableThemes","showSettings","formHtml","renderSettingsForm","innerHTML","setupFormHandlers","display","classList","add","closeSettings","themes","map","join","_typeof","_this5","e","_e$target","target","name","type","checked","finalValue","_e$target2","applyCurrentSettings","linkId","link","rel","href","settingsManager","window"],"sourceRoot":""}