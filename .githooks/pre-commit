#!/bin/bash

# Pre-commit hook for GGcode Compiler
# Ensures code quality before commits

set -e

echo "üîç Running pre-commit checks..."

# Check if we're in a Git repository
if ! git rev-parse --git-dir > /dev/null 2>&1; then
    echo "‚ùå Not in a Git repository"
    exit 1
fi

# Get list of staged files
STAGED_FILES=$(git diff --cached --name-only --diff-filter=ACM | grep -E '\.(js|json|md)$' || true)

if [ -z "$STAGED_FILES" ]; then
    echo "‚úÖ No relevant files to check"
    exit 0
fi

echo "üìÅ Checking staged files:"
echo "$STAGED_FILES"

# 1. Run ESLint on JavaScript files
JS_FILES=$(echo "$STAGED_FILES" | grep -E '\.js$' || true)
if [ ! -z "$JS_FILES" ]; then
    echo "üîß Running ESLint..."
    if ! npm run lint; then
        echo "‚ùå ESLint failed. Please fix the issues before committing."
        exit 1
    fi
    echo "‚úÖ ESLint passed"
fi

# 2. Run Prettier check
echo "üé® Checking code formatting..."
if ! npm run format:check; then
    echo "‚ùå Code formatting issues found. Run 'npm run format' to fix."
    exit 1
fi
echo "‚úÖ Code formatting is correct"

# 3. Run tests
echo "üß™ Running tests..."
if ! npm test; then
    echo "‚ùå Tests failed. Please fix before committing."
    exit 1
fi
echo "‚úÖ All tests passed"

# 4. Check for TODO/FIXME comments in staged files
echo "üìù Checking for TODO/FIXME comments..."
TODO_COUNT=$(echo "$STAGED_FILES" | xargs grep -l "TODO\|FIXME" 2>/dev/null | wc -l || echo "0")
if [ "$TODO_COUNT" -gt 0 ]; then
    echo "‚ö†Ô∏è  Found $TODO_COUNT file(s) with TODO/FIXME comments:"
    echo "$STAGED_FILES" | xargs grep -n "TODO\|FIXME" 2>/dev/null || true
    echo "Consider addressing these before committing."
fi

# 5. Check package.json version if it's staged
if echo "$STAGED_FILES" | grep -q "package.json"; then
    echo "üì¶ package.json modified - checking version..."
    # This is just a notification, not a blocker
    CURRENT_VERSION=$(node -p "require('./package.json').version")
    echo "Current version: $CURRENT_VERSION"
fi

# 6. Update documentation if source files changed
SRC_FILES=$(echo "$STAGED_FILES" | grep -E '^src/' || true)
if [ ! -z "$SRC_FILES" ]; then
    echo "üìö Source files changed - consider updating documentation"
    
    # Check if README needs updating
    if [ -f "README.md" ]; then
        LAST_README_UPDATE=$(git log -1 --format="%ct" -- README.md 2>/dev/null || echo "0")
        LAST_SRC_UPDATE=$(git log -1 --format="%ct" -- src/ 2>/dev/null || echo "0")
        
        if [ "$LAST_SRC_UPDATE" -gt "$LAST_README_UPDATE" ]; then
            echo "‚ö†Ô∏è  README.md might need updating (source files changed more recently)"
        fi
    fi
fi

echo "‚úÖ Pre-commit checks completed successfully!"
echo ""