// Flower Pattern with Arcs Example
// Creates a flower-like pattern using G2/G3 arc commands

note {
  Flower Pattern with Arcs Example
  Creates a flower-like pattern using G2/G3 arc commands
  Demonstrates: Complex pattern generation with arcs
  Author: GGcode Examples
  Version: 1.0
}

// ── G-code File Variables ──
let id = 4453            // File ID
let nline = 1            // Line numbering: 1 = enabled, 0 = disabled
let decimalpoint = 3     // Number of decimal places (range: 0–6)


// Configurable parameters
let center_x = 0 /// @number -50 50 // Center X coordinate
let center_y = 0 /// @number -50 50 // Center Y coordinate
let radius = 20 /// @number 10 40 // Base radius
let feed_rate = 150 /// @number 50 300 // Feed rate in mm/min
let z_depth = -1 /// @number -5 0 // Z cutting depth
let z_safe = 2 /// @number 1 5 // Safe Z height
let petal_count = 6 /// @number 4 12 // Number of petals

// Move to safe height and center position
G0 Z[z_safe]
G0 X[center_x] Y[center_y]

// Draw a flower-like pattern using arcs
let petal_radius = radius * 0.6

for i = 0..petal_count {
    let angle = (i * 360 / petal_count) * DEG_TO_RAD
    let petal_start_x = center_x + petal_radius * cos(angle)
    let petal_start_y = center_y + petal_radius * sin(angle)
    
    // Move to petal start
    G0 X[petal_start_x] Y[petal_start_y]
    G1 Z[z_depth] F[feed_rate]
    
    // Draw petal using two arcs
    let petal_end_x = center_x + petal_radius * cos(angle + PI)
    let petal_end_y = center_y + petal_radius * sin(angle + PI)
    
    // First arc (clockwise)
    G2 X[petal_end_x] Y[petal_end_y] R[petal_radius] F[feed_rate]
    
    // Second arc (counter-clockwise) back to start
    G3 X[petal_start_x] Y[petal_start_y] R[petal_radius] F[feed_rate]
}

// Move to safe height and return to center
G0 Z[z_safe]
G0 X[center_x] Y[center_y] 