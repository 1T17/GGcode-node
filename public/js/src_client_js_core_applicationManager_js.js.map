{"version":3,"file":"src_client_js_core_applicationManager_js.js","mappings":"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","sources":["webpack://ggcode-compiler/./src/client/js/config/configuratorSystem.js","webpack://ggcode-compiler/./src/client/js/configurator/index.js","webpack://ggcode-compiler/./src/client/js/configurator/parser.js","webpack://ggcode-compiler/./src/client/js/configurator/renderer.js","webpack://ggcode-compiler/./src/client/js/configurator/validator.js","webpack://ggcode-compiler/./src/client/js/core/applicationManager.js","webpack://ggcode-compiler/./src/client/js/core/compilationSystem.js","webpack://ggcode-compiler/./src/client/js/editor/annotations.js","webpack://ggcode-compiler/./src/client/js/editor/monaco.js","webpack://ggcode-compiler/./src/client/js/ui/aiManager.js","webpack://ggcode-compiler/./src/client/js/ui/exampleManager.js","webpack://ggcode-compiler/./src/client/js/ui/fileOperations.js","webpack://ggcode-compiler/./src/client/js/ui/fileOps.js","webpack://ggcode-compiler/./src/client/js/ui/fileTreeViewer.js","webpack://ggcode-compiler/./src/client/js/ui/helpSystem.js","webpack://ggcode-compiler/./src/client/js/ui/modalManager.js","webpack://ggcode-compiler/./src/client/js/ui/modals.js","webpack://ggcode-compiler/./src/client/js/ui/navigation.js"],"sourcesContent":["/**\n * Configurator System Module\n * Handles configurator-related operations\n */\n\nclass ConfiguratorSystem {\n  constructor(configuratorManager, editorManager) {\n    this.configuratorManager = configuratorManager;\n    this.editorManager = editorManager;\n  }\n\n  /**\n   * Initialize configurator\n   */\n  initialize(options) {\n    if (this.configuratorManager) {\n      this.configuratorManager.initialize(options);\n    }\n  }\n\n  /**\n   * Show configurator\n   */\n  showConfigurator() {\n    if (this.configuratorManager) {\n      const ggcode = this.editorManager\n        ? this.editorManager.getInputValue()\n        : '';\n      this.configuratorManager.showConfigurator(ggcode);\n    } else {\n      console.error('ConfiguratorManager module not available');\n    }\n  }\n\n  /**\n   * Handle configurator compile action\n   */\n  handleConfiguratorCompile(result) {\n    console.log('Configurator compile completed:', result);\n  }\n\n  /**\n   * Handle configurator save action\n   */\n  handleConfiguratorSave(result) {\n    console.log('Configurator save completed:', result);\n  }\n\n  /**\n   * Configurator save and compile\n   */\n  configuratorSaveAndCompile() {\n    if (this.configuratorManager) {\n      const ggcode = this.editorManager\n        ? this.editorManager.getInputValue()\n        : '';\n      this.configuratorManager.handleSaveAndCompile(\n        ggcode,\n        (code) => this.editorManager?.setInputValue(code),\n        () => {\n          if (window.submitGGcode) {\n            window.submitGGcode(new Event('submit'));\n          }\n        }\n      );\n    } else {\n      console.error('ConfiguratorManager module not available');\n    }\n  }\n\n  /**\n   * Configurator compile only\n   */\n  configuratorCompileOnly() {\n    if (this.configuratorManager) {\n      const ggcode = this.editorManager\n        ? this.editorManager.getInputValue()\n        : '';\n      this.configuratorManager.handleCompileOnly(ggcode, (code) => {\n        if (window.submitGGcode) {\n          window.submitGGcode(new Event('submit'), code);\n        }\n      });\n    } else {\n      console.error('ConfiguratorManager module not available');\n    }\n  }\n\n  /**\n   * Close configurator\n   */\n  closeConfigurator() {\n    if (this.configuratorManager) {\n      this.configuratorManager.closeConfigurator();\n    }\n    const modal = document.getElementById('configuratorModal');\n    if (modal) {\n      modal.style.display = 'none';\n    }\n  }\n}\n\nexport default ConfiguratorSystem;\n","/**\n * Configurator Manager\n * Main configurator module that coordinates parsing, rendering, and validation\n */\n\nimport ConfiguratorParser from './parser.js';\nimport ConfiguratorRenderer from './renderer.js';\nimport ConfiguratorValidator from './validator.js';\n\nclass ConfiguratorManager {\n  constructor() {\n    this.configVars = [];\n    this.currentValues = {};\n    this.modalElement = null;\n    this.contentElement = null;\n    this.formElement = null;\n    this.onCompile = null;\n    this.onSave = null;\n  }\n\n  /**\n   * Initialize the configurator manager\n   * @param {Object} options - Configuration options\n   * @param {string} options.modalId - ID of the modal element\n   * @param {string} options.contentId - ID of the content container\n   * @param {Function} options.onCompile - Callback for compilation\n   * @param {Function} options.onSave - Callback for saving\n   */\n  initialize(options = {}) {\n    const {\n      modalId = 'configuratorModal',\n      contentId = 'configuratorContent',\n      onCompile = null,\n      onSave = null,\n    } = options;\n\n    this.modalElement = document.getElementById(modalId);\n    this.contentElement = document.getElementById(contentId);\n    this.onCompile = onCompile;\n    this.onSave = onSave;\n\n    if (!this.modalElement || !this.contentElement) {\n      console.error('Configurator: Required DOM elements not found');\n      return false;\n    }\n\n    // Add CSS styles\n    this._addStyles();\n\n    return true;\n  }\n\n  /**\n   * Show configurator modal with GGcode content\n   * @param {string} ggcode - GGcode content to parse\n   */\n  showConfigurator(ggcode) {\n    if (!this.modalElement || !this.contentElement) {\n      console.error('Configurator not initialized');\n      return;\n    }\n\n    // Parse configurator variables from GGcode\n    this.configVars = ConfiguratorParser.parseConfiguratorVars(ggcode);\n    this.currentValues = ConfiguratorParser.getDefaultValues(this.configVars);\n\n    // Render the form\n    const formHtml = ConfiguratorRenderer.renderConfiguratorForm(\n      this.configVars\n    );\n    this.contentElement.innerHTML = formHtml;\n\n    // Get form element and setup validation\n    this.formElement = document.getElementById('configuratorForm');\n    if (this.formElement) {\n      ConfiguratorValidator.setupRealTimeValidation(\n        this.formElement,\n        this.configVars\n      );\n    }\n\n    // Show modal\n    this.modalElement.style.display = 'flex';\n    this.modalElement.classList.add('configurator-fade-in');\n  }\n\n  /**\n   * Close configurator modal\n   */\n  closeConfigurator() {\n    if (this.modalElement) {\n      this.modalElement.style.display = 'none';\n      this.modalElement.classList.remove('configurator-fade-in');\n    }\n  }\n\n  /**\n   * Get current form values\n   * @returns {Object} Current form values\n   */\n  getFormValues() {\n    if (!this.formElement) {\n      return {};\n    }\n\n    return ConfiguratorValidator.getFormValues(\n      this.formElement,\n      this.configVars\n    );\n  }\n\n  /**\n   * Validate current form\n   * @returns {Object} Validation result\n   */\n  validateForm() {\n    if (!this.formElement) {\n      return {\n        isValid: false,\n        errors: { general: 'Form not available' },\n        values: {},\n      };\n    }\n\n    return ConfiguratorValidator.validateForm(\n      this.formElement,\n      this.configVars\n    );\n  }\n\n  /**\n   * Save form values and update GGcode\n   * @param {string} originalGGcode - Original GGcode content\n   * @returns {Object} Result with updated code and status\n   */\n  saveAndUpdateGGcode(originalGGcode) {\n    const validation = this.validateForm();\n\n    if (!validation.isValid) {\n      return {\n        success: false,\n        error: 'Form validation failed',\n        errors: validation.errors,\n      };\n    }\n\n    const values = validation.values;\n    const updateResult = ConfiguratorParser.updateGGcodeWithValues(\n      originalGGcode,\n      values\n    );\n\n    // Log any variables not found\n    if (updateResult.notFound.length > 0) {\n      console.warn(\n        '[Configurator] Variables not found in code:',\n        updateResult.notFound\n      );\n    }\n\n    // Update current values\n    this.currentValues = values;\n\n    return {\n      success: true,\n      code: updateResult.code,\n      foundVars: updateResult.foundVars,\n      notFound: updateResult.notFound,\n      values: values,\n    };\n  }\n\n  /**\n   * Compile with current form values without saving\n   * @param {string} originalGGcode - Original GGcode content\n   * @returns {Object} Result with temporary code for compilation\n   */\n  compileWithCurrentValues(originalGGcode) {\n    const validation = this.validateForm();\n\n    if (!validation.isValid) {\n      return {\n        success: false,\n        error: 'Form validation failed',\n        errors: validation.errors,\n      };\n    }\n\n    const values = validation.values;\n    const updateResult = ConfiguratorParser.updateGGcodeWithValues(\n      originalGGcode,\n      values\n    );\n\n    return {\n      success: true,\n      code: updateResult.code,\n      values: values,\n    };\n  }\n\n  /**\n   * Handle save and compile action\n   * @param {string} originalGGcode - Original GGcode content\n   * @param {Function} editorSetValue - Function to update editor\n   * @param {Function} compileFunction - Function to trigger compilation\n   */\n  async handleSaveAndCompile(originalGGcode, editorSetValue, compileFunction) {\n    const result = this.saveAndUpdateGGcode(originalGGcode);\n\n    if (!result.success) {\n      console.error('[Configurator] Save failed:', result.error);\n      this._showErrorMessage('Failed to save: ' + result.error);\n      return;\n    }\n\n    //console.log('[Configurator] Saving values from form:', result.values);\n    //console.log('[Configurator] Updated code:', result.code);\n\n    // Update editor\n    if (editorSetValue) {\n      editorSetValue(result.code);\n      console.log('[Configurator] Editor updated with new values.');\n    }\n\n    // Close modal\n    this.closeConfigurator();\n\n    // Trigger compilation\n    if (compileFunction) {\n      try {\n        await compileFunction();\n      } catch (error) {\n        console.error('[Configurator] Compilation failed:', error);\n      }\n    }\n\n    // Call save callback if provided\n    if (this.onSave) {\n      this.onSave(result);\n    }\n  }\n\n  /**\n   * Handle compile only action\n   * @param {string} originalGGcode - Original GGcode content\n   * @param {Function} compileFunction - Function to compile code\n   */\n  async handleCompileOnly(originalGGcode, compileFunction) {\n    const result = this.compileWithCurrentValues(originalGGcode);\n\n    if (!result.success) {\n      console.error('[Configurator] Compile preparation failed:', result.error);\n      this._showErrorMessage('Failed to prepare compilation: ' + result.error);\n      return;\n    }\n\n    //console.log('[Configurator] Compiling with values:', result.values);\n\n    // Compile with temporary code\n    if (compileFunction) {\n      try {\n        await compileFunction(result.code);\n      } catch (error) {\n        console.error('[Configurator] Compilation failed:', error);\n        this._showErrorMessage('Compilation failed: ' + error.message);\n      }\n    }\n\n    // Call compile callback if provided\n    if (this.onCompile) {\n      this.onCompile(result);\n    }\n  }\n\n  /**\n   * Get configurator variables\n   * @returns {Array} Array of configurator variables\n   */\n  getConfigVars() {\n    return this.configVars;\n  }\n\n  /**\n   * Get current values\n   * @returns {Object} Current form values\n   */\n  getCurrentValues() {\n    return this.currentValues;\n  }\n\n  /**\n   * Check if configurator has variables\n   * @returns {boolean} True if has variables\n   */\n  hasVariables() {\n    return this.configVars.length > 0;\n  }\n\n  /**\n   * Reset configurator state\n   */\n  reset() {\n    this.configVars = [];\n    this.currentValues = {};\n    this.formElement = null;\n\n    if (this.contentElement) {\n      this.contentElement.innerHTML = '';\n    }\n  }\n\n  /**\n   * Show error message in the configurator\n   * @param {string} message - Error message\n   * @private\n   */\n  _showErrorMessage(message) {\n    if (this.contentElement) {\n      const errorHtml = ConfiguratorRenderer.renderErrorMessage(message);\n      const errorDiv = document.createElement('div');\n      errorDiv.innerHTML = errorHtml;\n      this.contentElement.insertBefore(\n        errorDiv,\n        this.contentElement.firstChild\n      );\n\n      // Remove error after 5 seconds\n      setTimeout(() => {\n        if (errorDiv.parentNode) {\n          errorDiv.parentNode.removeChild(errorDiv);\n        }\n      }, 5000);\n    }\n  }\n\n  /**\n   * Add CSS styles for configurator\n   * @private\n   */\n  _addStyles() {\n    const styleId = 'configurator-styles';\n    if (document.getElementById(styleId)) return;\n\n    const style = document.createElement('style');\n    style.id = styleId;\n    style.textContent = `\n      ${ConfiguratorRenderer.getValidationStyles()}\n      ${ConfiguratorRenderer.getAnimationStyles()}\n    `;\n\n    document.head.appendChild(style);\n  }\n}\n\nexport default ConfiguratorManager;\n","/**\n * Configurator Variable Parser\n * Parses GGcode to extract configurator variables and their annotations\n */\n\nclass ConfiguratorParser {\n  /**\n   * Parse GGcode to extract configurator variables\n   * @param {string} ggcode - GGcode content to parse\n   * @returns {Array} Array of configurator variable objects\n   */\n  static parseConfiguratorVars(ggcode) {\n    const lines = ggcode.split(/\\r?\\n/);\n    const configVars = [];\n\n    for (const line of lines) {\n      const match = line.match(\n        /^\\s*let\\s+([a-zA-Z_][a-zA-Z0-9_]*)\\s*=\\s*([^/]+?)\\s*\\/\\/\\/\\s*(.*)$/\n      );\n      if (!match) continue;\n\n      const name = match[1];\n      const rawValue = match[2].trim();\n      let tag = match[3].trim();\n      let description = '';\n\n      // Extract description if present (after //)\n      const descIdx = tag.indexOf('//');\n      if (descIdx !== -1) {\n        description = tag.slice(descIdx + 2).trim();\n        tag = tag.slice(0, descIdx).trim();\n      }\n\n      const variable = this._parseVariableTag(name, rawValue, tag, description);\n      if (variable) {\n        configVars.push(variable);\n      }\n    }\n\n    return configVars;\n  }\n\n  /**\n   * Parse a variable tag to determine type and parameters\n   * @param {string} name - Variable name\n   * @param {string} rawValue - Raw variable value\n   * @param {string} tag - Annotation tag\n   * @param {string} description - Variable description\n   * @returns {Object|null} Parsed variable object or null if invalid\n   * @private\n   */\n  static _parseVariableTag(name, rawValue, tag, description) {\n    let type,\n      params = {},\n      defaultValue = rawValue;\n\n    if (tag.startsWith('@number')) {\n      type = 'number';\n      const numMatch = tag.match(\n        /@number\\s+(-?\\d+(?:\\.\\d+)?)(?:\\s+|\\s*to\\s*)(-?\\d+(?:\\.\\d+)?)/\n      );\n      if (numMatch) {\n        params.min = parseFloat(numMatch[1]);\n        params.max = parseFloat(numMatch[2]);\n      }\n      defaultValue = parseFloat(rawValue);\n    } else if (tag.startsWith('@check')) {\n      type = 'check';\n      defaultValue = rawValue == '1' || rawValue.toLowerCase() == 'true';\n    } else if (tag.startsWith('@selction')) {\n      type = 'selection';\n      const selMatch = tag.match(/@selction\\s+([\\d, ]+)/);\n      if (selMatch) {\n        params.options = selMatch[1]\n          .split(',')\n          .map((s) => s.trim())\n          .filter(Boolean);\n      }\n      defaultValue = rawValue;\n    } else if (tag.startsWith('@text')) {\n      type = 'text';\n      const textMatch = tag.match(/@text\\s+(\\d+)(?:\\s+max\\s*(\\d+))?/);\n      if (textMatch) {\n        params.rows = parseInt(textMatch[1]);\n        if (textMatch[2]) params.max = parseInt(textMatch[2]);\n      }\n      defaultValue = rawValue;\n    } else {\n      return null; // skip unknown tags\n    }\n\n    return { name, type, defaultValue, params, description };\n  }\n\n  /**\n   * Update GGcode with new variable values\n   * @param {string} ggcode - Original GGcode\n   * @param {Object} values - New variable values\n   * @returns {Object} Object with updated code and found variables\n   */\n  static updateGGcodeWithValues(ggcode, values) {\n    const lines = ggcode.split(/\\r?\\n/);\n    let foundVars = {};\n\n    const newLines = lines.map((line) => {\n      const match = line.match(\n        /^\\s*let\\s+([a-zA-Z_][a-zA-Z0-9_]*)\\s*=\\s*([^/]+)(\\/\\/\\/)/\n      );\n      if (!match) return line;\n\n      const name = match[1];\n      if (Object.prototype.hasOwnProperty.call(values, name)) {\n        foundVars[name] = true;\n        // Replace value, keep tag and description\n        const newLine = line.replace(\n          /(let\\s+[a-zA-Z_][a-zA-Z0-9_]*\\s*=\\s*)([^/]+)(\\/\\/\\/)/,\n          function (_, p1, p2, p3) {\n            return p1 + values[name] + ' ' + p3;\n          }\n        );\n        return newLine;\n      }\n      return line;\n    });\n\n    // Log any variables not found in code\n    const notFound = Object.keys(values).filter((name) => !foundVars[name]);\n\n    return {\n      code: newLines.join('\\n'),\n      foundVars,\n      notFound,\n    };\n  }\n\n  /**\n   * Validate variable value against its constraints\n   * @param {Object} variable - Variable definition\n   * @param {*} value - Value to validate\n   * @returns {Object} Validation result with isValid and error message\n   */\n  static validateVariableValue(variable, value) {\n    const result = { isValid: true, error: null };\n\n    switch (variable.type) {\n      case 'number': {\n        const numValue = parseFloat(value);\n        if (isNaN(numValue)) {\n          result.isValid = false;\n          result.error = 'Must be a valid number';\n        } else if (\n          variable.params.min !== undefined &&\n          numValue < variable.params.min\n        ) {\n          result.isValid = false;\n          result.error = `Must be at least ${variable.params.min}`;\n        } else if (\n          variable.params.max !== undefined &&\n          numValue > variable.params.max\n        ) {\n          result.isValid = false;\n          result.error = `Must be at most ${variable.params.max}`;\n        }\n        break;\n      }\n\n      case 'text':\n        if (variable.params.max && value.length > variable.params.max) {\n          result.isValid = false;\n          result.error = `Must be at most ${variable.params.max} characters`;\n        }\n        break;\n\n      case 'selection':\n        if (\n          variable.params.options &&\n          !variable.params.options.includes(value)\n        ) {\n          result.isValid = false;\n          result.error = 'Must be one of the available options';\n        }\n        break;\n\n      case 'check':\n        // Boolean values are always valid\n        break;\n    }\n\n    return result;\n  }\n\n  /**\n   * Get default values for all configurator variables\n   * @param {Array} configVars - Array of configurator variables\n   * @returns {Object} Object with variable names as keys and default values\n   */\n  static getDefaultValues(configVars) {\n    const defaults = {};\n    for (const variable of configVars) {\n      defaults[variable.name] = variable.defaultValue;\n    }\n    return defaults;\n  }\n\n  /**\n   * Convert form values to appropriate types\n   * @param {Object} formValues - Raw form values\n   * @param {Array} configVars - Array of configurator variables\n   * @returns {Object} Typed values\n   */\n  static convertFormValues(formValues, configVars) {\n    const converted = {};\n    const varMap = {};\n\n    // Create a map for quick lookup\n    for (const variable of configVars) {\n      varMap[variable.name] = variable;\n    }\n\n    for (const [name, value] of Object.entries(formValues)) {\n      const variable = varMap[name];\n      if (!variable) {\n        converted[name] = value;\n        continue;\n      }\n\n      switch (variable.type) {\n        case 'number':\n          converted[name] = parseFloat(value);\n          break;\n        case 'check':\n          converted[name] = value ? 1 : 0;\n          break;\n        default:\n          converted[name] = value;\n      }\n    }\n\n    return converted;\n  }\n\n  /**\n   * Get variable by name\n   * @param {Array} configVars - Array of configurator variables\n   * @param {string} name - Variable name to find\n   * @returns {Object|null} Variable object or null if not found\n   */\n  static getVariableByName(configVars, name) {\n    return configVars.find((variable) => variable.name === name) || null;\n  }\n\n  /**\n   * Get variables by type\n   * @param {Array} configVars - Array of configurator variables\n   * @param {string} type - Variable type to filter by\n   * @returns {Array} Array of variables of the specified type\n   */\n  static getVariablesByType(configVars, type) {\n    return configVars.filter((variable) => variable.type === type);\n  }\n}\n\nexport default ConfiguratorParser;\n","/**\n * Configurator Form Renderer\n * Handles rendering of configurator forms and UI components\n */\n\nclass ConfiguratorRenderer {\n  /**\n   * Render configurator form HTML\n   * @param {Array} configVars - Array of configurator variables\n   * @returns {string} HTML string for the form\n   */\n  static renderConfiguratorForm(configVars) {\n    if (!Array.isArray(configVars) || configVars.length === 0) {\n      return this._renderEmptyState();\n    }\n\n    return this._renderForm(configVars);\n  }\n\n  /**\n   * Render empty state when no configurator variables are found\n   * @returns {string} HTML for empty state\n   * @private\n   */\n  static _renderEmptyState() {\n    return `<div style=\"color:#aaa; padding:2em;\">\n      <div style=\"font-size:1.1em; font-weight:600; color:#ff0000; margin-bottom:10px;\">No configurable variables found in GGcode.</div>\n      <div style=\"margin-top:10px; color:#ccc; font-size:0.98em;\">\n        <p>\n          <strong>How to add Configurator support:</strong>\n        </p>\n        <ul style=\"margin-left:1.2em; padding-left:0;\">\n          <li>\n            Add <code>/// @number min max</code> after a <code>let</code> variable to create a number input.<br>\n            Example: <code>let width = 10 /// @number 1 100 // Part width in mm</code>\n          </li>\n          <li>\n            Add <code>/// @check</code> for a checkbox (boolean).<br>\n            Example: <code>let enabled = 1 /// @check // Enable feature</code>\n          </li>\n          <li>\n            Add <code>/// @selction 1,2,3</code> for a dropdown with options.<br>\n            Example: <code>let mode = 2 /// @selction 1,2,3 // Select mode</code>\n          </li>\n          <li>\n            Add <code>/// @text rows [max N]</code> for a text input or textarea.<br>\n            Example: <code>let notes = \"\" /// @text 3 max 120 // Notes for operator</code>\n          </li>\n          <li>\n            To add a field title/description, append <code>// Title here</code> at the end of the line.\n          </li>\n        </ul>\n        <div style=\"margin-top:8px; color:#aaa; font-size:0.93em;\">\n          Example:<br>\n          <code>let speed = 1200 /// @number 500 3000 // Spindle speed (RPM)</code>\n        </div>\n        <div style=\"margin-top:14px; color:#b0b0b0; font-size:0.97em;\">\n          <strong>How to use the Configurator:</strong><br>\n          When you add variables with configurator tags, they will appear here for easy editing.<br>\n        </div>\n      </div>\n    </div>`;\n  }\n\n  /**\n   * Render the main configurator form\n   * @param {Array} configVars - Array of configurator variables\n   * @returns {string} HTML for the form\n   * @private\n   */\n  static _renderForm(configVars) {\n    let html = `\n      <div style=\"background:#23272e; box-shadow:0 2px 16px #0002; padding:18px 18px 8px 18px; max-width:38vw; margin:0 auto;\">\n        <div style=\"font-size:1.1em; font-weight:600; color:#fff; margin-bottom:10px;\">Configurator</div>\n        <div style=\"color:#ccc; font-size:0.98em; margin-bottom:12px;\">\n          <ul style=\"margin:0 0 0 1.2em; padding:0; list-style:disc;\">\n            <li>Edit variables below before compiling.</li>\n            <li>Numbers: range-limited. Checks: on/off. Select: preset options. Text: custom input.</li>\n          </ul>\n          <div style=\"margin-top:6px; color:#aaa; font-size:0.93em;\">\n            <div>\n              <strong>Press <span style=\"color:#fff;\">Save</span></strong> to save your changes and apply them to the GGcode source.<br>\n              Or just press <strong><span style=\"color:#fff;\">Compile</span></strong> to test the results only, without updating your main GGcode.\n            </div>\n          </div>\n        </div>\n        <form id=\"configuratorForm\" style=\"display:flex; flex-direction:column; gap:16px;\">`;\n\n    for (const variable of configVars) {\n      html += this._renderFormField(variable);\n    }\n\n    html += '</form>';\n    html +=\n      '<hr style=\"border: none; border-top: 1px solid #333; margin: 18px 0 8px 0;\">';\n    html += '</div>';\n\n    return html;\n  }\n\n  /**\n   * Render a single form field based on variable type\n   * @param {Object} variable - Variable configuration\n   * @returns {string} HTML for the form field\n   * @private\n   */\n  static _renderFormField(variable) {\n    let html = `<div style=\"display:flex; align-items:center; gap:8px; padding:4px 0;\">`;\n    html += `<label style=\"color:#e0e0e0; font-weight:500; font-size:0.9em; min-width:80px; text-align:right;\">${variable.name}:</label>`;\n\n    switch (variable.type) {\n      case 'number':\n        html += this._renderNumberField(variable);\n        break;\n      case 'check':\n        html += this._renderCheckboxField(variable);\n        break;\n      case 'selection':\n        html += this._renderSelectionField(variable);\n        break;\n      case 'text':\n        html += this._renderTextField(variable);\n        break;\n      default:\n        html += `<div style=\"color:#ff6b6b;\">Unknown field type: ${variable.type}</div>`;\n    }\n\n    html += `</div>`;\n    return html;\n  }\n\n  /**\n   * Render number input field\n   * @param {Object} variable - Variable configuration\n   * @returns {string} HTML for number field\n   * @private\n   */\n  static _renderNumberField(variable) {\n    const inputStyles = `margin-left:0; width:140px; padding:6px 8px; border-radius:4px; border:1px solid #444; background:#181b20; color:#fff; font-size:0.9em; transition:border 0.2s; outline:none;`;\n    const focusBlurHandlers = `onfocus=\"this.style.borderColor='#0074D9'\" onblur=\"this.style.borderColor='#444'; if(this.value !== '' && !isNaN(this.value)) { this.value = Math.max(this.min, Math.min(this.max, this.value)); }\"`;\n\n    let numberInputHtml = `<input type=\"number\" title=\"${variable.description}\" name=\"${variable.name}\" value=\"${variable.defaultValue}\" min=\"${variable.params.min ?? ''}\" max=\"${variable.params.max ?? ''}\" style=\"${inputStyles}\" ${focusBlurHandlers}>`;\n\n    let minMaxHtml = '';\n    if (\n      variable.params.min !== undefined &&\n      variable.params.max !== undefined\n    ) {\n      minMaxHtml = ` <span style=\"color:#ffb347; font-size:0.85em; margin-left:6px;\">[${variable.params.min}-${variable.params.max}]</span>`;\n    }\n\n    return `<div style=\"display:flex; align-items:center; gap:6px; flex:1;\">${numberInputHtml}${minMaxHtml}</div>`;\n  }\n\n  /**\n   * Render checkbox field\n   * @param {Object} variable - Variable configuration\n   * @returns {string} HTML for checkbox field\n   * @private\n   */\n  static _renderCheckboxField(variable) {\n    const checked = variable.defaultValue ? 'checked' : '';\n    return `<div style=\"display:flex; align-items:center; gap:6px; flex:1;\">\n      <input title=\"${variable.description}\" type=\"checkbox\" name=\"${variable.name}\" ${checked} style=\"margin-left:0; width:18px; height:18px; accent-color:#0074D9;\">\n    </div>`;\n  }\n\n  /**\n   * Render selection dropdown field\n   * @param {Object} variable - Variable configuration\n   * @returns {string} HTML for selection field\n   * @private\n   */\n  static _renderSelectionField(variable) {\n    const selectStyles = `margin-left:0; width:160px; padding:6px 8px; border-radius:4px; border:1px solid #444; background:#181b20; color:#fff; font-size:0.9em; transition:border 0.2s; outline:none;`;\n    const focusBlurHandlers = `onfocus=\"this.style.borderColor='#0074D9'\" onblur=\"this.style.borderColor='#444'\"`;\n\n    let html = `<div style=\"display:flex; align-items:center; gap:6px; flex:1;\">\n      <select title=\"${variable.description}\" name=\"${variable.name}\" style=\"${selectStyles}\" ${focusBlurHandlers}>`;\n\n    for (const option of variable.params.options || []) {\n      const selected = option == variable.defaultValue ? ' selected' : '';\n      html += `<option value=\"${option}\"${selected}>${option}</option>`;\n    }\n\n    html += `</select></div>`;\n    return html;\n  }\n\n  /**\n   * Render text input or textarea field\n   * @param {Object} variable - Variable configuration\n   * @returns {string} HTML for text field\n   * @private\n   */\n  static _renderTextField(variable) {\n    const baseStyles = `margin-left:0; padding:6px 8px; border-radius:4px; border:1px solid #444; background:#181b20; color:#fff; font-size:0.9em; transition:border 0.2s; outline:none;`;\n    const focusBlurHandlers = `onfocus=\"this.style.borderColor='#0074D9'\" onblur=\"this.style.borderColor='#444'\"`;\n\n    if (variable.params.rows && variable.params.rows > 1) {\n      // Textarea for multi-line text\n      const textareaStyles = `${baseStyles} width:100%; min-width:160px; max-width:100%; resize:vertical;`;\n      return `<div style=\"display:flex; align-items:flex-start; gap:6px; flex:1;\">\n        <textarea title=\"${variable.description}\" name=\"${variable.name}\" rows=\"${variable.params.rows}\" maxlength=\"${variable.params.max ?? ''}\" style=\"${textareaStyles}\" ${focusBlurHandlers}>${variable.defaultValue}</textarea>\n      </div>`;\n    } else {\n      // Single-line text input\n      const inputStyles = `${baseStyles} width:100%; min-width:160px; max-width:100%;`;\n      let html = `<div style=\"display:flex; align-items:center; gap:6px; flex:1;\">\n        <input type=\"text\" title=\"${variable.description}\" name=\"${variable.name}\" value=\"${variable.defaultValue}\" maxlength=\"${variable.params.max ?? ''}\" style=\"${inputStyles}\" ${focusBlurHandlers}>`;\n\n      if (variable.params.max) {\n        html += ` <span style=\"color:#888; font-size:0.85em;\">[max ${variable.params.max}]</span>`;\n      }\n\n      html += `</div>`;\n      return html;\n    }\n  }\n\n  /**\n   * Create form validation styles\n   * @returns {string} CSS styles for form validation\n   */\n  static getValidationStyles() {\n    return `\n      .configurator-field-error {\n        border: 2px solid #ff6b6b !important;\n      }\n      .configurator-field-valid {\n        border: 1px solid #444 !important;\n      }\n      .configurator-error-message {\n        color: #ff6b6b;\n        font-size: 0.8em;\n        margin-top: 2px;\n      }\n    `;\n  }\n\n  /**\n   * Render validation error message\n   * @param {string} message - Error message\n   * @returns {string} HTML for error message\n   */\n  static renderErrorMessage(message) {\n    return `<div class=\"configurator-error-message\">${message}</div>`;\n  }\n\n  /**\n   * Render success message\n   * @param {string} message - Success message\n   * @returns {string} HTML for success message\n   */\n  static renderSuccessMessage(message) {\n    return `<div style=\"color:#51cf66; font-size:0.9em; padding:8px; background:#1a4d3a; border-radius:4px; margin:8px 0;\">\n      ${message}\n    </div>`;\n  }\n\n  /**\n   * Render loading indicator\n   * @param {string} message - Loading message\n   * @returns {string} HTML for loading indicator\n   */\n  static renderLoadingIndicator(message = 'Loading...') {\n    return `<div style=\"color:#aaa; padding:2em; text-align:center;\">\n      <div style=\"font-size:1.1em; margin-bottom:10px;\">${message}</div>\n      <div style=\"width:20px; height:20px; border:2px solid #444; border-top:2px solid #0074D9; border-radius:50%; animation:spin 1s linear infinite; margin:0 auto;\"></div>\n    </div>`;\n  }\n\n  /**\n   * Get CSS animations for the configurator\n   * @returns {string} CSS animation styles\n   */\n  static getAnimationStyles() {\n    return `\n      @keyframes spin {\n        0% { transform: rotate(0deg); }\n        100% { transform: rotate(360deg); }\n      }\n      .configurator-fade-in {\n        animation: fadeIn 0.3s ease-in;\n      }\n      @keyframes fadeIn {\n        from { opacity: 0; }\n        to { opacity: 1; }\n      }\n    `;\n  }\n}\n\nexport default ConfiguratorRenderer;\n","/**\n * Configurator Form Validator\n * Handles validation of configurator form inputs and values\n */\n\nclass ConfiguratorValidator {\n  /**\n   * Validate entire configurator form\n   * @param {HTMLFormElement} form - Form element to validate\n   * @param {Array} configVars - Array of configurator variables\n   * @returns {Object} Validation result with isValid flag and errors\n   */\n  static validateForm(form, configVars) {\n    const result = {\n      isValid: true,\n      errors: {},\n      values: {},\n    };\n\n    if (!form || !configVars) {\n      result.isValid = false;\n      result.errors.general = 'Form or configuration variables not provided';\n      return result;\n    }\n\n    // Create a map for quick variable lookup\n    const varMap = {};\n    for (const variable of configVars) {\n      varMap[variable.name] = variable;\n    }\n\n    // Validate each form element\n    for (const element of form.elements) {\n      if (!element.name) continue;\n\n      const variable = varMap[element.name];\n      if (!variable) continue;\n\n      const value = this._getElementValue(element);\n      const validation = this.validateVariableValue(variable, value);\n\n      result.values[element.name] = value;\n\n      if (!validation.isValid) {\n        result.isValid = false;\n        result.errors[element.name] = validation.error;\n        this._markElementAsInvalid(element, validation.error);\n      } else {\n        this._markElementAsValid(element);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n   * Validate a single variable value against its constraints\n   * @param {Object} variable - Variable definition\n   * @param {*} value - Value to validate\n   * @returns {Object} Validation result with isValid and error message\n   */\n  static validateVariableValue(variable, value) {\n    const result = { isValid: true, error: null };\n\n    if (!variable) {\n      result.isValid = false;\n      result.error = 'Variable definition not found';\n      return result;\n    }\n\n    switch (variable.type) {\n      case 'number':\n        return this._validateNumberValue(variable, value);\n      case 'text':\n        return this._validateTextValue(variable, value);\n      case 'selection':\n        return this._validateSelectionValue(variable, value);\n      case 'check':\n        return this._validateCheckValue(variable, value);\n      default:\n        result.isValid = false;\n        result.error = `Unknown variable type: ${variable.type}`;\n    }\n\n    return result;\n  }\n\n  /**\n   * Validate number value\n   * @param {Object} variable - Variable definition\n   * @param {*} value - Value to validate\n   * @returns {Object} Validation result\n   * @private\n   */\n  static _validateNumberValue(variable, value) {\n    const result = { isValid: true, error: null };\n\n    // Convert to number\n    const numValue = parseFloat(value);\n\n    if (isNaN(numValue)) {\n      result.isValid = false;\n      result.error = 'Must be a valid number';\n      return result;\n    }\n\n    // Check minimum value\n    if (variable.params.min !== undefined && numValue < variable.params.min) {\n      result.isValid = false;\n      result.error = `Must be at least ${variable.params.min}`;\n      return result;\n    }\n\n    // Check maximum value\n    if (variable.params.max !== undefined && numValue > variable.params.max) {\n      result.isValid = false;\n      result.error = `Must be at most ${variable.params.max}`;\n      return result;\n    }\n\n    return result;\n  }\n\n  /**\n   * Validate text value\n   * @param {Object} variable - Variable definition\n   * @param {*} value - Value to validate\n   * @returns {Object} Validation result\n   * @private\n   */\n  static _validateTextValue(variable, value) {\n    const result = { isValid: true, error: null };\n\n    const stringValue = String(value);\n\n    // Check maximum length\n    if (variable.params.max && stringValue.length > variable.params.max) {\n      result.isValid = false;\n      result.error = `Must be at most ${variable.params.max} characters`;\n      return result;\n    }\n\n    return result;\n  }\n\n  /**\n   * Validate selection value\n   * @param {Object} variable - Variable definition\n   * @param {*} value - Value to validate\n   * @returns {Object} Validation result\n   * @private\n   */\n  static _validateSelectionValue(variable, value) {\n    const result = { isValid: true, error: null };\n\n    if (\n      variable.params.options &&\n      !variable.params.options.includes(String(value))\n    ) {\n      result.isValid = false;\n      result.error = 'Must be one of the available options';\n      return result;\n    }\n\n    return result;\n  }\n\n  /**\n   * Validate checkbox value\n   * @param {Object} variable - Variable definition\n   * @param {*} value - Value to validate\n   * @returns {Object} Validation result\n   * @private\n   */\n  static _validateCheckValue(_variable, _value) {\n    // Boolean values are always valid\n    return { isValid: true, error: null };\n  }\n\n  /**\n   * Get value from form element based on its type\n   * @param {HTMLElement} element - Form element\n   * @returns {*} Element value\n   * @private\n   */\n  static _getElementValue(element) {\n    if (element.type === 'checkbox') {\n      return element.checked;\n    }\n    return element.value;\n  }\n\n  /**\n   * Mark form element as invalid\n   * @param {HTMLElement} element - Form element\n   * @param {string} errorMessage - Error message\n   * @private\n   */\n  static _markElementAsInvalid(element, errorMessage) {\n    element.classList.remove('configurator-field-valid');\n    element.classList.add('configurator-field-error');\n    element.style.border = '2px solid #ff6b6b';\n\n    // Add or update error message\n    this._updateErrorMessage(element, errorMessage);\n  }\n\n  /**\n   * Mark form element as valid\n   * @param {HTMLElement} element - Form element\n   * @private\n   */\n  static _markElementAsValid(element) {\n    element.classList.remove('configurator-field-error');\n    element.classList.add('configurator-field-valid');\n    element.style.border = '1px solid #444';\n\n    // Remove error message\n    this._removeErrorMessage(element);\n  }\n\n  /**\n   * Update error message for form element\n   * @param {HTMLElement} element - Form element\n   * @param {string} message - Error message\n   * @private\n   */\n  static _updateErrorMessage(element, message) {\n    const errorId = `error-${element.name}`;\n    let errorElement = document.getElementById(errorId);\n\n    if (!errorElement) {\n      errorElement = document.createElement('div');\n      errorElement.id = errorId;\n      errorElement.className = 'configurator-error-message';\n      errorElement.style.cssText =\n        'color:#ff6b6b; font-size:0.8em; margin-top:2px;';\n\n      // Insert after the element's parent container\n      const container = element.closest('div');\n      if (container && container.parentNode) {\n        container.parentNode.insertBefore(errorElement, container.nextSibling);\n      }\n    }\n\n    errorElement.textContent = message;\n  }\n\n  /**\n   * Remove error message for form element\n   * @param {HTMLElement} element - Form element\n   * @private\n   */\n  static _removeErrorMessage(element) {\n    const errorId = `error-${element.name}`;\n    const errorElement = document.getElementById(errorId);\n    if (errorElement) {\n      errorElement.remove();\n    }\n  }\n\n  /**\n   * Validate form in real-time as user types\n   * @param {HTMLFormElement} form - Form element\n   * @param {Array} configVars - Array of configurator variables\n   */\n  static setupRealTimeValidation(form, configVars) {\n    if (!form || !configVars) return;\n\n    // Create a map for quick variable lookup\n    const varMap = {};\n    for (const variable of configVars) {\n      varMap[variable.name] = variable;\n    }\n\n    // Add event listeners to form elements\n    for (const element of form.elements) {\n      if (!element.name) continue;\n\n      const variable = varMap[element.name];\n      if (!variable) continue;\n\n      // Add input event listener for real-time validation\n      element.addEventListener('input', () => {\n        const value = this._getElementValue(element);\n        const validation = this.validateVariableValue(variable, value);\n\n        if (!validation.isValid) {\n          this._markElementAsInvalid(element, validation.error);\n        } else {\n          this._markElementAsValid(element);\n        }\n      });\n\n      // Add blur event listener for final validation\n      element.addEventListener('blur', () => {\n        const value = this._getElementValue(element);\n        const validation = this.validateVariableValue(variable, value);\n\n        if (!validation.isValid) {\n          this._markElementAsInvalid(element, validation.error);\n        } else {\n          this._markElementAsValid(element);\n        }\n      });\n\n      // Special handling for number inputs\n      if (element.type === 'number' && variable.type === 'number') {\n        element.addEventListener('blur', () => {\n          const value = parseFloat(element.value);\n          if (!isNaN(value)) {\n            // Clamp value to min/max range\n            const min =\n              variable.params.min !== undefined\n                ? variable.params.min\n                : -Infinity;\n            const max =\n              variable.params.max !== undefined\n                ? variable.params.max\n                : Infinity;\n            const clampedValue = Math.max(min, Math.min(max, value));\n\n            if (clampedValue !== value) {\n              element.value = clampedValue;\n            }\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * Clear all validation states from form\n   * @param {HTMLFormElement} form - Form element\n   */\n  static clearValidationStates(form) {\n    if (!form) return;\n\n    for (const element of form.elements) {\n      if (!element.name) continue;\n\n      element.classList.remove(\n        'configurator-field-error',\n        'configurator-field-valid'\n      );\n      element.style.border = '';\n      this._removeErrorMessage(element);\n    }\n  }\n\n  /**\n   * Get form values with type conversion\n   * @param {HTMLFormElement} form - Form element\n   * @param {Array} configVars - Array of configurator variables\n   * @returns {Object} Form values with proper types\n   */\n  static getFormValues(form, configVars) {\n    const values = {};\n\n    if (!form || !configVars) return values;\n\n    // Create a map for quick variable lookup\n    const varMap = {};\n    for (const variable of configVars) {\n      varMap[variable.name] = variable;\n    }\n\n    for (const element of form.elements) {\n      if (!element.name) continue;\n\n      const variable = varMap[element.name];\n      const rawValue = this._getElementValue(element);\n\n      if (variable) {\n        // Convert value based on variable type\n        switch (variable.type) {\n          case 'number':\n            values[element.name] = parseFloat(rawValue);\n            break;\n          case 'check':\n            values[element.name] = rawValue ? 1 : 0;\n            break;\n          default:\n            values[element.name] = rawValue;\n        }\n      } else {\n        values[element.name] = rawValue;\n      }\n    }\n\n    return values;\n  }\n}\n\nexport default ConfiguratorValidator;\n","/**\n * Application Manager Module\n * Coordinates all application modules and provides the main entry point\n */\n\nimport MonacoEditorManager from '../editor/monaco.js';\nimport GcodeAnnotationSystem from '../editor/annotations.js';\nimport ConfiguratorManager from '../configurator/index.js';\nimport * as VisualizerModules from '../visualizer/index.js';\nimport NavigationManager from '../ui/navigation.js';\nimport aiManager from '../ui/aiManager.js';\nimport aiCommands from '../ui/aiCommands.js';\nimport HelpSystem from '../ui/helpSystem.js';\nimport ExampleManager from '../ui/exampleManager.js';\nimport FileOperationsManager from '../ui/fileOperations.js';\nimport CompilationSystem from './compilationSystem.js';\nimport ModalManagerWrapper from '../ui/modalManager.js';\nimport ConfiguratorSystem from '../config/configuratorSystem.js';\nimport storageManager from '../utils/storageManager.js';\n\nclass ApplicationManager {\n  constructor() {\n    this.editorManager = null;\n    this.annotationSystem = null;\n    this.configuratorManager = null;\n    this.visualizerModules = null;\n    this.navigationManager = null;\n    this.helpSystem = null;\n    this.exampleManager = null;\n    this.fileOperationsManager = null;\n    this.compilationSystem = null;\n    this.modalManager = null;\n    this.configuratorSystem = null;\n\n    // Legacy global variables for backward compatibility\n    this.monacoReady = false;\n    this.lastOpenedFilename = '';\n\n    // Track monaco ready state for deferred setting on CompilationSystem\n    this.pendingMonacoReady = false;\n  }\n\n  /**\n   * Initialize all application modules\n   */\n  async initializeApplication() {\n    // Initialize managers\n    this.editorManager = new MonacoEditorManager();\n    this.annotationSystem = new GcodeAnnotationSystem();\n    this.configuratorManager = new ConfiguratorManager();\n    this.visualizerModules = VisualizerModules;\n    this.navigationManager = new NavigationManager();\n\n    // Initialize UI managers\n    this.modalManager = new ModalManagerWrapper();\n    this.helpSystem = null; // Will be initialized when API manager is set\n    this.exampleManager = null; // Will be initialized when API manager is set\n    this.fileOperationsManager = new FileOperationsManager();\n    this.compilationSystem = null; // Will be initialized when API manager is set\n    this.configuratorSystem = new ConfiguratorSystem(\n      this.configuratorManager,\n      this.editorManager\n    );\n\n    // Initialize AI modules\n    aiManager.initialize();\n\n    // Make managers globally available for the functions\n    this.makeManagersGloballyAvailable();\n\n    // Load saved filename\n    this.lastOpenedFilename = storageManager.getLastFilename();\n\n    // Initialize annotation system\n    await this.annotationSystem.initialize();\n\n    // Initialize configurator\n    this.configuratorSystem.initialize({\n      modalId: 'configuratorModal',\n      contentId: 'configuratorContent',\n    });\n\n    // Initialize Monaco editor\n    await this.initializeMonacoEditor();\n\n    // Setup auto-compile checkbox\n    this.setupAutoCompileCheckbox();\n\n    // Setup file operations\n    this.setupFileOperations();\n  }\n\n  /**\n   * Initialize Monaco editor with modular approach\n   */\n  async initializeMonacoEditor() {\n    // Load saved content\n    const initialInput = storageManager.getInputContent();\n    const initialOutput = storageManager.getOutputContent();\n\n    await this.editorManager.initialize({\n      inputContainerId: 'editor',\n      outputContainerId: 'output',\n      initialInput: initialInput,\n      initialOutput: initialOutput,\n      onCompile: (event, customCode) => {\n        if (this.compilationSystem) {\n          return this.compilationSystem.submitGGcode(event, customCode);\n        } else {\n          console.warn('CompilationSystem not available for compile callback');\n          return false;\n        }\n      },\n      onAnnotationUpdate: (lineNumber, lineContent) =>\n        this.updateAnnotations(lineNumber, lineContent),\n    });\n\n    // Set up backward compatibility\n    const editors = this.editorManager.getEditors();\n    window.outputEditor = editors.output;\n    window.editor = editors.input;\n\n    this.monacoReady = true;\n    if (this.compilationSystem) {\n      this.compilationSystem.setMonacoReady(true);\n    } else {\n      this.pendingMonacoReady = true;\n    }\n\n    // Load auto-compile state\n    this.editorManager.loadAutoCompileState();\n\n    // Load last opened filename\n    this.lastOpenedFilename = this.editorManager.loadLastOpenedFilename();\n\n    // Setup auto-save\n    this.editorManager.setupAutoSave();\n  }\n\n  /**\n   * Setup auto-compile checkbox functionality\n   */\n  setupAutoCompileCheckbox() {\n    const autoCheckbox = document.getElementById('autoCompileCheckbox');\n    if (autoCheckbox) {\n      autoCheckbox.checked = this.editorManager\n        ? this.editorManager.loadAutoCompileState()\n        : false;\n\n      autoCheckbox.addEventListener('change', (e) => {\n        if (this.editorManager) {\n          this.editorManager.setAutoCompile(e.target.checked);\n        }\n      });\n    }\n  }\n\n  /**\n   * Setup file operations\n   */\n  setupFileOperations() {\n    const openBtn = document.getElementById('openGGcodeBtn');\n    const fileInput = document.getElementById('ggcodeFileInput');\n\n    if (openBtn && fileInput) {\n      openBtn.addEventListener('click', () => {\n        fileInput.value = '';\n        fileInput.click();\n      });\n\n      fileInput.addEventListener('change', (e) => {\n        const file = e.target.files[0];\n        if (!file) return;\n\n        const reader = new FileReader();\n        reader.onload = (evt) => {\n          if (this.editorManager) {\n            this.editorManager.setInputValue(evt.target.result);\n            this.editorManager.setLastOpenedFilename(file.name || '');\n            this.lastOpenedFilename = file.name || '';\n            if (this.compilationSystem) {\n              this.compilationSystem.submitGGcode(new Event('submit'));\n            } else {\n              // Fallback to global submitGGcode if compilationSystem not ready\n              if (window.submitGGcode) {\n                window.submitGGcode(new Event('submit'));\n              }\n            }\n          }\n        };\n        reader.readAsText(file);\n      });\n    }\n  }\n\n  /**\n   * Update annotations\n   */\n  updateAnnotations(lineNumber, lineContent) {\n    if (this.annotationSystem) {\n      const editors = this.editorManager\n        ? this.editorManager.getEditors()\n        : { output: window.outputEditor };\n      this.annotationSystem.updateAnnotations(\n        lineNumber,\n        lineContent,\n        editors.output\n      );\n    }\n  }\n\n  /**\n   * Make managers globally available for backward compatibility\n   */\n  makeManagersGloballyAvailable() {\n    window.editorManager = this.editorManager;\n    window.apiManager = {}; // This should be passed from main.js\n    window.configuratorManager = this.configuratorManager;\n    window.visualizerModules = this.visualizerModules;\n    window.navigationManager = this.navigationManager;\n    window.aiManager = aiManager;\n    window.aiCommands = aiCommands;\n  }\n\n  /**\n   * Set API manager reference\n   */\n  setApiManager(apiManager) {\n    this.apiManager = apiManager;\n\n    // Initialize modules that depend on API manager\n    this.helpSystem = new HelpSystem(apiManager);\n    this.exampleManager = new ExampleManager(apiManager, this.editorManager);\n    this.compilationSystem = new CompilationSystem(\n      apiManager,\n      this.editorManager,\n      this.annotationSystem\n    );\n    this.configuratorSystem = new ConfiguratorSystem(\n      this.configuratorManager,\n      this.editorManager\n    );\n\n    // Apply any pending monaco ready state to newly initialized CompilationSystem\n    if (this.pendingMonacoReady && this.compilationSystem) {\n      console.log('Applying pending monaco ready state to CompilationSystem');\n      this.compilationSystem.setMonacoReady(true);\n      this.pendingMonacoReady = false;\n    }\n\n    // Update global reference\n    window.apiManager = apiManager;\n  }\n\n  /**\n   * Getters for external access\n   */\n  getEditorManager() {\n    return this.editorManager;\n  }\n  getAnnotationSystem() {\n    return this.annotationSystem;\n  }\n  getConfiguratorManager() {\n    return this.configuratorManager;\n  }\n  getHelpSystem() {\n    if (!this.helpSystem && this.apiManager) {\n      this.helpSystem = new HelpSystem(this.apiManager);\n    }\n    return this.helpSystem;\n  }\n  getExampleManager() {\n    if (!this.exampleManager && this.apiManager && this.editorManager) {\n      this.exampleManager = new ExampleManager(\n        this.apiManager,\n        this.editorManager\n      );\n    }\n    return this.exampleManager;\n  }\n  getFileOperationsManager() {\n    return this.fileOperationsManager;\n  }\n  getCompilationSystem() {\n    if (\n      !this.compilationSystem &&\n      this.apiManager &&\n      this.editorManager &&\n      this.annotationSystem\n    ) {\n      this.compilationSystem = new CompilationSystem(\n        this.apiManager,\n        this.editorManager,\n        this.annotationSystem\n      );\n    }\n    return this.compilationSystem;\n  }\n  getModalManager() {\n    return this.modalManager;\n  }\n  getConfiguratorSystem() {\n    return this.configuratorSystem;\n  }\n}\n\nexport default ApplicationManager;\n","/**\n * Compilation System Module\n * Handles GGcode compilation and loading indicators\n */\n\nclass CompilationSystem {\n  constructor(apiManager, editorManager, annotationSystem) {\n    this.apiManager = apiManager;\n    this.editorManager = editorManager;\n    this.annotationSystem = annotationSystem;\n    this.monacoReady = false;\n  }\n\n  /**\n   * Set Monaco ready state\n   */\n  setMonacoReady(ready) {\n    this.monacoReady = ready;\n    console.log('CompilationSystem: Monaco ready state set to:', ready);\n  }\n\n  /**\n   * Submit GGcode for compilation\n   */\n  async submitGGcode(event, customCode = null) {\n    if (event) event.preventDefault();\n\n    this.syncEditors();\n    const code = customCode || this.editorManager.getInputValue();\n\n    if (this.editorManager) {\n      this.editorManager.setOutputValue('Compiling...');\n    }\n\n    try {\n      const result = await this.apiManager.compiler.compile(code);\n\n      if (result.success) {\n        if (this.editorManager) {\n          this.editorManager.setOutputValue(result.output);\n\n          // Reset annotation modal state when new G-code is loaded\n          if (this.annotationSystem) {\n            this.annotationSystem.resetModalState();\n          }\n\n          // Trigger annotation for first line if content exists\n          if (result.output.trim()) {\n            const editors = this.editorManager.getEditors();\n            if (editors.output) {\n              const firstLineContent = editors.output\n                .getModel()\n                .getLineContent(1);\n              if (window.updateAnnotations) {\n                window.updateAnnotations(1, firstLineContent);\n              }\n            }\n          }\n        }\n        if (window.saveContent) {\n          window.saveContent();\n        }\n      } else {\n        if (this.editorManager) {\n          this.editorManager.setOutputValue('Error: ' + result.error);\n        }\n      }\n    } catch (err) {\n      if (this.editorManager) {\n        this.editorManager.setOutputValue('Network error: ' + err.message);\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Sync editors (legacy function for backward compatibility)\n   */\n  syncEditors() {\n    if (this.editorManager) {\n      const ggcodeElement = document.getElementById('ggcode');\n      if (ggcodeElement) {\n        ggcodeElement.value = this.editorManager.getInputValue();\n      }\n    }\n  }\n\n  /**\n   * Show/hide compile loading indicator\n   */\n  showCompileLoadingIndicator(show) {\n    // Create or find compile loading indicator element\n    let compileIndicator = document.getElementById('compileLoadingIndicator');\n\n    if (show) {\n      if (!compileIndicator) {\n        // Create compile loading indicator if it doesn't exist\n        compileIndicator = document.createElement('div');\n        compileIndicator.id = 'compileLoadingIndicator';\n        compileIndicator.style.cssText = `\n                    position: fixed;\n                    top: 50%;\n                    left: 50%;\n                    transform: translate(-50%, -50%);\n                    background: rgba(0, 0, 0, 0.9);\n                    color: white;\n                    padding: 20px 30px;\n                    border-radius: 10px;\n                    font-family: monospace;\n                    font-size: 14px;\n                    text-align: center;\n                    z-index: 1000;\n                    border: 2px solid #007acc;\n                    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.5);\n                    min-width: 200px;\n                `;\n\n        // Add loading animation\n        compileIndicator.innerHTML = `\n                    <div style=\"margin-bottom: 10px; font-weight: bold;\">Compiling GGcode...</div>\n                    <div style=\"display: inline-block; width: 20px; height: 20px; border: 3px solid #ffffff; border-radius: 50%; border-top-color: #007acc; animation: spin 1s ease-in-out infinite; margin: 0 auto;\"></div>\n                    <div id=\"compileStatus\" style=\"margin-top: 10px; font-size: 12px; color: #ccc;\">Processing...</div>\n                    <style>\n                        @keyframes spin {\n                            to { transform: rotate(360deg); }\n                        }\n                    </style>\n                `;\n\n        document.body.appendChild(compileIndicator);\n      }\n      compileIndicator.style.display = 'block';\n      //console.log('Showing compile loading indicator');\n    } else {\n      if (compileIndicator) {\n        compileIndicator.style.display = 'none';\n        // Remove after fade out\n        setTimeout(() => {\n          if (compileIndicator.parentNode) {\n            compileIndicator.parentNode.removeChild(compileIndicator);\n          }\n        }, 300);\n      }\n      //console.log('Hiding compile loading indicator');\n    }\n  }\n}\n\nexport default CompilationSystem;\n","/**\n * G-code Annotation System\n * Handles parsing and generation of G-code annotations and modal state tracking\n */\n\nclass GcodeAnnotationSystem {\n  constructor() {\n    this.millDictionary = {};\n    this.millAnnotations = {};\n    this.annotationsLoaded = false;\n    this.lastGCommand = null;\n  }\n\n  /**\n   * Initialize the annotation system by loading dictionaries\n   */\n  async initialize() {\n    await this.loadGcodeDictionaries();\n  }\n\n  /**\n   * Load G-code dictionaries from server\n   */\n  async loadGcodeDictionaries() {\n    try {\n      const [dictResponse, annotResponse] = await Promise.all([\n        fetch('/mill-dictionary.json'),\n        fetch('/mill-annotations.json'),\n      ]);\n\n      if (dictResponse.ok && annotResponse.ok) {\n        this.millDictionary = await dictResponse.json();\n        this.millAnnotations = await annotResponse.json();\n        this.annotationsLoaded = true;\n        //console.log('G-code dictionaries loaded successfully');\n      } else {\n        console.error('Failed to load G-code dictionaries');\n      }\n    } catch (error) {\n      console.error('Error loading G-code dictionaries:', error);\n    }\n  }\n\n  /**\n   * Check if a command is a motion command\n   * @param {string} cmd - Command to check\n   * @returns {boolean} True if motion command\n   */\n  isMotionCmd(cmd) {\n    return /^G(?:0|1|2|3|33|38\\.2|38\\.3|38\\.4|38\\.5|80|81|82|83|85|86|89)$/i.test(\n      cmd\n    );\n  }\n\n  /**\n   * Check if parameters contain motion-relevant coordinates\n   * @param {Object} params - Parameters object\n   * @returns {boolean} True if has motion coordinates\n   */\n  hasMotionCoords(params) {\n    for (const k of Object.keys(params)) {\n      if (/[XYZIJKRABCUVW]/.test(k)) return true;\n    }\n    return false;\n  }\n\n  /**\n   * Get all G-code lines from editor\n   * @param {Object} outputEditor - Monaco output editor instance\n   * @returns {Array} Array of G-code lines\n   */\n  getAllGcodeLines(outputEditor) {\n    if (outputEditor && typeof outputEditor.getValue === 'function') {\n      return outputEditor.getValue().split(/\\r?\\n/);\n    }\n    const out = document.getElementById('output');\n    return out ? out.textContent.split(/\\r?\\n/) : [];\n  }\n\n  /**\n   * Find last motion G command before a given line number\n   * @param {number} lineNumber - 1-based line number\n   * @param {Object} outputEditor - Monaco output editor instance\n   * @returns {Object} Object with cmd and line properties\n   */\n  findPreviousMotion(lineNumber, outputEditor) {\n    const lines = this.getAllGcodeLines(outputEditor);\n    const targetIdx = Math.max(0, (lineNumber | 0) - 2);\n\n    for (let i = targetIdx; i >= 0; i--) {\n      const parsed = this.parseGcodeLine(lines[i]);\n      if (!parsed || !parsed.commands || !parsed.commands.length) continue;\n\n      const motions = parsed.commands.filter((cmd) => this.isMotionCmd(cmd));\n      if (motions.length) {\n        return { cmd: motions[motions.length - 1], line: i + 1 };\n      }\n    }\n\n    return { cmd: null, line: null };\n  }\n\n  /**\n   * Parse a G-code line to extract commands and parameters\n   * @param {string} line - G-code line to parse\n   * @returns {Object|null} Parsed line object or null\n   */\n  parseGcodeLine(line) {\n    if (!line || typeof line !== 'string') return null;\n\n    // Remove comments and trim\n    const cleanLine = line.split('//')[0].split('(')[0].trim();\n    if (!cleanLine) return null;\n\n    // Extract ALL commands (G, M codes) from the line\n    const commandMatches = cleanLine.matchAll(/([GM])(\\d+)/gi);\n    const commands = [];\n    const commandsUsed = new Set();\n\n    for (const match of commandMatches) {\n      const cmd = (match[1] + match[2]).toUpperCase();\n      commands.push(cmd);\n      commandsUsed.add(match[0].toUpperCase());\n    }\n\n    // Update last G command if this line has any G commands\n    const gCommands = commands.filter((cmd) => cmd.startsWith('G'));\n\n    // Handle modal behavior - if no commands but has motion coordinates, use last G command\n    let primaryCommand = null;\n    if (commands.length > 0) {\n      primaryCommand =\n        gCommands.length > 0 ? gCommands[gCommands.length - 1] : commands[0];\n    } else if (cleanLine.match(/[XYZ]/i)) {\n      primaryCommand = this.lastGCommand;\n    }\n\n    // Extract all parameters (letter followed by number/value, including negative)\n    const paramMatches = cleanLine.matchAll(/([A-Z])([+-]?\\d*\\.?\\d+)/gi);\n    const parameters = {};\n\n    for (const match of paramMatches) {\n      const letter = match[1].toUpperCase();\n      const value = match[2];\n      const fullMatch = match[0].toUpperCase();\n\n      // Skip if this is part of a command (like G1, M3)\n      if (!commandsUsed.has(fullMatch)) {\n        parameters[letter] = value;\n      }\n    }\n\n    return {\n      original: line,\n      commands: commands,\n      primaryCommand: primaryCommand,\n      parameters: parameters,\n      cleanLine: cleanLine,\n      isModal: commands.length === 0 && primaryCommand,\n      hasParams: Object.keys(parameters).length > 0,\n      hasMultipleCommands: commands.length > 1,\n    };\n  }\n\n  /**\n   * Generate enhanced annotation for G-code line\n   * @param {number} lineNumber - Line number (1-based)\n   * @param {string} lineContent - Content of the line\n   * @param {Object} outputEditor - Monaco output editor instance\n   * @returns {string} HTML annotation\n   */\n  generateAnnotation(lineNumber, lineContent, outputEditor = null) {\n    if (!this.annotationsLoaded) {\n      return `<div class=\"annotation-loading\">Loading G-code dictionaries...</div>`;\n    }\n\n    const parsed = this.parseGcodeLine(lineContent);\n\n    // Check if parsing failed first\n    if (!parsed) {\n      return `<div class=\"annotation-simple\">\n        <strong>Line ${lineNumber}:</strong> ${lineContent || '(empty line)'}\n        <br><em>No G-code content detected</em>\n      </div>`;\n    }\n\n    // If line has coords but no explicit G, find implied motion from above\n    let implied = null;\n    if (\n      !parsed.primaryCommand &&\n      parsed.parameters &&\n      this.hasMotionCoords(parsed.parameters)\n    ) {\n      const prev = this.findPreviousMotion(lineNumber, outputEditor);\n      if (prev.cmd) {\n        parsed.primaryCommand = prev.cmd.toUpperCase();\n        parsed.isModal = true;\n        implied = prev;\n      }\n    }\n\n    if (\n      !parsed.primaryCommand &&\n      !parsed.hasParams &&\n      (!parsed.commands || parsed.commands.length === 0)\n    ) {\n      return `<div class=\"annotation-simple\">\n        <strong>Line ${lineNumber}:</strong> ${lineContent}\n        <br><em>No G-code command or parameters detected</em>\n      </div>`;\n    }\n\n    let annotation = '';\n\n    // Build annotation header\n    annotation += `<div class=\"annotation-header\">`;\n    annotation += `<strong>Line ${lineNumber}:</strong> `;\n\n    if (parsed.commands.length > 0) {\n      if (parsed.hasMultipleCommands) {\n        annotation += `Multiple Commands (${parsed.commands.length})`;\n        if (parsed.isModal) {\n          annotation += ` <span class=\"modal-indicator\">(Modal)</span>`;\n        }\n      } else {\n        // Single command\n        const cmd = parsed.primaryCommand || parsed.commands[0];\n        let cmdDesc = '';\n        if (cmd) {\n          if (this.millDictionary[cmd]) {\n            cmdDesc =\n              typeof this.millDictionary[cmd] === 'string'\n                ? this.millDictionary[cmd]\n                : this.millDictionary[cmd].desc || '';\n          } else if (this.millAnnotations[cmd]) {\n            cmdDesc = this.millAnnotations[cmd];\n          }\n        }\n        annotation += `${cmd || 'Unknown'} - ${cmdDesc || 'Unknown command'}`;\n\n        if (parsed.isModal) {\n          annotation += ` <span class=\"modal-indicator\">(Implied</span>`;\n          if (implied && implied.line != null) {\n            annotation += ` <span class=\"modal-indicator\">from line ${implied.line}</span>`;\n          }\n          annotation += `<span class=\"modal-indicator\">)</span>`;\n        }\n      }\n    } else {\n      if (parsed.primaryCommand) {\n        annotation += `Implied ${parsed.primaryCommand}`;\n        if (implied && implied.line != null) {\n          annotation += ` <span class=\"modal-indicator\">(from line ${implied.line})</span>`;\n        } else {\n          annotation += ` <span class=\"modal-indicator\">(modal)</span>`;\n        }\n      } else {\n        annotation += `Parameters only`;\n        if (parsed.hasParams) {\n          annotation += ` <span class=\"modal-indicator\">(no prior motion found)</span>`;\n        }\n      }\n    }\n\n    annotation += `</div>`;\n\n    // Add command details for multiple commands\n    if (parsed.hasMultipleCommands) {\n      annotation += `<div class=\"annotation-commands\">`;\n      for (const cmd of parsed.commands) {\n        let cmdDesc = '';\n        if (this.millDictionary[cmd]) {\n          if (typeof this.millDictionary[cmd] === 'string') {\n            cmdDesc = this.millDictionary[cmd];\n          } else if (this.millDictionary[cmd].desc) {\n            cmdDesc = this.millDictionary[cmd].desc;\n          }\n        } else if (this.millAnnotations[cmd]) {\n          cmdDesc = this.millAnnotations[cmd];\n        }\n        annotation += `<div class=\"annotation-command\">`;\n        annotation += `<span class=\"command-name\">${cmd}:</span> `;\n        annotation += `<span class=\"command-desc\">${cmdDesc || 'Unknown command'}</span>`;\n        annotation += `</div>`;\n      }\n      annotation += `</div>`;\n    }\n\n    // Add parameter details\n    if (Object.keys(parsed.parameters).length > 0) {\n      annotation += `<div class=\"annotation-params\">`;\n\n      for (const [param, value] of Object.entries(parsed.parameters)) {\n        let paramDesc = `${param}-Axis Motion`;\n\n        // Get parameter description from dictionary\n        if (\n          parsed.primaryCommand &&\n          this.millDictionary[parsed.primaryCommand] &&\n          this.millDictionary[parsed.primaryCommand].sub &&\n          this.millDictionary[parsed.primaryCommand].sub[param]\n        ) {\n          paramDesc = this.millDictionary[parsed.primaryCommand].sub[param];\n        } else if (this.millDictionary[param]) {\n          paramDesc =\n            typeof this.millDictionary[param] === 'string'\n              ? this.millDictionary[param]\n              : this.millDictionary[param].desc || paramDesc;\n        }\n\n        annotation += `<div class=\"annotation-param\">`;\n        annotation += `<span class=\"param-name\">${paramDesc}:</span> `;\n        annotation += `<span class=\"param-value\">${value}</span>`;\n        annotation += `</div>`;\n      }\n\n      annotation += `</div>`;\n    }\n\n    // Add raw line for reference\n    annotation += `<div class=\"annotation-raw\">`;\n    annotation += `<em>Raw: ${lineContent}</em>`;\n    annotation += `</div>`;\n\n    return annotation;\n  }\n\n  /**\n   * Update annotations display\n   * @param {number} lineNumber - Line number (1-based)\n   * @param {string} lineContent - Content of the line\n   * @param {Object} outputEditor - Monaco output editor instance\n   */\n  updateAnnotations(lineNumber, lineContent, outputEditor = null) {\n    const annotationsDiv = document.getElementById('annotations');\n    if (!annotationsDiv) return;\n\n    const annotation = this.generateAnnotation(\n      lineNumber,\n      lineContent,\n      outputEditor\n    );\n    annotationsDiv.innerHTML = annotation;\n  }\n\n  /**\n   * Reset modal state (call when new G-code is loaded)\n   */\n  resetModalState() {\n    this.lastGCommand = null;\n  }\n\n  /**\n   * Get current modal state\n   * @returns {Object} Current modal state\n   */\n  getModalState() {\n    return {\n      lastGCommand: this.lastGCommand,\n    };\n  }\n\n  /**\n   * Set modal state\n   * @param {Object} state - Modal state to set\n   */\n  setModalState(state) {\n    if (state.lastGCommand !== undefined) {\n      this.lastGCommand = state.lastGCommand;\n    }\n  }\n}\n\nexport default GcodeAnnotationSystem;\n","/**\n * Monaco Editor Manager\n * Handles Monaco editor initialization, configuration, and management\n */\n\nimport storageManager from '../utils/storageManager.js';\nimport themeManager from './themes.js';\nimport settingsManager from './settings.js';\n\nclass MonacoEditorManager {\n  constructor() {\n    this.editor = null;\n    this.outputEditor = null;\n    this.monacoReady = false;\n    this.autoCompile = false;\n    this.autoCompileTimeout = null;\n    this.lastOpenedFilename = '';\n    this.skipAutoCompile = false;\n\n    // User-defined function support\n    this.userFunctions = new Map();\n    this.functionParseTimeout = null;\n    this.userFunctionCache = {};\n\n    // Completion data from external JSON files\n    this.completionData = {\n      keywords: null,\n      functions: null,\n      constants: null,\n      axes: null,\n      operators: null,\n      brackets: null,\n      paramMappings: null,\n      tokenizer: null,\n      languageConfig: null,\n      hoverConstants: null,\n      hoverKeywords: null,\n      hoverFunctions: null,\n      signatures: null,\n      millDictionary: null,\n      millAnnotations: null,\n    };\n  }\n\n  /**\n   * Initialize Monaco editor with GGcode language support\n   * @param {Object} options - Configuration options\n   * @param {string} options.inputContainerId - ID of input editor container\n   * @param {string} options.outputContainerId - ID of output editor container\n   * @param {string} options.initialInput - Initial input content\n   * @param {string} options.initialOutput - Initial output content\n   * @param {Function} options.onCompile - Callback for compilation\n   * @param {Function} options.onAnnotationUpdate - Callback for annotation updates\n   */\n  async initialize(options = {}) {\n    const {\n      inputContainerId = 'editor',\n      outputContainerId = 'output',\n      initialInput = '',\n      initialOutput = '',\n      onCompile = null,\n      onAnnotationUpdate = null,\n    } = options;\n\n    // Always check for global Monaco first (works for both webpack and AMD loading)\n    return new Promise((resolve, reject) => {\n      const initializeEditor = async () => {\n        try {\n          //console.log('MonacoEditorManager: Monaco available, initializing editors...');\n          await this._loadCompletionData();\n          await themeManager.loadAndInitializeTheme(); // Load theme BEFORE language registration for proper syntax highlighting\n          this._registerGGcodeLanguage();\n          this._createEditors(\n            inputContainerId,\n            outputContainerId,\n            initialInput,\n            initialOutput\n          );\n          this._setupEventHandlers(onCompile, onAnnotationUpdate);\n          this._setupDragAndDrop();\n\n          this.monacoReady = true;\n          // Parse user functions from initial content\n          this._parseUserFunctions();\n\n          //console.log('MonacoEditorManager: Initialization complete!');\n          resolve();\n        } catch (error) {\n          console.error('MonacoEditorManager: Initialization failed:', error);\n          reject(error);\n        }\n      };\n\n      // Check if Monaco is already available globally\n      if (typeof window.monaco !== 'undefined') {\n        //console.log('MonacoEditorManager: Monaco already available globally');\n        initializeEditor();\n      } else {\n        // Load Monaco dynamically using the global require (from loader.js)\n        //console.log('MonacoEditorManager: Loading Monaco dynamically...');\n\n        const loadMonaco = () => {\n          // Check if the global require from loader.js is available\n          if (\n            typeof window.require !== 'undefined' &&\n            typeof window.require.config === 'function'\n          ) {\n            //console.log('MonacoEditorManager: Using global require to load Monaco');\n\n            // Configure Monaco paths\n            window.require.config({\n              paths: {\n                vs: 'https://cdn.jsdelivr.net/npm/monaco-editor@0.45.0/min/vs',\n              },\n            });\n\n            // Load Monaco\n            window.require(['vs/editor/editor.main'], () => {\n              //console.log('MonacoEditorManager: Monaco loaded successfully');\n              initializeEditor();\n            });\n          } else {\n            // Fallback: wait for Monaco to be available\n            //console.log('MonacoEditorManager: Waiting for Monaco...');\n            let attempts = 0;\n            const maxAttempts = 50; // Wait up to 5 seconds\n\n            const checkMonaco = () => {\n              attempts++;\n              if (typeof window.monaco !== 'undefined') {\n                //console.log('MonacoEditorManager: Monaco became available after', attempts * 100, 'ms');\n                initializeEditor();\n              } else if (attempts < maxAttempts) {\n                setTimeout(checkMonaco, 100);\n              } else {\n                console.error(\n                  'MonacoEditorManager: Timeout waiting for Monaco to load'\n                );\n                reject(\n                  new Error('Monaco Editor failed to load within timeout')\n                );\n              }\n            };\n            checkMonaco();\n          }\n        };\n\n        // Give the loader.js a moment to set up the global require\n        setTimeout(loadMonaco, 100);\n      }\n    });\n  }\n\n  /**\n   * Load completion data from external JSON files\n   * @private\n   * @returns {Promise} Promise that resolves when all completion data is loaded\n   */\n  async _loadCompletionData() {\n    const files = {\n      keywords: '/data/completions/ggcode-keywords.json',\n      functions: '/data/completions/ggcode-functions.json',\n      constants: '/data/completions/ggcode-constants.json',\n      axes: '/data/completions/ggcode-axes.json',\n      operators: '/data/completions/ggcode-operators.json',\n      brackets: '/data/completions/ggcode-brackets.json',\n      paramMappings: '/data/completions/ggcode-param-mappings.json',\n      tokenizer: '/data/completions/ggcode-tokenizer.json',\n      languageConfig: '/data/completions/ggcode-language-config.json',\n      hoverConstants: '/data/completions/ggcode-hover-constants.json',\n      hoverKeywords: '/data/completions/ggcode-hover-keywords.json',\n      hoverFunctions: '/data/completions/ggcode-hover-functions.json',\n      signatures: '/data/completions/ggcode-signatures.json',\n      millDictionary: '/mill-dictionary.json',\n      millAnnotations: '/mill-annotations.json',\n    };\n\n    const loadPromises = Object.entries(files).map(async ([key, filePath]) => {\n      try {\n        const response = await fetch(filePath);\n        if (response.ok) {\n          const data = await response.json();\n          this.completionData[key] = data;\n        } else {\n          console.warn(\n            `Failed to load ${key} completion data: ${response.status}`\n          );\n        }\n      } catch (error) {\n        console.warn(`⚠️ Error loading ${key} completion data:`, error.message);\n      }\n    });\n\n    await Promise.all(loadPromises);\n  }\n\n  /**\n   * Register GGcode language with Monaco\n   * @private\n   */\n  _registerGGcodeLanguage() {\n    monaco.languages.register({ id: 'ggcode' });\n\n    // Register comprehensive completion provider for GGcode\n    this._registerCompletionProvider();\n\n    // Register hover provider for better documentation\n    this._registerHoverProvider();\n\n    // Register signature help for function parameters\n    this._registerSignatureHelpProvider();\n\n    // Set language configuration for GGcode using JSON data\n    if (this.completionData.languageConfig) {\n      const config = this.completionData.languageConfig.languageConfiguration;\n      monaco.languages.setLanguageConfiguration('ggcode', {\n        brackets: config.brackets,\n        autoClosingPairs: config.autoClosingPairs,\n        surroundingPairs: config.surroundingPairs,\n        folding: {\n          markers: {\n            start: new RegExp(config.folding.markers.start),\n            end: new RegExp(config.folding.markers.end),\n          },\n        },\n      });\n    } else {\n      console.warn('⚠️ Language configuration not loaded, using defaults');\n    }\n\n    // Use completion data loaded at startup - fallback to minimal sets if JSON failed\n    const keywords = this.completionData.keywords\n      ? this.completionData.keywords.keywords.map((kw) => kw.word)\n      : ['let', 'if', 'else', 'for', 'while', 'function', 'return', 'note'];\n\n    const constants = this.completionData.constants\n      ? this.completionData.constants.constants.map((constant) => constant.name)\n      : ['PI', 'E', 'TAU', 'DEG_TO_RAD'];\n\n    const builtins = this.completionData.functions\n      ? this.completionData.functions.functions.map((func) => func.name)\n      : [\n          'abs',\n          'mod',\n          'sin',\n          'cos',\n          'tan',\n          'sqrt',\n          'hypot',\n          'floor',\n          'ceil',\n          'round',\n        ];\n\n    // Create dynamic regex patterns for tokenizer using JSON configuration\n    const keywordPattern =\n      keywords.length > 0\n        ? new RegExp(`\\\\b(${keywords.join('|')})\\\\b`)\n        : /\\b(dummy)\\b/;\n    const constantPattern =\n      constants.length > 0\n        ? new RegExp(`\\\\b(${constants.join('|')})\\\\b`)\n        : /\\b(dummy)\\b/;\n    const builtinPattern =\n      builtins.length > 0\n        ? new RegExp(`\\\\b(${builtins.join('|')})\\\\b`)\n        : /\\b(dummy)\\b/;\n\n    // Build dynamic tokenizer using JSON configuration\n    if (!this.completionData.tokenizer) {\n      console.warn('⚠️ Tokenizer configuration not loaded');\n      return;\n    }\n\n    const tokenizerConfig = this.completionData.tokenizer.tokenizer;\n    const axisChars = tokenizerConfig.axisCharacters || 'XYZABCEFSHTHRPN';\n\n    // Get language configuration patterns from JSON\n    const langConfig = this.completionData.languageConfig;\n\n    // Build dynamic tokenizer rules\n    const tokenizerRules = [];\n\n    // Generate axis patterns dynamically\n    const axisTypes = {};\n    for (const char of axisChars) {\n      // Axis with bracketed variables (e.g., X[f], Y[y+1]) - HIGHER PRIORITY\n      tokenizerRules.push([\n        new RegExp(`\\\\b${char}\\\\[([^\\\\]]+)\\\\]`),\n        `axis-with-var.${char.toLowerCase()}`,\n      ]);\n\n      // Axis with numeric values (e.g., X123.45, Y-789) - MEDIUM PRIORITY\n      tokenizerRules.push([\n        new RegExp(`\\\\b${char}[-+]?[0-9]*\\\\.?[0-9]+\\\\b`),\n        `axis.${char.toLowerCase()}`,\n      ]);\n\n      // Map for word matching\n      axisTypes[char] = `axis.${char.toLowerCase()}`;\n    }\n\n    // Add N-line pattern (for line numbers)\n    if (axisChars.includes('N')) {\n      tokenizerRules.push([/\\bN[+-]?[0-9.]+\\b/, 'nline']);\n    }\n\n    // Add predefined patterns using JSON configuration - each as separate push for proper tokenizer structure\n    // G-code / M-code patterns with differentiated token types for better color coding\n\n    // Rapid positioning (G0) - Yellow/green color\n    tokenizerRules.push([/\\bG0\\b/, 'gcode-rapid']);\n\n    // Linear interpolation (G1) - Blue color\n    tokenizerRules.push([/\\bG1\\b/, 'gcode-linear']);\n\n    // Arc moves (G2/G3) - Purple color\n    tokenizerRules.push([/\\b(G2|G3)\\b/, 'gcode-arc']);\n\n    // Dwell (G4) - Orange color\n    tokenizerRules.push([/\\bG4\\b/, 'gcode-dwell']);\n\n    // Drill cycles (G8x) - Dark green color\n    tokenizerRules.push([/\\bG8[0-9]\\b/, 'gcode-drill']);\n\n    // Boring/cutoff cycles (G76-G89) - Dark blue color\n    tokenizerRules.push([/\\bG[7-8][6-9]\\b/, 'gcode-bore']);\n\n    // Reference position returns (G28/G30) - Cyan color\n    tokenizerRules.push([/\\bG2[89]|G30\\b/, 'gcode-ref']);\n\n    // Rigid tapping (G84) - Gold color\n    tokenizerRules.push([/\\bG84\\b/, 'gcode-tap']);\n\n    // Other G-codes (directory setting, coordinate system, etc.) - Default G-code red\n    tokenizerRules.push([/\\bG\\d+\\b/, 'gcode']);\n\n    // Spindle commands (M3/M4/M5) - Orange color\n    tokenizerRules.push([/\\b(M3|M4|M5)\\b/, 'mcode-spindle']);\n\n    // Tool change (M6) - Purple color\n    tokenizerRules.push([/\\bM6\\b/, 'mcode-toolchange']);\n\n    // Coolant commands (M7/M8/M9) - Cyan color\n    tokenizerRules.push([/\\b(M7|M8|M9)\\b/, 'mcode-coolant']);\n\n    // Program control (M0/M1/M2/M30) - Yellow color\n    tokenizerRules.push([/\\b(M0|M1|M2|M30)\\b/, 'mcode-control']);\n\n    // Other M-codes - Default M-code color\n    tokenizerRules.push([/\\bM\\d+\\b/, 'mcode']);\n\n    // Dynamic patterns using loaded JSON data (keywords come after G-codes)\n    tokenizerRules.push([keywordPattern, 'keyword']);\n    tokenizerRules.push([constantPattern, 'constant']);\n    tokenizerRules.push([builtinPattern, 'predefined']);\n\n    // Axis fallback patterns using JSON templates\n    tokenizerRules.push([\n      new RegExp(\n        langConfig.axisFallbackPattern1\n          .replace(/\\{axis0\\}/g, axisChars.charAt(0))\n          .replace(/\\{axis1\\}/g, axisChars.charAt(1))\n          .replace(/\\{axis2\\}/g, axisChars.charAt(2))\n      ),\n      'axis',\n    ]);\n    tokenizerRules.push([new RegExp(langConfig.axisFallbackPattern2), 'axis']);\n\n    // General bracketed variables (lower priority)\n    tokenizerRules.push([/\\b[A-Z]\\[[^\\]]+\\]/, 'variable-bracket']);\n\n    // Variable assignments (let var_name = value) - HIGHEST priority for consistency\n    tokenizerRules.push([/\\blet\\s+([a-zA-Z_]\\w*)\\b/, 'variable-declaration']);\n\n    // Variables in brackets using JSON pattern (fallback)\n    tokenizerRules.push([new RegExp(langConfig.variablePattern), 'variable']);\n\n    // General variable references (higher priority than identifiers)\n    tokenizerRules.push([/\\b[a-zA-Z_]\\w*\\b/, 'variable-reference']);\n\n    // Numbers using JSON pattern\n    tokenizerRules.push([\n      new RegExp(`\\\\b${langConfig.numberPattern}\\\\b`),\n      'number',\n    ]);\n\n    // Comments using JSON comment patterns\n    tokenizerRules.push([\n      new RegExp(`${tokenizerConfig.commentPatterns.lineComment}.*$`),\n      'comment',\n    ]);\n    tokenizerRules.push([\n      new RegExp(`${tokenizerConfig.commentPatterns.blockCommentStart}.*$`),\n      'comment',\n      '@blockComment',\n    ]);\n\n    // Dynamic brackets using JSON bracket symbols\n    tokenizerRules.push([\n      new RegExp(`[${langConfig.bracketSymbols}]`),\n      'bracket',\n    ]);\n\n    // Build block comment pattern from JSON\n    const blockEndPattern =\n      tokenizerConfig.commentPatterns.blockCommentEnd || '%/';\n\n    monaco.languages.setMonarchTokensProvider('ggcode', {\n      keywords: keywords,\n      constants: constants,\n      builtins: builtins,\n      operators: tokenizerConfig.operators || [\n        '=',\n        '+',\n        '-',\n        '*',\n        '/',\n        '%',\n        '..',\n      ],\n      symbols: new RegExp(`[${langConfig.tokenizerSymbolsPattern}]`),\n\n      tokenizer: {\n        root: tokenizerRules,\n\n        blockComment: [\n          [new RegExp(`.*${blockEndPattern}`), 'comment', '@pop'],\n          [/.*$/, 'comment'],\n        ],\n      },\n    });\n  }\n\n  /**\n   * Register comprehensive completion provider for GGcode language\n   * Provides IntelliSense-style completion suggestions for all GGcode elements\n   * @private\n   */\n  _registerCompletionProvider() {\n    // Store reference to help system for dictionary access\n    this.helpSystem = window.applicationManager?.getHelpSystem?.();\n\n    // Register the main completion item provider\n    monaco.languages.registerCompletionItemProvider('ggcode', {\n      provideCompletionItems: (model, position, _context, _token) => {\n        const word = model.getWordUntilPosition(position);\n        const range = {\n          startLineNumber: position.lineNumber,\n          endLineNumber: position.lineNumber,\n          startColumn: word.startColumn,\n          endColumn: word.endColumn,\n        };\n\n        const suggestions = [];\n\n        // Add context-aware completions based on current line content\n        const lineContent = model.getLineContent(position.lineNumber);\n        const linePrefix = lineContent.substring(0, position.column - 1);\n\n        // Unified completion processing - combine all sources with proper priority sorting\n        const allCompletions = [];\n\n        // Standard completions (G-codes, M-codes, functions, constants, etc.)\n        allCompletions.push(...this._getGcodeCompletions(range));\n        allCompletions.push(...this._getMcodeCompletions(range));\n        allCompletions.push(...this._getKeywordCompletions(range));\n        allCompletions.push(...this._getFunctionCompletions(range));\n        allCompletions.push(...this._getConstantCompletions(range));\n        allCompletions.push(...this._getAxisCompletions(range));\n        allCompletions.push(...this._getOperatorCompletions(range));\n        allCompletions.push(...this._getBracketCompletions(range));\n\n        // User-defined function completions (higher priority)\n        allCompletions.push(...this._getUserFunctionCompletions(range));\n\n        // Context-aware axis parameters when user types G/M codes\n        if (linePrefix.match(/\\b(G\\d+|M\\d+)\\s*$/)) {\n          allCompletions.push(...this._getAxisParametersCompletions(range));\n        }\n\n        // External dictionary and annotation completions (lowest priority)\n        if (this.helpSystem?.dictionaryCache) {\n          allCompletions.push(\n            ...this._getMillDictionaryCompletions(range, linePrefix)\n          );\n        }\n        if (this.helpSystem?.annotationsCache) {\n          allCompletions.push(\n            ...this._getMillAnnotationsCompletions(range, linePrefix)\n          );\n        }\n\n        // Sort all completions by sortText to ensure consistent priority\n        suggestions.push(\n          ...allCompletions.sort((a, b) => a.sortText.localeCompare(b.sortText))\n        );\n\n        return {\n          suggestions: suggestions,\n          incomplete: false,\n        };\n      },\n\n      triggerCharacters: [\n        'G',\n        'M',\n        'g',\n        'm',\n        'x',\n        'y',\n        'z',\n        'a',\n        'b',\n        'c',\n        'f',\n        's',\n        't',\n        'h',\n        'r',\n        'p',\n        'l',\n        'i',\n        'f',\n        'w',\n        '(',\n        '[',\n        ' ',\n      ],\n    });\n  }\n\n  /**\n   * Get G-code completion items from mill dictionary JSON data\n   * @private\n   */\n  _getGcodeCompletions(range) {\n    const gcodes = this.completionData.millDictionary || {};\n\n    if (!gcodes || Object.keys(gcodes).length === 0) {\n      console.warn('⚠️ Mill dictionary JSON not loaded for G-code completions');\n      return [];\n    }\n\n    const completions = [];\n\n    for (const [gcode, definition] of Object.entries(gcodes)) {\n      if (gcode.startsWith('G') && gcode.length >= 2) {\n        const description = definition.desc || 'G-code command';\n        let detail = gcode;\n        let usage = gcode;\n\n        // Build usage string from parameters\n        if (definition.sub && Object.keys(definition.sub).length > 0) {\n          const params = Object.keys(definition.sub).join(' ');\n          usage = `${gcode} ${params}`;\n          detail = `Usage: ${usage}`;\n        }\n\n        const completionItem = {\n          label: gcode,\n          kind: monaco.languages.CompletionItemKind.Class,\n          detail: detail,\n          documentation: {\n            value: `**${gcode}** - ${description}${\n              definition.sub\n                ? '\\n\\nParameters:\\n' +\n                  Object.entries(definition.sub)\n                    .map(([param, desc]) => `  ${param}: ${desc}`)\n                    .join('\\n')\n                : ''\n            }`,\n          },\n          insertText: gcode,\n          sortText: `01${gcode}`,\n          range: range,\n        };\n\n        // Validate the completion item\n        if (!completionItem.label || !completionItem.insertText) {\n          console.warn(\n            `⚠️ Invalid completion item for ${gcode}:`,\n            completionItem\n          );\n          continue;\n        }\n\n        completions.push(completionItem);\n      }\n    }\n\n    return completions;\n  }\n\n  /**\n   * Get M-code completion items from mill dictionary JSON data\n   * @private\n   */\n  _getMcodeCompletions(range) {\n    const mcodes = this.completionData.millDictionary || {};\n\n    if (!mcodes || Object.keys(mcodes).length === 0) {\n      console.warn('⚠️ Mill dictionary JSON not loaded for M-code completions');\n      return [];\n    }\n\n    const completions = [];\n    for (const [mcode, definition] of Object.entries(mcodes)) {\n      if (mcode.startsWith('M') && mcode.length >= 2) {\n        const description = definition.desc || 'M-code command';\n        let detail = mcode;\n        let usage = mcode;\n\n        // Build usage string from parameters\n        if (definition.sub && Object.keys(definition.sub).length > 0) {\n          const params = Object.keys(definition.sub).join(' ');\n          usage = `${mcode} ${params}`;\n          detail = `Usage: ${usage}`;\n        }\n\n        completions.push({\n          label: mcode,\n          kind: monaco.languages.CompletionItemKind.Interface,\n          detail: detail,\n          documentation: {\n            value: `**${mcode}** - ${description}${\n              definition.sub\n                ? '\\n\\nParameters:\\n' +\n                  Object.entries(definition.sub)\n                    .map(([param, desc]) => `  ${param}: ${desc}`)\n                    .join('\\n')\n                : ''\n            }`,\n          },\n          insertText: mcode,\n          sortText: `02${mcode}`,\n          range: range,\n        });\n      }\n    }\n\n    return completions;\n  }\n\n  /**\n   * Get keyword completion items from external JSON only\n   * @private\n   */\n  _getKeywordCompletions(range) {\n    if (!this.completionData.keywords) {\n      console.warn('⚠️ Keywords JSON not loaded');\n      return [];\n    }\n\n    const { keywords } = this.completionData.keywords;\n    return keywords.map((kw) => ({\n      label: kw.word,\n      kind: monaco.languages.CompletionItemKind.Keyword,\n      detail: kw.detail,\n      documentation: {\n        value: `**${kw.word}** - ${kw.description}\\n\\nExample: \\`${kw.detail}\\``,\n      },\n      insertText: kw.snippet || kw.word,\n      insertTextRules: kw.snippet\n        ? monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet\n        : undefined,\n      sortText: `10${kw.word}`,\n      range: range,\n    }));\n  }\n\n  /**\n   * Get mathematical function completion items from external JSON only\n   * @private\n   */\n  _getFunctionCompletions(range) {\n    if (!this.completionData.functions) {\n      console.warn('⚠️ Functions JSON not loaded');\n      return [];\n    }\n\n    const { functions } = this.completionData.functions;\n    return functions.map((func) => ({\n      label: func.name,\n      kind: monaco.languages.CompletionItemKind.Function,\n      detail: func.detail,\n      documentation: {\n        value: `**${func.name}** - ${func.description}\\n\\nUsage: \\`${func.detail}\\``,\n      },\n      insertText: func.snippet,\n      insertTextRules:\n        monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\n      sortText: `30${func.name}`,\n      range: range,\n    }));\n  }\n\n  /**\n   * Get constant completion items from external JSON only\n   * @private\n   */\n  _getConstantCompletions(range) {\n    if (!this.completionData.constants) {\n      console.warn('⚠️ Constants JSON not loaded');\n      return [];\n    }\n\n    const { constants } = this.completionData.constants;\n    return constants.map((constant) => ({\n      label: constant.name,\n      kind: monaco.languages.CompletionItemKind.Constant,\n      detail: constant.detail,\n      documentation: {\n        value: `**${constant.name}** - ${constant.description}\\n\\nValue: ${constant.detail}`,\n      },\n      insertText: constant.name,\n      sortText: `20${constant.name}`,\n      range: range,\n    }));\n  }\n\n  /**\n   * Get axis completion items from external JSON only\n   * @private\n   */\n  _getAxisCompletions(range) {\n    if (!this.completionData.axes) {\n      console.warn('⚠️ Axes JSON not loaded');\n      return [];\n    }\n\n    const { axes } = this.completionData.axes;\n    return axes.map((axis) => ({\n      label: axis.axis,\n      kind: monaco.languages.CompletionItemKind.Variable,\n      detail: axis.description,\n      documentation: {\n        value: `**${axis.axis}** - ${axis.description}\\n\\nExample: \\`${axis.snippet}\\``,\n      },\n      insertText: axis.snippet,\n      insertTextRules:\n        monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\n      sortText: `40${axis.axis}`,\n      range: range,\n    }));\n  }\n\n  /**\n   * Get operator completion items from external JSON only\n   * @private\n   */\n  _getOperatorCompletions(range) {\n    if (!this.completionData.operators) {\n      console.warn('⚠️ Operators JSON not loaded');\n      return [];\n    }\n\n    const { operators } = this.completionData.operators;\n    return operators.map((operator) => ({\n      label: operator.op,\n      kind: monaco.languages.CompletionItemKind.Operator,\n      detail: operator.detail,\n      documentation: {\n        value: `**${operator.op}** - ${operator.description}\\n\\nExample: \\`${operator.detail}\\``,\n      },\n      insertText: operator.op,\n      sortText: `50${operator.op}`,\n      range: range,\n    }));\n  }\n\n  /**\n   * Get bracket completion items from external JSON only\n   * @private\n   */\n  _getBracketCompletions(range) {\n    if (!this.completionData.brackets) {\n      console.warn('⚠️ Brackets JSON not loaded');\n      return [];\n    }\n\n    const { brackets } = this.completionData.brackets;\n    return brackets\n      .map((bracket) => {\n        if (bracket.snippet) {\n          return {\n            label: bracket.pair,\n            kind: monaco.languages.CompletionItemKind.Snippet,\n            detail: bracket.description,\n            documentation: { value: bracket.description },\n            insertText: bracket.snippet,\n            insertTextRules:\n              monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\n            sortText: `60${bracket.pair}`,\n            range: range,\n          };\n        } else {\n          const label = bracket.pair.replace(\n            /\\{|\\[|\\(|\\}|\\]|\\)/,\n            (match) => match\n          ); // Keep the original bracket\n          if (!label) {\n            console.warn('⚠️ Empty label for bracket:', bracket);\n            return null; // Skip invalid brackets\n          }\n          return {\n            label: label,\n            kind: monaco.languages.CompletionItemKind.Value,\n            detail: bracket.description,\n            documentation: { value: bracket.description },\n            insertText: label,\n            sortText: `60${bracket.pair}`,\n            range: range,\n          };\n        }\n      })\n      .filter((item) => item !== null); // Remove null items\n  }\n\n  /**\n   * Get mill dictionary completions (shows detailed G/M-codes with parameters)\n   * @private\n   */\n  _getMillDictionaryCompletions(range, linePrefix) {\n    const completions = [];\n    const helpSystem = window.applicationManager?.getHelpSystem?.();\n    const dictionary = helpSystem?.dictionaryCache;\n\n    if (!dictionary) return completions;\n\n    // Get user input to filter completions\n    const word = linePrefix.toUpperCase();\n\n    for (const [gcode, definition] of Object.entries(dictionary)) {\n      // Skip single characters like \"F\", \"S\", \"T\" etc. - those are handled elsewhere\n      if (gcode.length === 1) continue;\n\n      // Filter based on what user has typed\n      if (word && !gcode.startsWith(word)) continue;\n\n      let description = definition.desc || 'G/M-code command';\n      let detail = gcode;\n      let usage = gcode;\n\n      // Build full usage string from parameters\n      if (definition.sub && Object.keys(definition.sub).length > 0) {\n        const params = Object.keys(definition.sub).join(' ');\n        usage = `${gcode} ${params}`;\n        detail = `Usage: ${usage}`;\n\n        // Create detailed parameter documentation\n        const paramDocs = Object.entries(definition.sub)\n          .map(([param, desc]) => `  ${param}: ${desc}`)\n          .join('\\n');\n\n        description = description + '\\n\\nParameters:\\n' + paramDocs;\n      }\n\n      completions.push({\n        label: gcode,\n        kind: monaco.languages.CompletionItemKind.Class,\n        detail: detail,\n        documentation: {\n          value: `**${gcode}** - ${description}`,\n        },\n        insertText: gcode,\n        sortText: `000${gcode}`, // Very high priority for official G/M-codes\n        range: range,\n      });\n    }\n\n    return completions;\n  }\n\n  /**\n   * Get mill annotations completions (shows parameter syntax and smart completions)\n   * Enhanced to support both G1/G01 formats and improved full line completion\n   * @private\n   */\n  _getMillAnnotationsCompletions(range, linePrefix) {\n    const completions = [];\n    const helpSystem = window.applicationManager?.getHelpSystem?.();\n    const annotations = helpSystem?.annotationsCache;\n\n    if (!annotations) {\n      return completions;\n    }\n\n    // Get user input to filter completions\n    const word = linePrefix.toUpperCase();\n    const isGCode = word.startsWith('G');\n    const isMCode = word.startsWith('M');\n\n    if (!isGCode && !isMCode) return completions;\n\n    // Process each annotation entry\n    for (const [description, usage] of Object.entries(annotations)) {\n      // Skip single-character annotations and non-motion commands\n      if (usage.length <= 2 || /^\\s*[A-Z](\\s+[A-Z])*\\s*$/.test(usage)) {\n        continue;\n      }\n\n      // Extract G/M code from usage\n      const gcodeMatch = usage.match(/^[GM]\\d+/);\n      const gcode = gcodeMatch ? gcodeMatch[0] : null;\n\n      if (!gcode) continue;\n\n      // Enhanced matching logic to handle both G1 and G01 formats\n      let shouldInclude = false;\n      let altCode = null;\n\n      if (gcode.length === 2) {\n        // G1 format - check if user's input matches G1 or G01\n        if (word === gcode || word === gcode[0] + '0' + gcode[1]) {\n          shouldInclude = true;\n          altCode = word;\n        }\n      } else if (gcode.length === 3 && gcode[1] === '0') {\n        // G01 format - check if user's input matches G01 or G1\n        const shortForm = gcode[0] + gcode[2];\n        if (word === gcode || word === shortForm) {\n          shouldInclude = true;\n          altCode = word;\n        }\n      }\n\n      // Alternative: check if word starts with G/M code (case insensitive)\n      if (\n        !shouldInclude &&\n        word &&\n        gcode.toUpperCase().startsWith(word.toUpperCase())\n      ) {\n        shouldInclude = true;\n        altCode = gcode;\n      }\n\n      // Additional fuzzy matching for common patterns\n      if (!shouldInclude && word && word.length >= 2) {\n        // For example, \"35\" should match G35, \"rapid\" could match G00, etc.\n        const searchNum = parseInt(word);\n        if (searchNum && gcode.match(/G\\d+/)) {\n          const gcodeNum = parseInt(gcode.slice(1));\n          if (searchNum === gcodeNum) {\n            shouldInclude = true;\n            altCode = gcode;\n          }\n        }\n      }\n\n      if (!shouldInclude) continue;\n\n      // Use the matching code for display (user's format preference)\n      const displayCode = altCode || gcode;\n      const isFullLinePreset = description.startsWith('FULL LINE PRESET');\n\n      // Add completion for valid code\n\n      // Option 1: Just the G/M code (for basic completion)\n      completions.push({\n        label: `${isFullLinePreset ? '📋 ' : ''}${displayCode}`,\n        kind: monaco.languages.CompletionItemKind.Property,\n        detail: `${isFullLinePreset ? '📑 FULL PRESET: ' : 'Basic: '}${displayCode}`,\n        documentation: {\n          value: `${isFullLinePreset ? '⭐ **FULL LINE PRESET** ⭐\\n\\n' : ''}**${description}**\\n\\nComplete Syntax: \\`${usage}\\`\\n\\n${gcode !== displayCode ? `Equivalent to: **${gcode}**` : ''}${isFullLinePreset ? '\\n\\n💡 *This preset includes all standard parameters with smart placeholders!*' : ''}`,\n        },\n        insertText: displayCode,\n        sortText: `${isFullLinePreset ? '000-' : '800'}${displayCode}`,\n        range: range,\n      });\n\n      // Option 2: Complete syntax (enhanced smart completion - works even when not exact match)\n      const lineTrimmed = linePrefix.trim().toUpperCase();\n      const isExactMatch = lineTrimmed === displayCode || lineTrimmed === gcode;\n      const hasComplexParameters = usage.split(' ').length > 3; // G36 F I J K X Y Z has 7 params\n\n      // Trigger full completion if:\n      // - exact match (original logic)\n      // - complex command like G36 (at least 4 parameters)\n      // - user just typed the G/M code\n      if (\n        isExactMatch ||\n        hasComplexParameters ||\n        lineTrimmed.match(/^[GM]\\d+$/)\n      ) {\n        const paramsOnly = usage.replace(gcode, '').trim();\n        if (paramsOnly) {\n          const completionParams = paramsOnly\n            .split(' ')\n            .map((p) => {\n              // Try to use external parameter mappings first\n              if (\n                this.completionData.paramMappings &&\n                this.completionData.paramMappings.paramMappings\n              ) {\n                const paramMappings =\n                  this.completionData.paramMappings.paramMappings;\n                return paramMappings[p]\n                  ? paramMappings[p]\n                  : `[${p.toLowerCase()}]`;\n              }\n\n              // Fallback to hardcoded parameter mapping\n              const paramMap = {\n                X: '[x_pos]',\n                Y: '[y_pos]',\n                Z: '[z_pos]',\n                A: '[a_pos]',\n                B: '[b_pos]',\n                C: '[c_pos]',\n                F: '[feed_rate]',\n                S: '[rpm]',\n                T: '[tool_num]',\n                I: '[arc_x]',\n                J: '[arc_y]',\n                K: '[arc_z]',\n                R: '[radius]',\n                Q: '[depth]',\n                P: '[dwell]',\n              };\n              return paramMap[p] ? paramMap[p] : `[${p.toLowerCase()}]`;\n            })\n            .join(' ');\n\n          // Generate the sort text - full line presets get absolute top priority\n          const fullPresetPriority = isFullLinePreset ? '000' : '010';\n          const completionLabel = isFullLinePreset\n            ? `🚀 FULL LINE: ${displayCode}`\n            : `🚀 ${displayCode} • Complete Script`;\n\n          completions.push({\n            label: completionLabel,\n            kind: monaco.languages.CompletionItemKind.Snippet,\n            detail: `${isFullLinePreset ? '⭐⭐ FULL LINE PRESET:' : '⭐ FULL PRESET:'} ${displayCode} ${paramsOnly}`,\n            documentation: {\n              value: `🎯 **${description}**\\n\\n📋 **Complete Pattern:**\\n\\`\\`\\`gcode\\n${displayCode} ${paramsOnly}\\n\\`\\`\\`\\n\\n⚡ **Auto-filled Parameters:**\\n${completionParams\n                .split(' ')\n                .map((p) => `• **${p.replace(/\\[|\\]/g, '')}** - ${p}`)\n                .join(\n                  '\\n'\n                )}\\n\\n💡 **Quick Use:** Just press TAB to insert the complete line with smart placeholders!\\n\\n${isFullLinePreset ? '⭐ **This is a pre-configured preset - recommended for quick use!**' : '📝 *Standard parameter completion pattern*'}`,\n            },\n            insertText: `${displayCode} ${completionParams}`,\n            insertTextRules:\n              monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\n            sortText: `${fullPresetPriority}${displayCode}`, // FULL LINE PRESETS get absolute highest priority\n            range: range,\n          });\n\n          // Added smart completion pattern\n        }\n      }\n    }\n\n    return completions;\n  }\n\n  /**\n   * Get axis parameter completions for G/M code context from external JSON only\n   * @private\n   */\n  _getAxisParametersCompletions(range) {\n    if (\n      !this.completionData.paramMappings ||\n      !this.completionData.paramMappings.axisParameters\n    ) {\n      console.warn('⚠️ Axis Parameters JSON not loaded');\n      return [];\n    }\n\n    const { axisParameters } = this.completionData.paramMappings;\n    return axisParameters.map((param) => ({\n      label: param.param.trim(),\n      kind: monaco.languages.CompletionItemKind.Field,\n      detail: param.description,\n      documentation: {\n        value: `**${param.param.trim()}** - ${param.description}`,\n      },\n      insertText: param.snippet,\n      insertTextRules:\n        monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\n      sortText: `00${param.param}`,\n      range: range,\n    }));\n  }\n\n  /**\n   * Register hover provider for enhanced documentation\n   * @private\n   */\n  _registerHoverProvider() {\n    monaco.languages.registerHoverProvider('ggcode', {\n      provideHover: (model, position) => {\n        const word = model.getWordAtPosition(position);\n        if (!word) return null;\n\n        const range = {\n          startLineNumber: position.lineNumber,\n          endLineNumber: position.lineNumber,\n          startColumn: word.startColumn,\n          endColumn: word.endColumn,\n        };\n\n        const hoverInfo = this._getHoverInfo(word.word);\n        if (hoverInfo) {\n          return {\n            range: range,\n            contents: hoverInfo.contents,\n          };\n        }\n\n        return null;\n      },\n    });\n  }\n\n  /**\n   * Get hover information for a word (using external JSON data)\n   * @private\n   */\n  _getHoverInfo(word) {\n    // Check mill dictionary data first (official G/M-code definitions)\n    const helpSystem = window.applicationManager?.getHelpSystem?.();\n    const dictionary = helpSystem?.dictionaryCache;\n\n    if (dictionary) {\n      // Check for exact match first\n      if (dictionary[word]) {\n        const definition = dictionary[word];\n        let description = definition.desc || 'G/M-code command';\n        let parameters = '';\n\n        // Build parameter documentation\n        if (definition.sub && Object.keys(definition.sub).length > 0) {\n          const paramList = Object.entries(definition.sub)\n            .map(([param, desc]) => `${param}: ${desc}`)\n            .join('\\n');\n          parameters = `\\n\\n**Parameters:**\\n${paramList}`;\n        }\n\n        return {\n          contents: [\n            {\n              value: `**${word}** - ${description}${parameters}`,\n            },\n          ],\n        };\n      }\n\n      // For G/M codes, also check the alternate format (G1 <-> G01)\n      if (word.match(/^[GM]\\d+$/)) {\n        let altWord = word;\n        if (word.length === 2 && word[1] !== '0') {\n          // G1 -> G01\n          altWord = word[0] + '0' + word[1];\n        } else if (word.length === 3 && word[1] === '0' && word[2] !== '0') {\n          // G01 -> G1 (but only if not G00)\n          altWord = word[0] + word[2];\n        }\n\n        if (altWord !== word && dictionary[altWord]) {\n          const definition = dictionary[altWord];\n          let description = definition.desc || 'G/M-code command';\n          let parameters = '';\n\n          // Build parameter documentation\n          if (definition.sub && Object.keys(definition.sub).length > 0) {\n            const paramList = Object.entries(definition.sub)\n              .map(([param, desc]) => `${param}: ${desc}`)\n              .join('\\n');\n            parameters = `\\n\\n**Parameters:**\\n${paramList}`;\n          }\n\n          return {\n            contents: [\n              {\n                value: `**${altWord} / ${word}** - ${description}${parameters}`,\n              },\n            ],\n          };\n        }\n      }\n    }\n\n    // Use JSON-based hover data instead of hardcoded values\n\n    // Check constants from JSON\n    if (\n      this.completionData.hoverConstants &&\n      this.completionData.hoverConstants[word]\n    ) {\n      const constant = this.completionData.hoverConstants[word];\n      return {\n        contents: [\n          {\n            value: `**${constant.title}**\\n\\n${constant.description}\\n\\nValue: ${constant.value}${constant.usage ? '\\n\\n' + constant.usage : ''}`,\n          },\n        ],\n      };\n    }\n\n    // Check mill dictionary data (single source of truth)\n    if (\n      this.completionData.millDictionary &&\n      this.completionData.millDictionary[word]\n    ) {\n      const entry = this.completionData.millDictionary[word];\n      const description = entry.desc || 'G/M-code command';\n      const subParams = entry.sub ? Object.keys(entry.sub) : [];\n      const paramInfo =\n        subParams.length > 0\n          ? '\\n\\n**Parameters:**\\n' +\n            subParams\n              .map((param) => `• **${param}**: ${entry.sub[param]}`)\n              .join('\\n')\n          : '';\n\n      return {\n        contents: [\n          {\n            value: `**${word}** - ${description}${paramInfo}`,\n          },\n        ],\n      };\n    }\n\n    // Check functions from JSON\n    if (\n      this.completionData.hoverFunctions &&\n      this.completionData.hoverFunctions[word]\n    ) {\n      const func = this.completionData.hoverFunctions[word];\n      return {\n        contents: [\n          {\n            value: `**${func.syntax}** - ${func.description}${\n              func.parameters && func.parameters.length > 0\n                ? '\\n\\nParameters:\\n' +\n                  func.parameters.map((p) => `• ${p}`).join('\\n')\n                : '\\n\\nParameters: none'\n            }${func.returns ? '\\n\\nReturns: ' + func.returns : ''}`,\n          },\n        ],\n      };\n    }\n\n    // Check keywords from JSON\n    if (\n      this.completionData.hoverKeywords &&\n      this.completionData.hoverKeywords[word]\n    ) {\n      const keyword = this.completionData.hoverKeywords[word];\n      return {\n        contents: [\n          {\n            value: `**${word}** - ${keyword.description}\\n\\n${keyword.example}${\n              keyword.usage ? '\\n\\n' + keyword.usage : ''\n            }`,\n          },\n        ],\n      };\n    }\n\n    // Check for user-defined functions (kept for backward compatibility)\n    if (this.userFunctionCache[word]) {\n      const userFunc = this.userFunctionCache[word];\n      const signature = `${userFunc.name}(${userFunc.parameters.join(', ')})`;\n      const documentation = userFunc.documentation || 'User-defined function';\n\n      return {\n        contents: [\n          {\n            value: `**${signature}**\\n\\n${documentation}${userFunc.documentation ? '' : '\\n\\nParameters: ' + (userFunc.parameters.length > 0 ? userFunc.parameters.join(', ') : 'none')}`,\n          },\n        ],\n      };\n    }\n\n    return null;\n  }\n\n  /**\n   * Register signature help for function parameters\n   * @private\n   */\n  _registerSignatureHelpProvider() {\n    monaco.languages.registerSignatureHelpProvider('ggcode', {\n      signatureHelpTriggerCharacters: ['(', ','],\n      provideSignatureHelp: (model, position, _token, _context) => {\n        const lineContent = model.getLineContent(position.lineNumber);\n        const beforeCursor = lineContent.substring(0, position.column - 1);\n\n        // Find the function call\n        const functionMatch = beforeCursor.match(/(\\w+)\\s*\\(\\s*([^)]*)$/);\n        if (!functionMatch) return null;\n\n        const functionName = functionMatch[1];\n        const parametersText = functionMatch[2] || '';\n\n        const signatureInfo = this._getFunctionSignature(functionName);\n        if (!signatureInfo) return null;\n\n        // Count parameters\n        const commaCount = (parametersText.match(/,/g) || []).length;\n        const parameterIndex = Math.min(\n          commaCount,\n          signatureInfo.parameters.length - 1\n        );\n\n        return {\n          signatures: [signatureInfo],\n          activeSignature: 0,\n          activeParameter: parameterIndex,\n        };\n      },\n    });\n  }\n\n  /**\n   * Get function signature information (using external JSON data)\n   * @private\n   */\n  _getFunctionSignature(functionName) {\n    // Check signatures from JSON data first\n    if (\n      this.completionData.signatures &&\n      this.completionData.signatures.functions\n    ) {\n      const signatures = this.completionData.signatures.functions;\n      if (signatures[functionName]) {\n        return signatures[functionName];\n      }\n    }\n\n    // Check for user-defined functions\n    if (this.userFunctionCache[functionName]) {\n      const userFunc = this.userFunctionCache[functionName];\n      return {\n        label: `${userFunc.name}(${userFunc.parameters.join(', ')})`,\n        documentation: `User-defined function${userFunc.documentation ? `\\n\\n${userFunc.documentation}` : ''}`,\n        parameters: userFunc.parameters.map((param) => ({\n          label: param,\n          documentation: `Parameter: ${param}`,\n        })),\n      };\n    }\n\n    return null;\n  }\n\n  /**\n   * Legacy method for backward compatibility - replaced by _registerCompletionProvider\n   * @private\n   * @deprecated\n   */\n  _registerBracketPairCompletionProvider() {\n    return this._registerCompletionProvider();\n  }\n\n  /**\n   * Parse user-defined functions from the current editor content\n   * @private\n   */\n  _parseUserFunctions(model = null) {\n    try {\n      // Use current model if not provided\n      if (!model && this.editor) {\n        model = this.editor.getModel();\n      }\n\n      if (!model) return;\n\n      const content = model.getValue();\n      this.userFunctions.clear();\n\n      // Regex pattern to match function definitions: function name(parameters) { ... }\n      const functionRegex = /function\\s+(\\w+)\\s*\\(\\s*([^)]*)\\s*\\)\\s*\\{[^}]*\\}/g;\n      let match;\n\n      while ((match = functionRegex.exec(content)) !== null) {\n        const functionName = match[1];\n        const parameters = match[2].trim();\n\n        // Parse parameters\n        const paramList =\n          parameters === ''\n            ? []\n            : parameters\n                .split(',')\n                .map((param) => param.trim())\n                .filter((param) => param.length > 0);\n\n        // Extract function documentation from comments\n        const functionStart = match.index;\n        const linesBefore = content.substring(0, functionStart).split('\\n');\n        const functionLineIndex = linesBefore.length;\n        let documentation = '';\n\n        // Look for note { ... } comments above the function\n        for (let i = linesBefore.length - 1; i >= 0; i--) {\n          const line = linesBefore[i].trim();\n          if (line.startsWith('note')) {\n            const noteMatch = line.match(/note\\s*\\{\\s*(.+?)\\s*\\}/);\n            if (noteMatch) {\n              documentation = noteMatch[1];\n              break;\n            }\n          } else if (line.includes('function')) {\n            // Stop looking when we hit another function definition\n            break;\n          }\n        }\n\n        // Store function information\n        this.userFunctions.set(functionName, {\n          name: functionName,\n          parameters: paramList,\n          documentation: documentation,\n          lineNumber: functionLineIndex + 1,\n        });\n      }\n\n      // Cache for performance\n      this.userFunctionCache = {};\n      this.userFunctions.forEach((func, name) => {\n        this.userFunctionCache[name] = func;\n      });\n    } catch (error) {\n      console.warn('Error parsing user functions:', error);\n    }\n  }\n\n  /**\n   * Get user-defined function completion items\n   * @private\n   * @param {Object} range - Range for the completion items\n   * @returns {Array} Array of completion items\n   */\n  _getUserFunctionCompletions(range) {\n    const suggestions = [];\n\n    this.userFunctions.forEach((func) => {\n      const docString = `**${func.name}**(${func.parameters.join(', ')})\\n\\nUser-defined function${func.documentation ? `\\n\\n${func.documentation}` : ''}`;\n      const snippet = `${func.name}(${func.parameters.map((param, i) => `\\${${i + 1}:${param}}`).join(', ')})`;\n\n      suggestions.push({\n        label: func.name,\n        kind: monaco.languages.CompletionItemKind.Function,\n        detail: `${func.name}(${func.parameters.join(', ')})`,\n        documentation: {\n          value: docString,\n        },\n        insertText: snippet,\n        insertTextRules:\n          monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\n        sortText: `05${func.name}`, // Sort after built-ins but before other items\n        range: range,\n      });\n    });\n\n    return suggestions;\n  }\n\n  // Theme management is now handled by the consolidated theme system\n  // See themes.js for all theme-related functionality\n\n  /**\n   * Create input and output editors\n   * @private\n   */\n  _createEditors(\n    inputContainerId,\n    outputContainerId,\n    initialInput,\n    initialOutput\n  ) {\n    // Load saved content from StorageManager\n    const savedInput = storageManager.getInputContent();\n    const savedOutput = storageManager.getOutputContent();\n\n    const inputContent =\n      savedInput && savedInput.trim() !== '' ? savedInput : initialInput;\n    const outputContent =\n      savedOutput && savedOutput.trim() !== '' ? savedOutput : initialOutput;\n\n    // Hide loading indicators and show editor containers\n    const inputLoading = document.getElementById(inputContainerId + '-loading');\n    const outputLoading = document.getElementById(\n      outputContainerId + '-loading'\n    );\n    const inputContainer = document.getElementById(inputContainerId);\n    const outputContainer = document.getElementById(outputContainerId);\n\n    if (inputLoading) inputLoading.style.display = 'none';\n    if (outputLoading) outputLoading.style.display = 'none';\n    if (inputContainer) inputContainer.style.display = 'block';\n    if (outputContainer) outputContainer.style.display = 'block';\n\n    // Get initial settings from settings manager\n    const initialSettings = settingsManager\n      ? settingsManager.getSettings()\n      : {};\n\n    // Create input editor with proper initial settings\n    this.editor = monaco.editor.create(inputContainer, {\n      value: inputContent,\n      language: 'ggcode',\n      theme: 'vs-dark', // Start with safe default theme\n      automaticLayout: true,\n      minimap:\n        initialSettings.minimap === 'disabled'\n          ? { enabled: false }\n          : { enabled: true },\n      fontSize: initialSettings.fontSize || 14,\n      fontFamily:\n        initialSettings.fontFamily || 'Consolas, \"Courier New\", monospace',\n      wordWrap: initialSettings.wordWrap || 'off',\n      lineNumbers: initialSettings.lineNumbers || 'on',\n      renderWhitespace: initialSettings.renderWhitespace || 'none',\n      renderIndentGuides:\n        initialSettings.renderIndentGuides !== undefined\n          ? initialSettings.renderIndentGuides\n          : true,\n      bracketMatching:\n        initialSettings.bracketMatching !== undefined\n          ? initialSettings.bracketMatching\n          : true,\n      autoClosingBrackets: initialSettings.autoClosingBrackets || 'always',\n      autoClosingQuotes: initialSettings.autoClosingQuotes || 'always',\n      autoClosingDelete: initialSettings.autoClosingDelete || 'always',\n      autoClosingOvertype: initialSettings.autoClosingOvertype || 'always',\n      surroudWithBrackets:\n        initialSettings.surroudWithBrackets !== undefined\n          ? initialSettings.surroudWithBrackets\n          : true,\n      tabSize: initialSettings.tabSize || 2,\n      insertSpaces:\n        initialSettings.insertSpaces !== undefined\n          ? initialSettings.insertSpaces\n          : true,\n\n      // Bracket pair colorization settings\n      bracketPairColorization: {\n        enabled: true,\n      },\n\n      // Semantic highlighting settings\n      'semanticHighlighting.enabled': true,\n    });\n\n    // Create output editor with proper initial settings\n    this.outputEditor = monaco.editor.create(outputContainer, {\n      value: outputContent,\n      language: 'ggcode',\n      theme: 'vs-dark', // Start with safe default theme\n      automaticLayout: true,\n      minimap:\n        initialSettings.minimap === 'disabled'\n          ? { enabled: false }\n          : { enabled: true },\n      fontSize: initialSettings.fontSize || 14,\n      fontFamily:\n        initialSettings.fontFamily || 'Consolas, \"Courier New\", monospace',\n      wordWrap: initialSettings.wordWrap || 'off',\n      lineNumbers: initialSettings.lineNumbers || 'on',\n      renderWhitespace: initialSettings.renderWhitespace || 'none',\n      renderIndentGuides:\n        initialSettings.renderIndentGuides !== undefined\n          ? initialSettings.renderIndentGuides\n          : true,\n      bracketMatching:\n        initialSettings.bracketMatching !== undefined\n          ? initialSettings.bracketMatching\n          : true,\n      autoClosingBrackets: initialSettings.autoClosingBrackets || 'always',\n      autoClosingQuotes: initialSettings.autoClosingQuotes || 'always',\n      autoClosingDelete: initialSettings.autoClosingDelete || 'always',\n      autoClosingOvertype: initialSettings.autoClosingOvertype || 'always',\n      surroudWithBrackets:\n        initialSettings.surroudWithBrackets !== undefined\n          ? initialSettings.surroudWithBrackets\n          : true,\n      tabSize: initialSettings.tabSize || 2,\n      insertSpaces:\n        initialSettings.insertSpaces !== undefined\n          ? initialSettings.insertSpaces\n          : true,\n\n      // Bracket pair colorization settings\n      bracketPairColorization: {\n        enabled: true,\n      },\n    });\n\n    // Make output editor globally accessible for backward compatibility\n    window.outputEditor = this.outputEditor;\n\n    // Apply current settings to both editors\n    if (settingsManager) {\n      settingsManager.applyAllSettingsToEditor(this.editor);\n      settingsManager.applyAllSettingsToEditor(this.outputEditor);\n    }\n\n    // Apply the actual GGCode theme after editors are created\n    setTimeout(() => {\n      if (this.editor) {\n        themeManager.applyThemeToSpecificEditor(this.editor);\n      }\n      if (this.outputEditor) {\n        themeManager.applyThemeToSpecificEditor(this.outputEditor);\n      }\n    }, 100); // Small delay to ensure editors are fully initialized\n\n    //console.log('MonacoEditorManager: Editors created and configured successfully');\n  }\n\n  /**\n   * Setup event handlers for editors\n   * @private\n   */\n  _setupEventHandlers(onCompile, onAnnotationUpdate) {\n    // Auto-compile logic for input editor\n    this.editor.onDidChangeModelContent(() => {\n      // Parse user functions with debouncing\n      if (this.functionParseTimeout) clearTimeout(this.functionParseTimeout);\n      this.functionParseTimeout = setTimeout(() => {\n        this._parseUserFunctions();\n      }, 300); // Debounce parsing by 300ms\n\n      if (this.autoCompile && !this.skipAutoCompile) {\n        if (this.autoCompileTimeout) clearTimeout(this.autoCompileTimeout);\n        this.autoCompileTimeout = setTimeout(() => {\n          if (onCompile) onCompile(new Event('submit'));\n        }, 1000);\n      }\n      this.skipAutoCompile = false;\n    });\n\n    // Annotation updates for output editor\n    this.outputEditor.onDidChangeCursorPosition((e) => {\n      const lineNumber = e.position.lineNumber;\n      const lineContent = this.outputEditor\n        .getModel()\n        .getLineContent(lineNumber);\n      if (onAnnotationUpdate) {\n        onAnnotationUpdate(lineNumber, lineContent);\n      }\n    });\n  }\n\n  /**\n   * Setup drag and drop functionality\n   * @private\n   */\n  _setupDragAndDrop() {\n    const editorDom = this.editor.getDomNode();\n    if (!editorDom) return;\n\n    editorDom.addEventListener('dragover', (e) => {\n      e.preventDefault();\n      editorDom.style.background = '#222a';\n    });\n\n    editorDom.addEventListener('dragleave', (e) => {\n      e.preventDefault();\n      editorDom.style.background = '';\n    });\n\n    editorDom.addEventListener('drop', (e) => {\n      e.preventDefault();\n      editorDom.style.background = '';\n\n      if (\n        e.dataTransfer &&\n        e.dataTransfer.files &&\n        e.dataTransfer.files.length > 0\n      ) {\n        const file = e.dataTransfer.files[0];\n        const reader = new FileReader();\n\n        reader.onload = (evt) => {\n          if (file.name.endsWith('.gcode') || file.name.endsWith('.ggcode')) {\n            if (this.outputEditor) {\n              this.outputEditor.setValue(evt.target.result);\n            }\n          }\n          this.setLastOpenedFilename(file.name || '');\n        };\n\n        reader.readAsText(file);\n      }\n    });\n  }\n\n  /**\n   * Get input editor content\n   * @returns {string} Editor content\n   */\n  getInputValue() {\n    return this.editor ? this.editor.getValue() : '';\n  }\n\n  /**\n   * Set input editor content\n   * @param {string} content - Content to set\n   */\n  setInputValue(content) {\n    if (this.editor) {\n      this.skipAutoCompile = true;\n      this.editor.setValue(content);\n    }\n  }\n\n  /**\n   * Get output editor content\n   * @returns {string} Editor content\n   */\n  getOutputValue() {\n    return this.outputEditor ? this.outputEditor.getValue() : '';\n  }\n\n  /**\n   * Set output editor content\n   * @param {string} content - Content to set\n   */\n  setOutputValue(content) {\n    if (this.outputEditor) {\n      this.outputEditor.setValue(content);\n    }\n  }\n\n  /**\n   * Enable or disable auto-compile\n   * @param {boolean} enabled - Whether auto-compile should be enabled\n   */\n  setAutoCompile(enabled) {\n    this.autoCompile = enabled;\n    storageManager.setAutoCompileState(enabled);\n  }\n\n  /**\n   * Get auto-compile state\n   * @returns {boolean} Auto-compile state\n   */\n  getAutoCompile() {\n    return this.autoCompile;\n  }\n\n  /**\n   * Load auto-compile state from localStorage\n   */\n  loadAutoCompileState() {\n    this.autoCompile = storageManager.getAutoCompileState();\n    return this.autoCompile;\n  }\n\n  /**\n   * Set last opened filename\n   * @param {string} filename - Filename to remember\n   */\n  setLastOpenedFilename(filename) {\n    this.lastOpenedFilename = filename;\n    storageManager.setLastFilename(filename);\n  }\n\n  /**\n   * Get last opened filename\n   * @returns {string} Last opened filename\n   */\n  getLastOpenedFilename() {\n    return this.lastOpenedFilename;\n  }\n\n  /**\n   * Load last opened filename from localStorage\n   */\n  loadLastOpenedFilename() {\n    this.lastOpenedFilename = storageManager.getLastFilename();\n    return this.lastOpenedFilename;\n  }\n\n  /**\n   * Save editor content to localStorage\n   */\n  saveContent() {\n    try {\n      if (this.editor) {\n        storageManager.setInputContent(this.editor.getValue());\n      }\n      if (this.outputEditor) {\n        storageManager.setOutputContent(this.outputEditor.getValue());\n      }\n    } catch (e) {\n      console.warn('Failed to save content to storage:', e);\n    }\n  }\n\n  /**\n   * Setup auto-save functionality\n   */\n  setupAutoSave() {\n    // Auto-save content every 30 seconds\n    setInterval(() => this.saveContent(), 30000);\n\n    // Save content when page is about to unload\n    window.addEventListener('beforeunload', () => this.saveContent());\n  }\n\n  /**\n   * Check if Monaco is ready\n   * @returns {boolean} Monaco ready state\n   */\n  isReady() {\n    return this.monacoReady;\n  }\n\n  /**\n   * Force parsing of user-defined functions\n   * Useful for initial setup or manual refresh\n   */\n  refreshUserFunctions() {\n    this._parseUserFunctions();\n  }\n\n  /**\n   * Get all current user-defined functions\n   * @returns {Array} Array of user function objects\n   */\n  getUserFunctions() {\n    return Array.from(this.userFunctions.values());\n  }\n\n  /**\n   * Get editor instances\n   * @returns {Object} Object containing editor instances\n   */\n  getEditors() {\n    return {\n      input: this.editor,\n      output: this.outputEditor,\n    };\n  }\n}\n\n// Export for use in other modules\nexport default MonacoEditorManager;\n","/**\n * AI Manager - Centralized AI chat functionality\n * Handles AI chat interactions, command processing, and UI management\n */\n\nimport storageManager from '../utils/storageManager.js';\nimport aiCommands from './aiCommands.js';\n\nclass AIManager {\n  constructor() {\n    this.currentMode = 'assistant';\n    this.isAutoApprove = false;\n    this.pendingCommandData = null;\n    this.isStreaming = false;\n    this.messageQueue = [];\n\n    // Session and context management\n    this.sessionId = this.generateSessionId();\n    this.conversationHistory = [];\n    this.userContext = {\n      currentTask: null,\n      lastCommand: null,\n      codeContext: {\n        lastAnalyzed: null,\n        selectedText: null,\n        cursorPosition: null,\n        recentSearches: [],\n      },\n      preferences: {\n        autoExecute: false,\n        verboseMode: false,\n        language: 'en',\n      },\n    };\n    this.maxHistoryLength = 20; // Keep last 20 messages for context\n  }\n\n  /**\n   * Generate a unique session ID\n   * @returns {string} Session ID\n   */\n  generateSessionId() {\n    return (\n      'session_' + Date.now() + '_' + Math.random().toString(36).substr(2, 9)\n    );\n  }\n\n  /**\n   * Add message to conversation history\n   * @param {string} role - Message role (user/ai/system)\n   * @param {string} content - Message content\n   */\n  addToConversationHistory(role, content) {\n    const message = {\n      role: role,\n      content: content,\n      timestamp: new Date().toISOString(),\n      sessionId: this.sessionId,\n    };\n\n    this.conversationHistory.push(message);\n\n    // Keep only the last maxHistoryLength messages\n    if (this.conversationHistory.length > this.maxHistoryLength) {\n      this.conversationHistory = this.conversationHistory.slice(\n        -this.maxHistoryLength\n      );\n    }\n\n    console.log(\n      `📝 Added ${role} message to conversation history (${this.conversationHistory.length} total)`\n    );\n  }\n\n  /**\n   * Get conversation context for AI requests\n   * @param {number} maxMessages - Maximum number of recent messages to include\n   * @returns {Array} Conversation history\n   */\n  getConversationContext(maxMessages = 10) {\n    return this.conversationHistory.slice(-maxMessages);\n  }\n\n  /**\n   * Update user context\n   * @param {Object} contextUpdate - Context updates\n   */\n  updateUserContext(contextUpdate) {\n    this.userContext = { ...this.userContext, ...contextUpdate };\n    console.log('🔄 Updated user context:', this.userContext);\n  }\n\n  /**\n   * Clear conversation history\n   */\n  clearConversationHistory() {\n    this.conversationHistory = [];\n    this.sessionId = this.generateSessionId();\n    console.log(\n      '🗑️ Conversation history cleared, new session:',\n      this.sessionId\n    );\n  }\n\n  /**\n   * Switch AI mode\n   * @param {string} mode - New mode (assistant, editor, optimizer, teacher)\n   */\n  switchMode(mode) {\n    this.currentMode = mode;\n    storageManager.setAiMode(mode);\n\n    this.updateModeSelector();\n    console.log('AI Mode switched to:', mode);\n  }\n\n  /**\n   * Toggle auto-approve setting\n   */\n  toggleAutoApprove() {\n    const toggle = document.getElementById('autoApproveToggle');\n    const status = document.getElementById('autoApproveStatus');\n\n    if (!toggle || !status) return;\n\n    this.isAutoApprove = toggle.checked;\n    status.textContent = this.isAutoApprove ? 'ON' : 'OFF';\n    status.style.color = this.isAutoApprove ? '#10a37f' : '#888';\n\n    storageManager.setAiAutoApprove(this.isAutoApprove);\n    console.log('Auto-approve toggled:', this.isAutoApprove);\n  }\n\n  /**\n   * Handle chat input keydown events\n   * @param {Event} event - Keydown event\n   */\n  handleChatKeydown(event) {\n    if (event.key === 'Enter' && !event.shiftKey) {\n      event.preventDefault();\n      this.sendMessage();\n    }\n  }\n\n  /**\n   * Send AI message\n   */\n  async sendMessage() {\n    const input = document.getElementById('aiChatInput');\n    const messagesContainer = document.getElementById('aiChatMessages');\n\n    if (!input || !messagesContainer || !input.value.trim()) return;\n\n    const userMessage = input.value.trim();\n\n    // Check if this is a confirmation of a pending command\n    if (this.handleUserConfirmation(userMessage, messagesContainer)) {\n      input.value = '';\n      return;\n    }\n\n    // Add user message to chat\n    this.addMessage('user', `<strong>You:</strong> ${userMessage}`);\n    input.value = '';\n\n    // Show typing indicator\n    const typingIndicator = this.createTypingIndicator();\n    messagesContainer.appendChild(typingIndicator);\n    messagesContainer.scrollTop = messagesContainer.scrollHeight;\n\n    try {\n      // Get context for AI\n      const context = this.buildAIContext(userMessage);\n\n      // Send to AI service\n      const response = await fetch('/api/ai/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          message: userMessage,\n          context: context,\n          provider: 'local',\n          stream: true,\n        }),\n      });\n\n      if (!response.ok) {\n        throw new Error(`Server responded with ${response.status}`);\n      }\n\n      // Handle streaming response\n      await this.handleStreamingResponse(\n        response,\n        messagesContainer,\n        typingIndicator\n      );\n    } catch (error) {\n      console.error('Error getting AI response:', error);\n      this.removeTypingIndicator(typingIndicator);\n      this.addMessage(\n        'ai',\n        `<strong>🤖 :</strong> <span style=\"color: #ff6b6b;\">Sorry, I encountered an error: ${error.message}</span>`\n      );\n    }\n  }\n\n  /**\n   * Build context for AI request\n   * @param {string} userMessage - User's message\n   * @returns {Object} Context object\n   */\n  buildAIContext(userMessage) {\n    // This would integrate with the editor to get context\n    // For now, return basic context\n    return {\n      currentGcode: '',\n      selectedText: '',\n      cursorPosition: null,\n      userConfirmation: userMessage\n        .toLowerCase()\n        .match(/\\b(do it|yes|confirm|proceed|execute|go ahead)\\b/)\n        ? true\n        : false,\n      pendingCommand: null,\n      timestamp: new Date().toISOString(),\n    };\n  }\n\n  /**\n   * Handle streaming AI response\n   * @param {Response} response - Fetch response\n   * @param {Element} messagesContainer - Messages container element\n   * @param {Element} typingIndicator - Typing indicator element\n   */\n  async handleStreamingResponse(response, messagesContainer, typingIndicator) {\n    if (!response.headers.get('Content-Type')?.includes('text/event-stream')) {\n      // Handle non-streaming response\n      this.handleNonStreamingResponse(\n        response,\n        messagesContainer,\n        typingIndicator\n      );\n      return;\n    }\n\n    // Handle streaming response\n    const reader = response.body.getReader();\n    const decoder = new TextDecoder();\n    let buffer = '';\n    let responseText = '';\n\n    const aiResponseContainer = this.createAIMessageContainer();\n    messagesContainer.removeChild(typingIndicator);\n    messagesContainer.appendChild(aiResponseContainer);\n    let aiResponseContent = aiResponseContainer.querySelector(\n      '.ai-message-content'\n    );\n    aiResponseContent.innerHTML = '<strong>🤖 :</strong> ';\n\n    try {\n      let done = false;\n      while (!done) {\n        const { value, done: readerDone } = await reader.read();\n        done = readerDone;\n        if (done) break;\n\n        buffer += decoder.decode(value, { stream: true });\n        const lines = buffer.split('\\n');\n        buffer = lines.pop();\n\n        for (const line of lines) {\n          if (line.startsWith('data: ')) {\n            try {\n              const data = JSON.parse(line.slice(6));\n              if (data.content) {\n                responseText += data.content;\n                aiResponseContent.innerHTML = `<strong>🤖 :</strong> ${responseText}`;\n                messagesContainer.scrollTop = messagesContainer.scrollHeight;\n\n                // Check for AI commands\n                const commandMatch = responseText.match(\n                  /\\/ai:(\\w+)\\s*\\[([^\\]]+)\\]/\n                );\n                if (commandMatch) {\n                  const command = commandMatch[1];\n                  const params = commandMatch[2];\n                  this.showCommandActions(command, params);\n                }\n              }\n            } catch (parseError) {\n              console.warn('Failed to parse streaming data:', line, parseError);\n            }\n          }\n        }\n      }\n\n      // Process remaining buffer\n      if (buffer.startsWith('data: ')) {\n        try {\n          const data = JSON.parse(buffer.slice(6));\n          if (data.content) {\n            responseText += data.content;\n            aiResponseContent.innerHTML = `<strong>🤖 :</strong> ${this.parseAICommands(responseText)}`;\n          }\n        } catch (parseError) {\n          console.warn('Failed to parse final streaming data:', buffer);\n        }\n      }\n    } catch (error) {\n      console.error('Error reading streaming response:', error);\n      aiResponseContent.innerHTML = `<strong>🤖 :</strong> <span style=\"color: #ff6b6b;\">Sorry, I encountered an error: ${error.message}</span>`;\n    }\n  }\n\n  /**\n   * Handle non-streaming AI response\n   * @param {Response} response - Fetch response\n   * @param {Element} messagesContainer - Messages container element\n   * @param {Element} typingIndicator - Typing indicator element\n   */\n  async handleNonStreamingResponse(\n    response,\n    messagesContainer,\n    typingIndicator\n  ) {\n    try {\n      const data = await response.json();\n      messagesContainer.removeChild(typingIndicator);\n\n      if (data.success) {\n        const cleanResponse = this.parseAICommands(data.response);\n        this.addMessage('ai', `<strong>🤖 :</strong> ${cleanResponse}`);\n      } else {\n        this.addMessage(\n          'ai',\n          `<strong>🤖 :</strong> <span style=\"color: #ff6b6b;\">${data.error || 'Sorry, I encountered an error.'}</span>`\n        );\n      }\n    } catch (error) {\n      console.error('Error parsing non-streaming response:', error);\n      messagesContainer.removeChild(typingIndicator);\n      this.addMessage(\n        'ai',\n        `<strong>🤖 :</strong> <span style=\"color: #ff6b6b;\">Sorry, I encountered an error: ${error.message}</span>`\n      );\n    }\n  }\n\n  /**\n   * Parse and execute AI commands from response\n   * @param {string} response - AI response text\n   * @returns {string} Clean response with commands removed\n   */\n  parseAICommands(response) {\n    console.log('🔍 Parsing AI commands from response:', response);\n\n    // More comprehensive command regex patterns\n    const commandPatterns = [\n      /\\/ai:(\\w+)\\s*\\[([^\\]]*)\\]/g, // /ai:command[params]\n      /\\/ai:(\\w+)\\s*(\\w*)/g, // /ai:command params\n      /\\/ai:(\\w+)/g, // /ai:command\n    ];\n\n    let commands = [];\n    let cleanResponse = response;\n\n    // Try each pattern\n    for (const pattern of commandPatterns) {\n      let match;\n      while ((match = pattern.exec(response)) !== null) {\n        const command = match[1];\n        const params = match[2] || match[3] || '';\n\n        commands.push({\n          command: command,\n          params: params,\n          original: match[0],\n        });\n\n        console.log('🎯 Found AI command:', {\n          command,\n          params,\n          original: match[0],\n        });\n      }\n    }\n\n    console.log('📋 Total commands found:', commands.length);\n\n    // Execute commands using the AI Commands module\n    commands.forEach((cmd, index) => {\n      console.log(\n        `🔧 Executing command ${index + 1}:`,\n        cmd.command,\n        'with params:',\n        cmd.params\n      );\n\n      // Handle commands that are implemented in aiCommands.js\n      const implementedCommands = [\n        'insertat',\n        'insert',\n        'replace',\n        'replacerange',\n        'analyze',\n        'help',\n        'capabilities',\n        'status',\n        'find',\n        'getline',\n        'getlines',\n        'getcontent',\n        'getselection',\n        'getcursor',\n      ];\n\n      if (implementedCommands.includes(cmd.command)) {\n        try {\n          console.log('🚀 Executing AI command:', cmd.command);\n          aiCommands.executePendingCommand(cmd.command, cmd.params);\n\n          // Add success feedback\n          this.addSystemMessage(\n            `<strong>🤖 :</strong> ✅ Executed command: <code>${cmd.original}</code>`\n          );\n          console.log('✅ AI command executed successfully:', cmd.command);\n        } catch (error) {\n          console.error('❌ Error executing AI command:', cmd.command, error);\n          this.addSystemMessage(\n            `<strong>🤖 :</strong> <span style=\"color: #ff6b6b;\">❌ Error executing command ${cmd.command}: ${error.message}</span>`\n          );\n        }\n      } else {\n        console.warn('⚠️ Unknown command:', cmd.command);\n        this.addSystemMessage(\n          `<strong>🤖 :</strong> <span style=\"color: #ffa500;\">⚠️ Unknown command: ${cmd.command}</span>`\n        );\n      }\n\n      // Remove the command from the response text\n      cleanResponse = cleanResponse.replace(cmd.original, '').trim();\n    });\n\n    console.log('📝 Clean response after command removal:', cleanResponse);\n    return cleanResponse;\n  }\n\n  /**\n   * Add message to chat\n   * @param {string} sender - Message sender (user/ai)\n   * @param {string} content - Message content\n   */\n  addMessage(sender, content) {\n    const messagesContainer = document.getElementById('aiChatMessages');\n    if (!messagesContainer) return;\n\n    const messageDiv = document.createElement('div');\n    messageDiv.className = `ai-message ai-${sender}`;\n    messageDiv.innerHTML = `<div class=\"ai-message-content\">${content}</div>`;\n\n    messagesContainer.appendChild(messageDiv);\n    messagesContainer.scrollTop = messagesContainer.scrollHeight;\n  }\n\n  /**\n   * Add system message to chat\n   * @param {string} message - System message to add\n   */\n  addSystemMessage(message) {\n    const messagesContainer = document.getElementById('aiChatMessages');\n    if (!messagesContainer) return;\n\n    const messageDiv = document.createElement('div');\n    messageDiv.className = 'ai-message ai-system';\n    messageDiv.innerHTML = `<div class=\"ai-message-content\">${message}</div>`;\n\n    messagesContainer.appendChild(messageDiv);\n    messagesContainer.scrollTop = messagesContainer.scrollHeight;\n  }\n\n  /**\n   * Create typing indicator element\n   * @returns {Element} Typing indicator element\n   */\n  createTypingIndicator() {\n    const typingIndicator = document.createElement('div');\n    typingIndicator.className = 'ai-message ai-typing';\n    typingIndicator.innerHTML =\n      '<div class=\"ai-message-content\"><strong>🤖 :</strong> <em>Thinking...</em></div>';\n    return typingIndicator;\n  }\n\n  /**\n   * Create AI message container\n   * @returns {Element} AI message container element\n   */\n  createAIMessageContainer() {\n    const container = document.createElement('div');\n    container.className = 'ai-message ai-ai';\n    const content = document.createElement('div');\n    content.className = 'ai-message-content';\n    container.appendChild(content);\n    return container;\n  }\n\n  /**\n   * Remove typing indicator\n   * @param {Element} typingIndicator - Typing indicator element\n   */\n  removeTypingIndicator(typingIndicator) {\n    if (typingIndicator.parentNode) {\n      typingIndicator.parentNode.removeChild(typingIndicator);\n    }\n  }\n\n  /**\n   * Show command actions UI\n   * @param {string} command - AI command\n   * @param {string} params - Command parameters\n   */\n  showCommandActions(command, params) {\n    console.log('Showing command actions for:', command, params);\n\n    this.pendingCommandData = { command, params };\n\n    const actionsDiv = document.getElementById('aiCommandActions');\n    const previewDiv = document.getElementById('commandPreview');\n    const executeBtn = document.getElementById('executeAiCommandBtn');\n\n    if (!actionsDiv || !previewDiv || !executeBtn) {\n      console.error('Command actions UI elements not found');\n      return;\n    }\n\n    // Set command preview\n    let previewText = `/${command}`;\n    if (params) {\n      previewText += ` [${params}]`;\n    }\n    previewDiv.textContent = previewText;\n\n    // Update button text based on command type\n    const commandNames = {\n      insertat: 'Insert at Position',\n      insert: 'Insert at Cursor',\n      replace: 'Replace Selection',\n      analyze: 'Analyze Code',\n    };\n\n    executeBtn.innerHTML = `\n      <svg width=\"14\" height=\"14\" viewBox=\"0 0 16 16\" fill=\"currentColor\">\n        <path d=\"M8 0C3.58 0 0 3.58 0 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm3.5 5.5L7.25 10.75 4.5 8l1.5-1.5 1.25 1.25L10 4l1.5 1.5z\"/>\n      </svg>\n      ${commandNames[command] || 'Execute Command'}\n    `;\n\n    // Show the actions UI\n    actionsDiv.style.display = 'block';\n    actionsDiv.scrollIntoView({ behavior: 'smooth', block: 'nearest' });\n  }\n\n  /**\n   * Hide command actions UI\n   */\n  hideCommandActions() {\n    const actionsDiv = document.getElementById('aiCommandActions');\n    if (actionsDiv) {\n      actionsDiv.style.display = 'none';\n    }\n    this.pendingCommandData = null;\n    console.log('Command actions UI hidden');\n  }\n\n  /**\n   * Execute pending command from UI\n   */\n  executePendingCommandFromUI() {\n    if (!this.pendingCommandData) {\n      console.error('No pending command data');\n      return;\n    }\n\n    const { command, params } = this.pendingCommandData;\n    console.log('Executing pending command from UI:', command, params);\n\n    try {\n      aiCommands.executePendingCommand(command, params);\n      console.log('✅ AI command executed successfully from UI:', command);\n      this.hideCommandActions();\n    } catch (error) {\n      console.error('❌ Error executing AI command from UI:', command, error);\n      this.addSystemMessage(\n        `<strong>System:</strong> Error executing command ${command}: ${error.message}`\n      );\n      this.hideCommandActions();\n    }\n  }\n\n  /**\n   * Handle user confirmation for pending commands\n   * @param {string} userMessage - User's message\n   * @param {Element} messagesContainer - Messages container\n   * @returns {boolean} Whether a confirmation was handled\n   */\n  handleUserConfirmation(userMessage, messagesContainer) {\n    const confirmationWords =\n      /\\b(do it|yes|confirm|proceed|execute|go ahead|please|sure|ok)\\b/i;\n    if (!confirmationWords.test(userMessage)) {\n      return false;\n    }\n\n    const lastAiMessage = Array.from(\n      messagesContainer.querySelectorAll('.ai-message.ai-ai')\n    ).pop();\n    if (!lastAiMessage) return false;\n\n    const aiMessageText = lastAiMessage.textContent;\n    console.log('Checking for pending commands in:', aiMessageText);\n\n    const commandMatch = aiMessageText.match(/\\/ai:(\\w+)\\s*\\[([^\\]]+)\\]/);\n    if (commandMatch) {\n      const command = commandMatch[1];\n      const params = commandMatch[2];\n      console.log('Found pending command:', command, 'with params:', params);\n\n      // Execute the confirmed command\n      try {\n        aiCommands.executePendingCommand(command, params);\n        console.log('✅ Confirmed command executed successfully:', command);\n\n        // Add success message\n        this.addMessage(\n          'ai',\n          `<strong>🤖 :</strong> Command executed successfully! ${command} with parameters: ${params}`\n        );\n      } catch (error) {\n        console.error('❌ Error executing confirmed command:', command, error);\n        this.addMessage(\n          'ai',\n          `<strong>🤖 :</strong> <span style=\"color: #ff6b6b;\">Error executing confirmed command: ${error.message}</span>`\n        );\n      }\n\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Update mode selector UI\n   */\n  updateModeSelector() {\n    const modeSelector = document.getElementById('aiMode');\n    if (modeSelector) {\n      modeSelector.value = this.currentMode;\n    }\n  }\n\n  /**\n   * Update auto-approve toggle UI\n   */\n  updateAutoApproveToggle() {\n    const toggle = document.getElementById('autoApproveToggle');\n    const status = document.getElementById('autoApproveStatus');\n\n    if (toggle) toggle.checked = this.isAutoApprove;\n    if (status) {\n      status.textContent = this.isAutoApprove ? 'ON' : 'OFF';\n      status.style.color = this.isAutoApprove ? '#10a37f' : '#888';\n    }\n  }\n\n  /**\n   * Show AI chat modal\n   */\n  showAiChat() {\n    //console.log('================================================================showAiChat called');\n    const modal = document.getElementById('aiChatModal');\n    //console.log('Modal element:', modal);\n\n    if (modal) {\n      modal.style.display = 'block';\n      //console.log('Modal opened');\n\n      // Load settings when modal opens\n      this.loadSettings();\n\n      // Dropdown state is now managed by DropdownManager\n\n      // Focus the input after a short delay\n      setTimeout(() => {\n        const input = document.getElementById('aiChatInput');\n        console.log('Input element:', input);\n        if (input) {\n          input.focus();\n          console.log('Input focused');\n        }\n      }, 100);\n    } else {\n      console.error('aiChatModal not found!');\n    }\n  }\n\n  /**\n   * Close AI chat modal\n   */\n  closeAiChat() {\n    const modal = document.getElementById('aiChatModal');\n    if (modal) {\n      modal.style.display = 'none';\n    }\n\n    // Dropdown closing is now handled by the centralized dropdown system\n  }\n\n  /**\n   * Send AI message (alias for sendMessage)\n   */\n  sendAiMessage() {\n    return this.sendMessage();\n  }\n\n  /**\n   * Handle AI chat keydown events (alias for handleChatKeydown)\n   * @param {Event} event - Keydown event\n   */\n  handleAiChatKeydown(event) {\n    return this.handleChatKeydown(event);\n  }\n\n  /**\n   * Change AI mode\n   * @param {string} mode - New mode to switch to\n   */\n  changeAiMode(mode) {\n    this.switchMode(mode);\n    this.showAiChat();\n  }\n\n  /**\n   * Switch AI mode (alias for switchMode for global access)\n   * @param {string} mode - New mode to switch to\n   */\n  switchAiMode(mode) {\n    this.switchMode(mode);\n    // Dropdown closing is now handled by the centralized dropdown system\n  }\n\n  /**\n   * AI Quick Actions Handler\n   * @param {string} action - Quick action type\n   */\n  aiQuickAction(action) {\n    // Dropdown closing is now handled by the centralized dropdown system\n\n    // Show the AI chat modal\n    this.showAiChat();\n\n    // Get the AI chat input element\n    const aiInput = document.getElementById('aiChatInput');\n    if (!aiInput) return;\n\n    // Get current editor content and selection\n    const editorContent = this.getCurrentEditorContent();\n    const selectedText = this.getSelectedText();\n    const cursorPos = this.getCursorPosition();\n\n    // Set the appropriate prompt based on the action\n    let prompt = '';\n    switch (action) {\n      case 'review':\n        prompt =\n          'Please review my G-code for best practices, potential issues, and optimization opportunities. Use the /ai:analyze command to examine the code.';\n        break;\n      case 'optimize':\n        prompt =\n          'Please optimize my G-code to improve efficiency, reduce machining time, and maintain accuracy. Use the /ai:analyze command first, then suggest optimizations with /ai:write if needed.';\n        break;\n      case 'explain':\n        if (selectedText) {\n          prompt = `Please explain the following G-code section:\n\n${selectedText}\n\nUse the /ai:getlines command to retrieve more context if needed.`;\n        } else {\n          prompt =\n            'Please explain how my G-code works and what each section does. Use the /ai:getlines command to examine specific parts of the code.';\n        }\n        break;\n      case 'analyze':\n        prompt =\n          'Please analyze my G-code and provide detailed statistics about its structure and complexity. Use the /ai:analyze command to perform the analysis.';\n        break;\n      case 'debug':\n        prompt =\n          'Please help me debug my G-code. Look for potential issues, syntax errors, or logical problems. Use the /ai:analyze command to examine the code thoroughly.';\n        break;\n      case 'convert':\n        prompt =\n          'Please help me convert or modify my G-code format. Use the /ai:analyze command first to understand the current format, then suggest conversions.';\n        break;\n      case 'simulate':\n        prompt =\n          'Please help me understand how this G-code will execute. Use the /ai:analyze command to examine the toolpath and movements.';\n        break;\n      default:\n        prompt =\n          'Please help me with my G-code. Feel free to use any of your available commands to interact with the code.';\n    }\n\n    // Add context to the prompt\n    if (editorContent) {\n      prompt += `\n\nCurrent G-code content (first 500 characters):\n${editorContent.substring(0, 500)}${editorContent.length > 500 ? '...' : ''}`;\n    }\n\n    if (cursorPos) {\n      prompt += `\n\nCursor position: Line ${cursorPos.lineNumber}, Column ${cursorPos.column}`;\n    }\n\n    // Set the prompt in the AI chat input\n    aiInput.value = prompt;\n\n    // Focus the input\n    aiInput.focus();\n\n    // Send the message automatically after a short delay to allow the modal to fully open\n    setTimeout(() => {\n      this.sendMessage();\n    }, 300);\n  }\n\n  /**\n   * Get current editor content\n   * @returns {string} Current editor content\n   */\n  getCurrentEditorContent() {\n    if (window.editorManager) {\n      return window.editorManager.getInputValue();\n    }\n    if (window.editor) {\n      return window.editor.getValue();\n    }\n    return '';\n  }\n\n  /**\n   * Get selected text from editor\n   * @returns {string} Selected text\n   */\n  getSelectedText() {\n    if (window.editor) {\n      const selection = window.editor.getSelection();\n      if (selection && !selection.isEmpty()) {\n        return window.editor.getModel().getValueInRange(selection);\n      }\n    }\n    return '';\n  }\n\n  /**\n   * Get cursor position from editor\n   * @returns {Object|null} Cursor position\n   */\n  getCursorPosition() {\n    if (window.editor) {\n      return window.editor.getPosition();\n    }\n    return null;\n  }\n\n  /**\n   * Test function for AI commands\n   */\n  testAICommands() {\n    console.log('=== TESTING AI COMMANDS EXECUTION ===');\n\n    // Test 1: Basic command parsing\n    console.log('\\n1. Testing AI command parsing...');\n    const testResponse = 'I will analyze your code now. /ai:analyze';\n    console.log('Test response:', testResponse);\n    const result = this.parseAICommands(testResponse);\n    console.log('Parse result:', result);\n\n    // Test 2: Multiple commands\n    console.log('\\n2. Testing multiple AI commands...');\n    const multiCommandResponse =\n      'Let me help you. /ai:analyze and then /ai:insert[\"Hello World\"]';\n    console.log('Multi-command response:', multiCommandResponse);\n    const multiResult = this.parseAICommands(multiCommandResponse);\n    console.log('Multi-command parse result:', multiResult);\n\n    // Test 3: Direct command execution\n    console.log('\\n3. Testing direct command execution...');\n    try {\n      console.log('Executing /ai:analyze command directly...');\n      aiCommands.executePendingCommand('analyze', '');\n      console.log('✅ Direct command execution successful');\n    } catch (error) {\n      console.error('❌ Direct command execution failed:', error);\n    }\n\n    console.log('\\n=== AI COMMANDS TEST COMPLETE ===');\n  }\n\n  /**\n   * Test editor functionality\n   */\n  testEditor() {\n    console.log('=== EDITOR DEBUG TEST ===');\n    console.log('window.editor exists:', !!window.editor);\n    console.log('window.editorManager exists:', !!window.editorManager);\n\n    if (window.editor) {\n      console.log(\n        'Editor value (first 200 chars):',\n        window.editor.getValue().substring(0, 200)\n      );\n      console.log('Editor position:', window.editor.getPosition());\n      console.log('Editor model exists:', !!window.editor.getModel());\n\n      // Test inserting text at cursor\n      try {\n        const pos = window.editor.getPosition();\n        console.log('Testing insert at cursor position:', pos);\n\n        const result = window.editor.executeEdits('test', [\n          {\n            range: {\n              startLineNumber: pos.lineNumber,\n              startColumn: pos.column,\n              endLineNumber: pos.lineNumber,\n              endColumn: pos.column,\n            },\n            text: '// EDITOR TEST - This should appear!',\n          },\n        ]);\n\n        console.log('Test insert result:', result);\n        console.log(\n          'New editor content (first 200 chars):',\n          window.editor.getValue().substring(0, 200)\n        );\n      } catch (error) {\n        console.error('Test insert failed:', error);\n      }\n    } else {\n      console.error('Editor not available for testing');\n    }\n\n    console.log('=== END EDITOR DEBUG TEST ===');\n  }\n\n  /**\n   * Test function to verify AI agent integration\n   */\n  testAIIntegration() {\n    console.log('Testing AI Agent Integration...');\n\n    // Test getting GGcode content\n    const content = this.getCurrentEditorContent();\n    console.log('Current GGcode content:', content.substring(0, 100) + '...');\n\n    // Test getting cursor position\n    const cursorPos = this.getCursorPosition();\n    console.log('Cursor position:', cursorPos);\n\n    // Test getting selected text\n    const selectedText = this.getSelectedText();\n    console.log('Selected text:', selectedText);\n\n    // Test analysis\n    const analysis = this.analyzeCode ? this.analyzeCode() : {};\n    console.log('GGcode analysis:', analysis);\n\n    console.log('AI Agent integration test completed successfully.');\n  }\n\n  /**\n   * Test AI command parsing and execution\n   */\n  testAICommandParsing() {\n    console.log('=== TESTING AI COMMAND PARSING ===');\n\n    const testCases = [\n      'I will analyze your code now. /ai:analyze',\n      'Let me help you with /ai:analyze[]',\n      'Please use /ai:find[\"variable\"] to search',\n      'Try this command: /ai:getlines[1,10]',\n      'Multiple commands: /ai:analyze and /ai:find[\"test\"]',\n      'No commands here, just regular text.',\n      '/ai:unknowncommand should be unknown',\n      '/ai:analyze[\"some param\"] with parameters',\n    ];\n\n    testCases.forEach((testCase, index) => {\n      console.log(`\\n📝 Test Case ${index + 1}: \"${testCase}\"`);\n      console.log('🔍 Parsing result:');\n      const result = this.parseAICommands(testCase);\n      console.log('📝 Clean result:', `\"${result}\"`);\n    });\n\n    console.log('\\n=== AI COMMAND PARSING TEST COMPLETE ===');\n  }\n\n  /**\n   * Direct test of command execution\n   */\n  testDirectCommandExecution() {\n    console.log('=== TESTING DIRECT COMMAND EXECUTION ===');\n\n    const testCommands = [\n      { command: 'analyze', params: '' },\n      { command: 'help', params: '' },\n      { command: 'status', params: '' },\n      { command: 'find', params: '\"variable\"' },\n      { command: 'getlines', params: '1,5' },\n    ];\n\n    testCommands.forEach((cmd, index) => {\n      console.log(\n        `\\n🔧 Test Command ${index + 1}: /ai:${cmd.command}[${cmd.params}]`\n      );\n\n      try {\n        console.log('🚀 Executing command...');\n        aiCommands.executePendingCommand(cmd.command, cmd.params);\n        console.log('✅ Command executed successfully');\n\n        // Add a small delay between commands\n        if (index < testCommands.length - 1) {\n          setTimeout(() => {}, 100);\n        }\n      } catch (error) {\n        console.error('❌ Command execution failed:', error);\n      }\n    });\n\n    console.log('\\n=== DIRECT COMMAND EXECUTION TEST COMPLETE ===');\n  }\n\n  /**\n   * Initialize the AI Manager\n   * Called when the application starts\n   */\n  initialize() {\n    //console.log('🤖 AI Manager initializing...');\n\n    try {\n      // Load saved settings\n      this.loadSettings();\n\n      // Setup event listeners\n      this.setupEventListeners();\n\n      //console.log('✅ AI Manager initialized successfully');\n      return true;\n    } catch (error) {\n      console.error('❌ AI Manager initialization failed:', error);\n      return false;\n    }\n  }\n\n  /**\n   * Load saved settings from storage\n   */\n  loadSettings() {\n    try {\n      // Load AI mode\n      const savedMode = storageManager.getAiMode();\n      if (savedMode) {\n        this.currentMode = savedMode;\n      }\n\n      // Load auto-approve setting\n      const savedAutoApprove = storageManager.getAiAutoApprove();\n      if (savedAutoApprove !== null) {\n        this.isAutoApprove = savedAutoApprove;\n      }\n\n      // Update UI elements\n      this.updateModeSelector();\n      this.updateAutoApproveToggle();\n\n      // Button state is now managed by DropdownManager\n\n      // console.log('⚙️ AI settings loaded:', {\n      //     mode: this.currentMode,\n      //     autoApprove: this.isAutoApprove\n      // });\n    } catch (error) {\n      console.warn('⚠️ Failed to load AI settings:', error);\n    }\n  }\n\n  /**\n   * Setup event listeners\n   */\n  setupEventListeners() {\n    // AI chat input keydown\n\n    const aiChatInput = document.getElementById('aiChatInput');\n    if (aiChatInput) {\n      aiChatInput.addEventListener('keydown', (event) => {\n        this.handleChatKeydown(event);\n      });\n    }\n\n    // Auto-approve toggle\n    const autoApproveToggle = document.getElementById('autoApproveToggle');\n    if (autoApproveToggle) {\n      autoApproveToggle.addEventListener('change', () => {\n        this.toggleAutoApprove();\n      });\n    }\n\n    // Execute AI command button\n    const executeAiCommandBtn = document.getElementById('executeAiCommandBtn');\n    if (executeAiCommandBtn) {\n      executeAiCommandBtn.addEventListener('click', () => {\n        this.executePendingCommandFromUI();\n      });\n    }\n\n    //console.log('🎧 AI event listeners setup complete');\n  }\n}\n\n// Create and export singleton instance\nconst aiManager = new AIManager();\nexport default aiManager;\n","/**\n * Example Manager Module\n * Handles loading and managing example files\n */\n\nimport storageManager from '../utils/storageManager.js';\n\nclass ExampleManager {\n  constructor(apiManager, editorManager) {\n    this.apiManager = apiManager;\n    this.editorManager = editorManager;\n    this.lastOpenedFilename = '';\n\n    // Ensure loadExample is globally available\n    this.ensureGlobalFunction();\n  }\n\n  /**\n   * Show examples modal\n   */\n  showExamples() {\n    if (window.showModal) {\n      window.showModal('examplesModal');\n    }\n    this.loadExamples();\n    // Setup examples search after examples are loaded\n    setTimeout(() => this.setupExamplesSearch(), 100);\n    // Focus search input\n    setTimeout(() => {\n      const searchInput = document.getElementById('examplesSearchInput');\n      if (searchInput) {\n        searchInput.focus();\n      }\n    }, 200);\n  }\n\n  /**\n   * Load examples list\n   */\n  async loadExamples() {\n    const examplesList = document.getElementById('examplesList');\n    if (!examplesList) return;\n\n    try {\n      const examples = await this.apiManager.examples.getList();\n\n      if (examples && examples.length > 0) {\n        examplesList.innerHTML = examples\n          .map(\n            (file) => `\n                    <div class=\"example-item\" onclick=\"loadExample('${file.name}')\">\n                        <div class=\"example-title\">${file.name}</div>\n                        <div class=\"example-description\">${file.description || 'Click to load this example'}</div>\n                        <div class=\"example-preview\">${file.preview || ''}</div>\n                    </div>\n                `\n          )\n          .join('');\n      } else {\n        examplesList.innerHTML =\n          '<p style=\"color: #cccccc;\">Failed to load examples</p>';\n      }\n    } catch (error) {\n      examplesList.innerHTML =\n        '<p style=\"color: #cccccc;\">Error loading examples: ' +\n        error.message +\n        '</p>';\n    }\n  }\n\n  /**\n   * Load specific example\n   */\n  async loadExample(filename) {\n    try {\n      const result = await this.apiManager.examples.getContent(filename);\n\n      if (result && result.content) {\n        // Set the correct editor based on file type\n        if (filename.endsWith('.ggcode')) {\n          if (this.editorManager) {\n            this.editorManager.setInputValue(result.content);\n            this.editorManager.setLastOpenedFilename(filename);\n          }\n        } else if (filename.endsWith('.gcode')) {\n          if (this.editorManager) {\n            this.editorManager.setOutputValue(result.content);\n          }\n        }\n        // Remember filename\n        this.lastOpenedFilename = filename;\n        storageManager.setLastFilename(this.lastOpenedFilename);\n        // Direct compilation after file load\n        if (window.submitGGcode) {\n          window.submitGGcode(new Event('submit'));\n        }\n        if (window.closeModal) {\n          window.closeModal('examplesModal');\n        }\n      } else {\n        alert('Failed to load example: No content available');\n      }\n    } catch (error) {\n      alert('Error loading example: ' + error.message);\n    }\n  }\n\n  /**\n   * Setup examples search\n   */\n  setupExamplesSearch() {\n    // TODO: Implement examples search functionality\n    console.log('Examples search setup - TODO');\n  }\n\n  /**\n   * Fallback loadExample function for direct HTML onclick calls\n   * This ensures loadExample is always available globally\n   */\n  ensureGlobalFunction() {\n    if (typeof window !== 'undefined') {\n      window.loadExample =\n        window.loadExample ||\n        ((filename) => {\n          if (window.applicationManager) {\n            window.applicationManager.getExampleManager().loadExample(filename);\n          }\n        });\n    }\n  }\n\n  /**\n   * Get last opened filename\n   */\n  getLastOpenedFilename() {\n    return this.lastOpenedFilename;\n  }\n\n  /**\n   * Set last opened filename\n   */\n  setLastOpenedFilename(filename) {\n    this.lastOpenedFilename = filename;\n  }\n}\n\nexport default ExampleManager;\n","/**\n * File Operations Module\n * Handles file-related operations like copy, save, clear\n */\n\nimport { FileOperations } from './fileOps.js';\n\nclass FileOperationsManager {\n  constructor(editorManager) {\n    this.editorManager = editorManager;\n    this.fileOperations = new FileOperations();\n  }\n\n  /**\n   * Copy output to clipboard\n   */\n  copyOutput() {\n    if (this.fileOperations) {\n      this.fileOperations.copyOutput();\n    } else {\n      console.error('FileOperations module not available');\n    }\n  }\n\n  /**\n   * Save output to file\n   */\n  saveOutput() {\n    if (this.fileOperations) {\n      this.fileOperations.saveOutput();\n    } else {\n      console.error('FileOperations module not available');\n    }\n  }\n\n  /**\n   * Save GGcode to file\n   */\n  saveGGcode() {\n    if (this.fileOperations) {\n      this.fileOperations.saveGGcode();\n    } else {\n      console.error('FileOperations module not available');\n    }\n  }\n\n  /**\n   * Clear saved content and settings\n   */\n  clearMemory() {\n    if (this.fileOperations) {\n      this.fileOperations.clearMemory();\n    } else {\n      console.error('FileOperations module not available');\n    }\n  }\n\n  /**\n   * Save current content (legacy function for backward compatibility)\n   */\n  saveContent() {\n    if (this.editorManager) {\n      this.editorManager.saveContent();\n    }\n  }\n\n  /**\n   * Sync editors (legacy function for backward compatibility)\n   */\n  syncEditors() {\n    if (this.editorManager) {\n      const ggcodeElement = document.getElementById('ggcode');\n      if (ggcodeElement) {\n        ggcodeElement.value = this.editorManager.getInputValue();\n      }\n    }\n  }\n}\n\nexport default FileOperationsManager;\n","/**\n * File Operations Module\n *\n * Provides advanced file handling capabilities including:\n * - File validation and type detection\n * - Content processing and transformation\n * - Error handling and recovery\n * - File format conversion utilities\n */\n\nclass FileOperations {\n  constructor() {\n    this.supportedExtensions = {\n      input: ['.ggcode', '.txt'],\n      output: ['.gcode', '.nc', '.cnc'],\n      all: ['.ggcode', '.txt', '.gcode', '.nc', '.cnc'],\n    };\n\n    this.maxFileSize = 10 * 1024 * 1024; // 10MB limit\n  }\n\n  /**\n   * Validate file before processing\n   * @param {File} file - The file to validate\n   * @returns {Object} Validation result with success flag and message\n   */\n  validateFile(file) {\n    if (!file) {\n      return { success: false, message: 'No file provided' };\n    }\n\n    // Check file size\n    if (file.size > this.maxFileSize) {\n      return {\n        success: false,\n        message: `File too large. Maximum size is ${this.maxFileSize / (1024 * 1024)}MB`,\n      };\n    }\n\n    // Check if file is empty\n    if (file.size === 0) {\n      return { success: false, message: 'File is empty' };\n    }\n\n    // Check file extension\n    const extension = this.getFileExtension(file.name);\n    if (!this.supportedExtensions.all.includes(extension)) {\n      return {\n        success: false,\n        message: `Unsupported file type. Supported: ${this.supportedExtensions.all.join(', ')}`,\n      };\n    }\n\n    return { success: true, message: 'File is valid' };\n  }\n\n  /**\n   * Get file extension from filename\n   * @param {string} filename - The filename\n   * @returns {string} The file extension (including dot)\n   */\n  getFileExtension(filename) {\n    const lastDot = filename.lastIndexOf('.');\n    return lastDot > 0 ? filename.slice(lastDot).toLowerCase() : '';\n  }\n\n  /**\n   * Determine file type based on extension and content\n   * @param {string} filename - The filename\n   * @param {string} content - The file content\n   * @returns {string} File type ('ggcode', 'gcode', 'unknown')\n   */\n  determineFileType(filename, content) {\n    const extension = this.getFileExtension(filename);\n\n    // Check by extension first\n    if (this.supportedExtensions.input.includes(extension)) {\n      return 'ggcode';\n    }\n\n    if (this.supportedExtensions.output.includes(extension)) {\n      return 'gcode';\n    }\n\n    // Check by content patterns\n    if (this.isGGcodeContent(content)) {\n      return 'ggcode';\n    }\n\n    if (this.isGcodeContent(content)) {\n      return 'gcode';\n    }\n\n    return 'unknown';\n  }\n\n  /**\n   * Check if content appears to be GGcode\n   * @param {string} content - The file content\n   * @returns {boolean} True if content appears to be GGcode\n   */\n  isGGcodeContent(content) {\n    // Look for GGcode-specific patterns\n    const ggcodePatterns = [\n      /\\blet\\s+\\w+\\s*=/, // Variable declarations\n      /\\bfor\\s*\\(/, // For loops\n      /\\bif\\s*\\(/, // If statements\n      /\\bfunction\\s+\\w+/, // Function definitions\n      /\\/\\/\\/\\s*@/, // Configurator comments\n      /\\b(sin|cos|tan|sqrt|abs)\\s*\\(/, // Math functions\n    ];\n\n    return ggcodePatterns.some((pattern) => pattern.test(content));\n  }\n\n  /**\n   * Check if content appears to be G-code\n   * @param {string} content - The file content\n   * @returns {boolean} True if content appears to be G-code\n   */\n  isGcodeContent(content) {\n    // Look for G-code patterns\n    const gcodePatterns = [\n      /^[GM]\\d+/m, // G or M commands at line start\n      /[XYZ]-?\\d+\\.?\\d*/, // Coordinate values\n      /^N\\d+/m, // Line numbers\n      /F\\d+/, // Feed rates\n      /S\\d+/, // Spindle speeds\n    ];\n\n    return gcodePatterns.some((pattern) => pattern.test(content));\n  }\n\n  /**\n   * Process file content based on type\n   * @param {string} content - The file content\n   * @param {string} type - The file type\n   * @returns {Object} Processed content with metadata\n   */\n  processContent(content, type) {\n    const result = {\n      content: content,\n      type: type,\n      lineCount: 0,\n      hasErrors: false,\n      errors: [],\n      warnings: [],\n    };\n\n    // Count lines\n    result.lineCount = content.split('\\n').length;\n\n    // Type-specific processing\n    if (type === 'ggcode') {\n      this.processGGcodeContent(result);\n    } else if (type === 'gcode') {\n      this.processGcodeContent(result);\n    }\n\n    return result;\n  }\n\n  /**\n   * Process GGcode content for validation and analysis\n   * @param {Object} result - The result object to update\n   */\n  processGGcodeContent(result) {\n    const lines = result.content.split('\\n');\n\n    lines.forEach((line, index) => {\n      const lineNum = index + 1;\n      const trimmed = line.trim();\n\n      if (!trimmed || trimmed.startsWith('//')) return;\n\n      // Check for common syntax issues\n      if (trimmed.includes('let ') && !trimmed.includes('=')) {\n        result.warnings.push(\n          `Line ${lineNum}: Variable declaration without assignment`\n        );\n      }\n\n      // Check for unmatched brackets\n      const openBrackets = (trimmed.match(/\\(/g) || []).length;\n      const closeBrackets = (trimmed.match(/\\)/g) || []).length;\n      if (openBrackets !== closeBrackets) {\n        result.warnings.push(`Line ${lineNum}: Unmatched parentheses`);\n      }\n    });\n  }\n\n  /**\n   * Process G-code content for validation and analysis\n   * @param {Object} result - The result object to update\n   */\n  processGcodeContent(result) {\n    const lines = result.content.split('\\n');\n    let hasMotionCommands = false;\n\n    lines.forEach((line) => {\n      const trimmed = line.trim().toUpperCase();\n\n      if (!trimmed || trimmed.startsWith('(') || trimmed.startsWith(';'))\n        return;\n\n      // Check for motion commands\n      if (/G[0123]/.test(trimmed)) {\n        hasMotionCommands = true;\n      }\n\n      // Check for coordinates without motion commands\n      if (/[XYZ]-?\\d/.test(trimmed) && !/G[0123]/.test(trimmed)) {\n        // This might be modal G-code, which is normal\n      }\n    });\n\n    if (!hasMotionCommands) {\n      result.warnings.push('No motion commands (G0, G1, G2, G3) found');\n    }\n  }\n\n  /**\n   * Read file with progress tracking\n   * @param {File} file - The file to read\n   * @param {Function} onProgress - Progress callback (optional)\n   * @returns {Promise<Object>} Promise resolving to file data\n   */\n  async readFileWithProgress(file, onProgress = null) {\n    return new Promise((resolve, reject) => {\n      const validation = this.validateFile(file);\n      if (!validation.success) {\n        reject(new Error(validation.message));\n        return;\n      }\n\n      const reader = new FileReader();\n\n      reader.onprogress = (e) => {\n        if (onProgress && e.lengthComputable) {\n          const progress = (e.loaded / e.total) * 100;\n          onProgress(progress);\n        }\n      };\n\n      reader.onload = (e) => {\n        try {\n          const content = e.target.result;\n          const type = this.determineFileType(file.name, content);\n          const processed = this.processContent(content, type);\n\n          resolve({\n            filename: file.name,\n            size: file.size,\n            lastModified: new Date(file.lastModified),\n            ...processed,\n          });\n        } catch (error) {\n          reject(error);\n        }\n      };\n\n      reader.onerror = () => {\n        reject(new Error('Failed to read file'));\n      };\n\n      reader.readAsText(file);\n    });\n  }\n\n  /**\n   * Create a downloadable file from content\n   * @param {string} content - The file content\n   * @param {string} filename - The filename\n   * @param {string} mimeType - The MIME type (optional)\n   * @returns {Object} Download information\n   */\n  createDownload(content, filename, mimeType = 'text/plain') {\n    try {\n      const blob = new Blob([content], { type: mimeType });\n      const url = URL.createObjectURL(blob);\n\n      return {\n        success: true,\n        blob: blob,\n        url: url,\n        filename: filename,\n        size: blob.size,\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: error.message,\n      };\n    }\n  }\n\n  /**\n   * Convert content between formats\n   * @param {string} content - The content to convert\n   * @param {string} fromType - Source format\n   * @param {string} toType - Target format\n   * @returns {Object} Conversion result\n   */\n  convertFormat(content, fromType, toType) {\n    if (fromType === toType) {\n      return { success: true, content: content };\n    }\n\n    // Currently no format conversion is implemented\n    // This is a placeholder for future format conversion features\n    return {\n      success: false,\n      error: `Conversion from ${fromType} to ${toType} not supported`,\n    };\n  }\n\n  /**\n   * Get file statistics\n   * @param {string} content - The file content\n   * @param {string} type - The file type\n   * @returns {Object} File statistics\n   */\n  getFileStats(content, type) {\n    const lines = content.split('\\n');\n    const stats = {\n      totalLines: lines.length,\n      nonEmptyLines: lines.filter((line) => line.trim()).length,\n      commentLines: 0,\n      codeLines: 0,\n      size: new Blob([content]).size,\n    };\n\n    if (type === 'ggcode') {\n      stats.commentLines = lines.filter((line) =>\n        line.trim().startsWith('//')\n      ).length;\n      stats.codeLines = stats.nonEmptyLines - stats.commentLines;\n    } else if (type === 'gcode') {\n      stats.commentLines = lines.filter((line) => {\n        const trimmed = line.trim();\n        return trimmed.startsWith('(') || trimmed.startsWith(';');\n      }).length;\n      stats.codeLines = stats.nonEmptyLines - stats.commentLines;\n    }\n\n    return stats;\n  }\n\n  /**\n   * Copy output G-code to clipboard\n   */\n  copyOutput() {\n    // Find the copy button for visual feedback\n    const copyButton = document.querySelector(\n      'button[onclick*=\"copyOutput\"], button[title*=\"Copy output\"]'\n    );\n\n    if (\n      !window.outputEditor ||\n      typeof window.outputEditor.getValue !== 'function'\n    ) {\n      alert('No output content available to copy');\n      return;\n    }\n\n    const content = window.outputEditor.getValue();\n    if (!content.trim()) {\n      alert('No output content to copy');\n      return;\n    }\n\n    navigator.clipboard\n      .writeText(content)\n      .then(() => {\n        //console.log('Output copied to clipboard');\n\n        // Show success feedback on the button\n        if (copyButton) {\n          copyButton.classList.add('copy-success');\n          setTimeout(() => {\n            copyButton.classList.remove('copy-success');\n          }, 800);\n        }\n      })\n      .catch((err) => {\n        console.error('Failed to copy output:', err);\n        alert('Failed to copy: ' + err.message);\n      });\n  }\n\n  /**\n   * Save output G-code to file\n   */\n  saveOutput() {\n    // Find the export/save button to show loading on it\n    const exportButton = document.querySelector(\n      'button[onclick*=\"saveOutput\"], button[title*=\"Save output\"]'\n    );\n\n    if (\n      !window.outputEditor ||\n      typeof window.outputEditor.getValue !== 'function'\n    ) {\n      alert('No output content available to save');\n      return;\n    }\n\n    const text = window.outputEditor.getValue();\n    if (!text.trim()) {\n      alert('No output content to save');\n      return;\n    }\n\n    // Show loading on the export button\n    let restoreButton = null;\n    if (exportButton && window.navigationManager) {\n      restoreButton = window.navigationManager.showButtonLoading(\n        exportButton,\n        'Exporting...'\n      );\n    }\n\n    // Get last opened filename for suggestion\n    let lastFilename = '';\n    try {\n      lastFilename = localStorage.getItem('ggcode_last_filename') || '';\n    } catch (error) {\n      console.warn('Failed to get filename from storage:', error);\n    }\n\n    // Generate suggested filename\n    let suggestedFilename = '';\n    if (lastFilename) {\n      let base = lastFilename;\n      if (base.endsWith('.gcode') || base.endsWith('.ggcode')) {\n        base = base.replace(/\\.(gcode|ggcode)$/i, '');\n      } else if (base.lastIndexOf('.') > 0) {\n        base = base.slice(0, base.lastIndexOf('.'));\n      }\n      suggestedFilename = base + '.g.gcode';\n    }\n    if (!suggestedFilename) suggestedFilename = 'output.g.gcode';\n\n    // Prompt user for filename\n    const userFilename = window.prompt('Save G-code as:', suggestedFilename);\n    if (!userFilename) {\n      if (restoreButton) restoreButton();\n      return; // User cancelled\n    }\n\n    try {\n      // Create and download file\n      const utf8Bytes = new TextEncoder().encode(text);\n      const blob = new Blob([utf8Bytes], { type: 'application/octet-stream' });\n      const a = document.createElement('a');\n      a.href = URL.createObjectURL(blob);\n      a.download = userFilename;\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      URL.revokeObjectURL(a.href);\n\n      console.log('Output saved as:', userFilename);\n    } catch (error) {\n      console.error('Failed to save output:', error);\n      alert('Failed to save file: ' + error.message);\n    } finally {\n      // Always restore the button state\n      if (restoreButton) restoreButton();\n    }\n  }\n\n  /**\n   * Save GGcode input to file\n   */\n  saveGGcode() {\n    // Find the save button to show loading on it\n    const saveButton = document.querySelector(\n      'button[onclick*=\"saveGGcode\"], button[title*=\"Save GGcode input\"]'\n    );\n\n    if (!window.editor || typeof window.editor.getValue !== 'function') {\n      alert('No input content available to save');\n      return;\n    }\n\n    const content = window.editor.getValue();\n    if (!content.trim()) {\n      alert('No input content to save');\n      return;\n    }\n\n    // Show loading on the save button\n    let restoreButton = null;\n    if (saveButton && window.navigationManager) {\n      restoreButton = window.navigationManager.showButtonLoading(\n        saveButton,\n        'Saving...'\n      );\n    }\n\n    try {\n      // Get last opened filename for suggestion\n      let lastFilename = '';\n      try {\n        lastFilename = localStorage.getItem('ggcode_last_filename') || '';\n      } catch (error) {\n        console.warn('Failed to get filename from storage:', error);\n      }\n\n      // Generate suggested filename\n      let suggestedFilename =\n        lastFilename && lastFilename.endsWith('.ggcode') ? lastFilename : '';\n      if (!suggestedFilename && lastFilename) {\n        const dot = lastFilename.lastIndexOf('.');\n        suggestedFilename =\n          (dot > 0 ? lastFilename.slice(0, dot) : lastFilename) + '.ggcode';\n      }\n      if (!suggestedFilename) suggestedFilename = 'input.ggcode';\n\n      // Prompt user for filename\n      const userFilename = window.prompt('Save GGcode as:', suggestedFilename);\n      if (!userFilename) {\n        if (restoreButton) restoreButton();\n        return; // User cancelled\n      }\n\n      // Create and download file\n      const blob = new Blob([content], { type: 'text/plain' });\n      const a = document.createElement('a');\n      a.href = URL.createObjectURL(blob);\n      a.download = userFilename;\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      URL.revokeObjectURL(a.href);\n\n      console.log('GGcode saved as:', userFilename);\n    } catch (error) {\n      console.error('Failed to save GGcode:', error);\n      alert('Failed to save file: ' + error.message);\n    } finally {\n      // Always restore the button state\n      if (restoreButton) restoreButton();\n    }\n  }\n\n  /**\n   * Clear all saved content and settings\n   */\n  clearMemory() {\n    if (\n      !confirm('This will clear all saved content and settings. Are you sure?')\n    ) {\n      return;\n    }\n\n    try {\n      // Clear localStorage\n      localStorage.removeItem('ggcode_input_content');\n      localStorage.removeItem('ggcode_output_content');\n      localStorage.removeItem('ggcode_last_filename');\n      localStorage.removeItem('ggcode_auto_compile');\n\n      // Reset editors if available\n      if (window.editor && typeof window.editor.setValue === 'function') {\n        window.editor.setValue('');\n      }\n      if (\n        window.outputEditor &&\n        typeof window.outputEditor.setValue === 'function'\n      ) {\n        window.outputEditor.setValue('');\n      }\n\n      // Reset auto-compile checkbox\n      const autoCheckbox = document.getElementById('autoCompileCheckbox');\n      if (autoCheckbox) {\n        autoCheckbox.checked = false;\n      }\n\n      console.log('Memory cleared successfully');\n      alert('Memory cleared successfully!');\n    } catch (error) {\n      console.error('Failed to clear memory:', error);\n      alert('Failed to clear memory: ' + error.message);\n    }\n  }\n}\n\n// Create global instance\nconst fileOperations = new FileOperations();\n\n// Export for module use\nexport { FileOperations, fileOperations };\n\n// Export global instance\nwindow.fileOperations = fileOperations;\n","/**\n * FileTreeViewer - GitHub-style file tree for MD documents\n * Integrates with the GGcode help system to show markdown files in a tree structure\n */\nclass FileTreeViewer {\n  constructor(container) {\n    this.container = container;\n    this.currentFile = null;\n    this.treeData = {};\n    this.markdownContent = {};\n\n    this.initializeAsync();\n  }\n\n  /**\n   * Initialize asynchronously to avoid timing issues\n   */\n  async initializeAsync() {\n    await this.initialize();\n  }\n\n  /**\n   * Initialize the file tree viewer\n   */\n  async initialize() {\n    console.log('FileTreeViewer: Starting initialization');\n    await this.scanMarkdownFiles();\n    this.createTreeStructure();\n    this.render();\n    this.bindEvents();\n    console.log('FileTreeViewer: Initialization complete');\n  }\n\n  /**\n   * Scan for available Markdown files\n   */\n  async scanMarkdownFiles() {\n    try {\n      // Get markdown files from the help content directory\n      const response = await fetch('/api/help/markdown-files');\n      const data = await response.json();\n\n      if (data.success && data.files) {\n        this.markdownFiles = data.files;\n        await this.loadMarkdownContent();\n      }\n    } catch (error) {\n      console.error('Error scanning for markdown files:', error);\n      // Fallback: use static file list\n      this.markdownFiles = [\n        { path: 'README.md', name: 'README.md', type: 'file' },\n        {\n          path: 'MULTILANGUAGE_GUIDE.md',\n          name: 'MULTILANGUAGE_GUIDE.md',\n          type: 'file',\n        },\n      ];\n      await this.loadMarkdownContent();\n    }\n  }\n\n  /**\n   * Load markdown content for all files\n   */\n  async loadMarkdownContent() {\n    for (const file of this.markdownFiles) {\n      if (file.type === 'file') {\n        try {\n          const response = await fetch(\n            `/api/help/markdown-content?file=${encodeURIComponent(file.path)}`\n          );\n          const data = await response.json();\n          if (data.success) {\n            this.markdownContent[file.path] = data.content;\n          }\n        } catch (error) {\n          console.error(`Error loading content for ${file.path}:`, error);\n        }\n      }\n    }\n  }\n\n  /**\n   * Create file tree data structure\n   */\n  createTreeStructure() {\n    const tree = {};\n\n    this.markdownFiles.forEach((file) => {\n      if (file.type === 'file') {\n        const pathParts = file.path.split('/');\n        let current = tree;\n\n        pathParts.forEach((part, index) => {\n          if (!current[part]) {\n            current[part] = {\n              type: index === pathParts.length - 1 ? 'file' : 'folder',\n              path: pathParts.slice(0, index + 1).join('/'),\n              children: index === pathParts.length - 1 ? null : {},\n            };\n          }\n          if (current[part].type === 'folder') {\n            current = current[part].children;\n          }\n        });\n      }\n    });\n\n    this.treeData = tree;\n  }\n\n  /**\n   * Render the file tree\n   */\n  render() {\n    const html = `\n        <div class=\"file-tree-content\">\n          ${this.renderTreeNode(this.treeData, '', 0)}\n        </div>\n      </div>\n    `;\n\n    this.container.innerHTML = html;\n  }\n\n  /**\n   * Render a single tree node recursively\n   */\n  renderTreeNode(node, path, level) {\n    if (!node || typeof node !== 'object') return '';\n\n    let html = '<ul class=\"tree-node-list\">';\n\n    Object.keys(node).forEach((key) => {\n      const item = node[key];\n      const itemPath = path ? `${path}/${key}` : key;\n      const indentation = level * 16;\n\n      if (item.type === 'file') {\n        html += `\n          <li class=\"tree-node file-node ${this.currentFile === itemPath ? 'active' : ''}\"\n              data-path=\"${itemPath}\"\n              data-type=\"file\"\n              style=\"padding-left: ${indentation}px;\">\n            <div class=\"node-content\">\n              <span class=\"file-icon\">📄</span>\n              <span class=\"file-name\">${key}</span>\n            </div>\n          </li>\n        `;\n      } else if (item.type === 'folder') {\n        const isExpanded = this.isExpanded(itemPath);\n        html += `\n          <li class=\"tree-node folder-node\"\n              data-path=\"${itemPath}\"\n              data-type=\"folder\"\n              style=\"padding-left: ${indentation}px;\">\n            <div class=\"node-content\">\n              <span class=\"expand-icon ${isExpanded ? 'expanded' : ''}\">\n                ${isExpanded ? '📂' : '📁'}\n              </span>\n              <span class=\"folder-name\">${key}</span>\n            </div>\n            ${isExpanded ? this.renderTreeNode(item.children, itemPath, level + 1) : ''}\n          </li>\n        `;\n      }\n    });\n\n    html += '</ul>';\n    return html;\n  }\n\n  /**\n   * Check if a folder is expanded\n   */\n  isExpanded(path) {\n    return this.expandedFolders && this.expandedFolders.has(path);\n  }\n\n  /**\n   * Toggle folder expansion\n   */\n  toggleFolder(path) {\n    if (!this.expandedFolders) {\n      this.expandedFolders = new Set();\n    }\n\n    if (this.expandedFolders.has(path)) {\n      this.expandedFolders.delete(path);\n    } else {\n      this.expandedFolders.add(path);\n    }\n\n    this.render();\n  }\n\n  /**\n   * Select a file for viewing\n   */\n  selectFile(path) {\n    this.currentFile = path;\n\n    // Update the displayed file\n    this.updateDisplayedFile(path);\n\n    // Update the UI\n    this.render();\n  }\n\n  /**\n   * Bind event listeners\n   */\n  bindEvents() {\n    this.container.addEventListener('click', (e) => {\n      const node = e.target.closest('.tree-node');\n      if (!node) return;\n\n      const path = node.dataset.path;\n      const type = node.dataset.type;\n\n      if (type === 'folder') {\n        this.toggleFolder(path);\n      } else if (type === 'file') {\n        this.selectFile(path);\n      }\n    });\n\n    // Refresh button\n    this.container.addEventListener('click', (e) => {\n      if (e.target.closest('.refresh-btn')) {\n        this.refresh();\n      }\n    });\n  }\n\n  /**\n   * Copy file content to clipboard\n   */\n  async copyFileContent() {\n    if (!this.currentFile || !this.markdownContent[this.currentFile]) return;\n\n    try {\n      await navigator.clipboard.writeText(\n        this.markdownContent[this.currentFile]\n      );\n      // Could add a toast notification here\n    } catch (error) {\n      console.error('Error copying content:', error);\n    }\n  }\n\n  /**\n   * Refresh the file tree\n   */\n  async refresh() {\n    this.treeData = {};\n    this.markdownContent = {};\n    this.currentFile = null;\n    await this.scanMarkdownFiles();\n    this.createTreeStructure();\n    this.render();\n  }\n\n  /**\n   * Load a file and display it in the content area\n   */\n  async loadAndDisplayFile(filePath) {\n    try {\n      console.log('FileTreeViewer: Loading file:', filePath);\n\n      // Fetch file content from API\n      const response = await fetch(\n        `/api/help/markdown-content?file=${encodeURIComponent(filePath)}`\n      );\n      const data = await response.json();\n\n      if (data.success && data.content) {\n        // Display the file content\n        this.displayFileContent(filePath, data.content);\n\n        // Switch to MD file view mode\n        this.triggerViewModeChange('file');\n      } else {\n        console.error('Failed to load file content:', data.error);\n        this.displayFileContent(filePath, 'Failed to load file content.');\n      }\n    } catch (error) {\n      console.error('Error loading file:', error);\n      this.displayFileContent(filePath, 'Error loading file.');\n    }\n  }\n\n  /**\n   * Display file content in the appropriate area\n   */\n  displayFileContent(filePath, content) {\n    const titleElement = document.getElementById('currentFileTitle');\n    const contentElement = document.getElementById('mdContentBody');\n\n    if (titleElement) {\n      // Extract just the filename from the path\n      const fileName = filePath.split('/').pop();\n      titleElement.textContent = fileName;\n    }\n\n    if (contentElement) {\n      // Simple markdown-like rendering (basic)\n      const renderedHtml = this.renderMarkdownContent(content);\n      contentElement.innerHTML = renderedHtml;\n    } else {\n      console.warn('FileTreeViewer: mdContentBody not found');\n    }\n  }\n\n  /**\n   * Basic markdown rendering\n   */\n  renderMarkdownContent(content) {\n    if (!content) return '<p>No content available.</p>';\n\n    return content\n      .split('\\n')\n      .map((line) => {\n        // Headers\n        if (line.startsWith('# ')) {\n          return `<h1>${line.substring(2)}</h1>`;\n        } else if (line.startsWith('## ')) {\n          return `<h2>${line.substring(3)}</h2>`;\n        } else if (line.startsWith('### ')) {\n          return `<h3>${line.substring(4)}</h3>`;\n        }\n        // Empty lines\n        else if (line.trim() === '') {\n          return '<br>';\n        }\n        // Regular paragraphs\n        else {\n          return `<p>${line}</p>`;\n        }\n      })\n      .join('');\n  }\n\n  /**\n   * Update displayed file in the content area\n   */\n  async updateDisplayedFile(filePath) {\n    try {\n      // Fetch file content\n      const response = await fetch(\n        `/api/help/markdown-content?file=${encodeURIComponent(filePath)}`\n      );\n      const data = await response.json();\n\n      if (data.success && data.content) {\n        // Use HelpSystem to update the display\n        if (window.applicationManager && window.applicationManager.helpSystem) {\n          window.applicationManager.helpSystem.showMarkdownFile(\n            filePath,\n            data.content\n          );\n        } else {\n          // Fallback: update directly\n          const mdContentBody = document.getElementById('mdContentBody');\n          const fileNameSpan = document.getElementById('fileName');\n\n          if (fileNameSpan) {\n            fileNameSpan.textContent = filePath.split('/').pop();\n          }\n\n          if (mdContentBody) {\n            mdContentBody.textContent = data.content;\n          }\n        }\n      } else {\n        console.error('Failed to load file:', filePath);\n      }\n    } catch (error) {\n      console.error('Error loading file:', error);\n    }\n  }\n}\n\nexport default FileTreeViewer;\n","/**\n * Help System Module\n * Manages help content, search, and language selection\n */\n\nimport storageManager from '../utils/storageManager.js';\nimport FileTreeViewer from './fileTreeViewer.js';\n\nclass HelpSystem {\n  constructor(apiManager) {\n    this.apiManager = apiManager;\n    this.dictionaryCache = null;\n    this.annotationsCache = null;\n    this.fileTreeViewer = null;\n  }\n\n  /**\n   * Show help modal\n   */\n  async showHelp() {\n    if (window.showModal) {\n      window.showModal('helpModal');\n    }\n\n    // Get saved language preference or default to English\n    const savedLanguage = storageManager.getSelectedLanguage();\n\n    // Load help content when modal opens\n    this.loadHelpContent(savedLanguage);\n    // Setup language selector\n    await this.setupLanguageSelector();\n\n    // Initialize language dropdown display from saved preference\n    this.initializeLanguageSelectorDisplay();\n\n    // Add copy buttons after modal is shown\n    setTimeout(() => this.addCopyButtons(), 200);\n    // Setup help search\n    this.setupHelpSearch();\n\n    // Load dictionary data for integration\n    this.loadMillDictionaryData();\n\n    // Initialize file tree viewer\n    this.initializeFileTreeViewer();\n\n    // Initialize documentation controls\n    this.initializeDocumentationControls();\n\n    // Focus search input\n    setTimeout(() => {\n      const searchInput = document.getElementById('helpSearchInput');\n      if (searchInput) {\n        searchInput.focus();\n      }\n    }, 200);\n  }\n\n  /**\n   * Load help content\n   */\n  async loadHelpContent(language = 'en') {\n    const helpContent = document.getElementById('helpContent');\n    if (!helpContent) return;\n\n    try {\n      // Show loading indicator\n      helpContent.innerHTML =\n        '<div class=\"loading-indicator\"><p>Loading help content...</p></div>';\n\n      const result = await this.apiManager.help.getContent(language);\n\n      if (result && result.data) {\n        this.renderHelpContent(result.data);\n      } else {\n        helpContent.innerHTML =\n          '<div class=\"error-message\"><p>Failed to load help content</p></div>';\n      }\n    } catch (error) {\n      helpContent.innerHTML =\n        '<div class=\"error-message\"><p>Error loading help content: ' +\n        error.message +\n        '</p></div>';\n    }\n  }\n\n  /**\n   * Render help content\n   */\n  renderHelpContent(data) {\n    const helpContent = document.getElementById('helpContent');\n    if (!helpContent || !data || !data.sections) {\n      console.error('Invalid help content data or missing container');\n      return;\n    }\n\n    let html = '';\n\n    // Render each section\n    Object.values(data.sections).forEach((section) => {\n      html += `<div class=\"help-section-card\" data-section=\"${section.id}\">`;\n      html += `<h3 class=\"help-section-title\">${section.title}</h3>`;\n      html += `<div class=\"help-section-content\">`;\n\n      // Render section content\n      if (section.content && Array.isArray(section.content)) {\n        section.content.forEach((item) => {\n          switch (item.type) {\n            case 'paragraph':\n              html += `<p>${item.text}</p>`;\n              break;\n\n            case 'subsection':\n              html += `<h4>${item.title}</h4>`;\n              if (item.description) {\n                html += `<p>${item.description}</p>`;\n              }\n              if (item.additionalInfo) {\n                html += `<p>${item.additionalInfo}</p>`;\n              }\n              if (item.code) {\n                html += `<pre><code>${item.code}</code></pre>`;\n              }\n              if (item.list) {\n                html += `<ul>`;\n                item.list.forEach((listItem) => {\n                  html += `<li>${listItem}</li>`;\n                });\n                html += `</ul>`;\n              }\n              break;\n\n            case 'list':\n              if (item.title) {\n                html += `<h4>${item.title}</h4>`;\n              }\n              if (item.description) {\n                html += `<p>${item.description}</p>`;\n              }\n              html += `<ul>`;\n              item.items.forEach((listItem) => {\n                html += `<li>${listItem}</li>`;\n              });\n              html += `</ul>`;\n              break;\n\n            case 'code':\n              html += `<pre><code>${item.code}</code></pre>`;\n              break;\n\n            default:\n              console.warn('Unknown help content type:', item.type);\n          }\n        });\n      }\n\n      html += `</div>`;\n      html += `</div>`;\n    });\n\n    helpContent.innerHTML = html;\n\n    // Add copy buttons to code blocks after rendering\n    setTimeout(() => this.addCopyButtons(), 100);\n  }\n\n  /**\n   * Setup language selector - dropdown logic handled by main dropdown system\n   */\n  async setupLanguageSelector() {\n    // Language dropdown is handled by the centralized dropdown system in main.js\n    // This method is kept for backward compatibility\n    console.log(\n      'Language selector setup delegated to centralized dropdown system'\n    );\n  }\n\n  /**\n   * Initialize language selector display with saved preference\n   */\n  initializeLanguageSelectorDisplay() {\n    const savedLanguage = storageManager.getSelectedLanguage();\n    const selectSelected = document.getElementById('selectSelected');\n\n    if (!selectSelected || !savedLanguage || savedLanguage === 'en') {\n      return; // Already shows English (default)\n    }\n\n    // Find the corresponding language option to get its display information\n    const languageMap = {\n      es: { flag: '🇪🇸', name: 'Español' },\n      fr: { flag: '🇫🇷', name: 'Français' },\n      de: { flag: '🇩🇪', name: 'Deutsch' },\n      it: { flag: '🇮🇹', name: 'Italiano' },\n      pt: { flag: '🇵🇹', name: 'Português' },\n      ru: { flag: '🇷🇺', name: 'Русский' },\n      zh: { flag: '🇨🇳', name: '中文' },\n      ja: { flag: '🇯🇵', name: '日本語' },\n      ko: { flag: '🇰🇷', name: '한국어' },\n      ar: { flag: '🇸🇦', name: 'العربية' },\n      he: { flag: '🇮🇱', name: 'עברית' },\n      tr: { flag: '🇹🇷', name: 'Türkçe' },\n      pl: { flag: '🇵🇱', name: 'Polski' },\n      nl: { flag: '🇳🇱', name: 'Nederlands' },\n    };\n\n    const selectedLanguageInfo = languageMap[savedLanguage];\n    if (selectedLanguageInfo) {\n      selectSelected.innerHTML = `\n                <span class=\"flag-icon flag-${savedLanguage}\">${selectedLanguageInfo.flag}</span>\n                <span class=\"language-name\">${selectedLanguageInfo.name}</span>\n                <svg width=\"12\" height=\"12\" viewBox=\"0 0 16 16\" fill=\"#10a37f\">\n                    <path d=\"M4.427 6.427L8 10l3.573-3.573L10.354 5 8 7.354 5.646 5z\" />\n                </svg>\n            `;\n      console.log(\n        `HelpSystem: Language selector updated to show ${selectedLanguageInfo.name} (${savedLanguage})`\n      );\n    }\n  }\n\n  /**\n   * Load mill dictionary and annotations data for enhanced G-code completion\n   */\n  async loadMillDictionaryData() {\n    try {\n      // Load dictionary data\n      if (!this.dictionaryCache) {\n        const dictionaryResponse = await fetch('/mill-dictionary.json');\n        if (dictionaryResponse.ok) {\n          this.dictionaryCache = await dictionaryResponse.json();\n          console.log(\n            'HelpSystem: Mill dictionary loaded with',\n            Object.keys(this.dictionaryCache).length,\n            'commands'\n          );\n        } else {\n          console.warn('HelpSystem: Could not load mill-dictionary.json');\n        }\n      }\n\n      // Load annotations data\n      if (!this.annotationsCache) {\n        const annotationsResponse = await fetch('/mill-annotations.json');\n        if (annotationsResponse.ok) {\n          const annotationsJson = await annotationsResponse.json();\n          this.annotationsCache = annotationsJson;\n          console.log(\n            'HelpSystem: Mill annotations loaded with',\n            Object.keys(this.annotationsCache).length,\n            'entries'\n          );\n        } else {\n          console.warn('HelpSystem: Could not load mill-annotations.json');\n        }\n      }\n\n      // Integrate dictionary data with Monaco completion\n      this.integrateMillDictionaryWithMonaco();\n    } catch (error) {\n      console.warn(\n        'HelpSystem: Failed to load mill dictionary data:',\n        error.message\n      );\n    }\n  }\n\n  /**\n   * Integrate mill dictionary data with Monaco auto-completion\n   */\n  integrateMillDictionaryWithMonaco() {\n    if (!this.dictionaryCache) {\n      console.warn(\n        'HelpSystem: No dictionary cache available for Monaco integration'\n      );\n      return;\n    }\n\n    // Get Monaco editor instance\n    const editor = window.editorManager?.getEditors?.()?.input;\n    if (!editor) {\n      console.warn(\n        'HelpSystem: Monaco editor not available for dictionary integration'\n      );\n      return;\n    }\n\n    // Create comprehensive G-code completions from dictionary data\n    const millCompletions = this.convertDictionaryToCompletions(\n      this.dictionaryCache\n    );\n\n    // Update existing completion provider with mill data\n    console.log(\n      `HelpSystem: Enhanced Monaco completion with ${millCompletions.length} official G-code definitions`\n    );\n\n    // Note: The actual integration happens in MonacoEditorManager,\n    // we can signal it to refresh its completions or use the existing system\n    this.signalCompletionRefresh();\n  }\n\n  /**\n   * Convert dictionary JSON to Monaco completion items\n   */\n  convertDictionaryToCompletions(dictionary) {\n    const completions = [];\n\n    for (const [gcode, definition] of Object.entries(dictionary)) {\n      let description = definition.desc || 'G-code command';\n      let detail = gcode;\n      let usage = '';\n\n      // Handle different dictionary formats\n      if (definition.sub) {\n        // Create usage string from parameters\n        const params = Object.keys(definition.sub).join(' ');\n        usage = `${gcode} ${params}`;\n        detail = usage;\n      } else if (typeof definition === 'string') {\n        description = definition;\n      }\n\n      completions.push({\n        label: gcode,\n        kind: monaco.languages.CompletionItemKind.Keyword,\n        detail: detail,\n        documentation: {\n          value: `**${gcode}** - ${description}\\n\\nUsage: \\`${usage || gcode}\\``,\n        },\n        insertText: gcode,\n        sortText: gcode.startsWith('G') ? `01${gcode}` : `02${gcode}`,\n      });\n    }\n\n    return completions;\n  }\n\n  /**\n   * Signal that completions should be refreshed with mill dictionary data\n   */\n  signalCompletionRefresh() {\n    console.log(\n      'HelpSystem: Signaling completion refresh with mill dictionary integration'\n    );\n\n    // The MonacoEditorManager completion provider will automatically use the dictionary data\n    // since it checks for this.helpSystem?.dictionaryCache and this.helpSystem?.annotationsCache\n    // in _getMillDictionaryCompletions and _getMillAnnotationsCompletions methods\n    console.log(\n      'HelpSystem: Mill dictionary data loaded and available for completion provider'\n    );\n    console.log(\n      `Dictionary entries: ${Object.keys(this.dictionaryCache || {}).length}`\n    );\n    console.log(\n      `Annotations entries: ${Object.keys(this.annotationsCache || {}).length}`\n    );\n  }\n\n  /**\n   * Add copy buttons to code blocks\n   */\n  addCopyButtons() {\n    const preElements = document.querySelectorAll(\n      '.help-content pre, #helpContent pre'\n    );\n    preElements.forEach((pre) => {\n      // Check if copy button already exists\n      if (pre.querySelector('.copy-button')) return;\n\n      const copyButton = document.createElement('button');\n      copyButton.className = 'copy-button';\n      copyButton.textContent = 'Copy';\n      copyButton.style.cssText = `\n                position: absolute;\n                top: 8px;\n                right: 8px;\n                background: #007acc;\n                color: white;\n                border: none;\n                padding: 4px 8px;\n                border-radius: 3px;\n                font-size: 12px;\n                cursor: pointer;\n                z-index: 1;\n            `;\n\n      // Make pre element relative for absolute positioning\n      pre.style.position = 'relative';\n\n      copyButton.onclick = () => {\n        const code = pre.textContent.replace('Copy', '').trim();\n        navigator.clipboard\n          .writeText(code)\n          .then(() => {\n            copyButton.textContent = 'Copied!';\n            copyButton.style.background = '#28a745';\n            setTimeout(() => {\n              copyButton.textContent = 'Copy';\n              copyButton.style.background = '#007acc';\n            }, 2000);\n          })\n          .catch((err) => {\n            console.error('Failed to copy: ', err);\n            copyButton.textContent = 'Error';\n            copyButton.style.background = '#dc3545';\n            setTimeout(() => {\n              copyButton.textContent = 'Copy';\n              copyButton.style.background = '#007acc';\n            }, 2000);\n          });\n      };\n\n      pre.appendChild(copyButton);\n    });\n  }\n\n  /**\n   * Setup help search\n   */\n  setupHelpSearch() {\n    const searchInput = document.getElementById('helpSearchInput');\n    if (!searchInput) {\n      console.warn('Help search input not found');\n      return;\n    }\n\n    // Store original content for search reset\n    this.originalSections =\n      this.originalSections ||\n      Array.from(document.querySelectorAll('.help-section-card'));\n\n    searchInput.addEventListener('input', (e) => {\n      const searchTerm = e.target.value.toLowerCase().trim();\n\n      if (searchTerm === '') {\n        // Reset to show all sections\n        this.showAllSections();\n        this.removeAllHighlights();\n      } else {\n        // Perform search\n        this.performSearch(searchTerm);\n      }\n    });\n\n    console.log('Help search functionality initialized');\n\n    // Add clear search button\n    this.addClearSearchButton(searchInput);\n\n    // Add CSS for search highlights\n    this.addSearchHighlightStyles();\n  }\n\n  /**\n   * Add clear search button\n   */\n  addClearSearchButton(searchInput) {\n    // Create clear button\n    const clearButton = document.createElement('button');\n    clearButton.type = 'button';\n    clearButton.textContent = '✕';\n    clearButton.title = 'Clear search';\n    clearButton.style.cssText = `\n            position: absolute;\n            right: 10px;\n            top: 50%;\n            transform: translateY(-50%);\n            background: none;\n            border: none;\n            color: #666;\n            cursor: pointer;\n            font-size: 14px;\n            padding: 2px;\n            display: none;\n        `;\n\n    // Style on hover\n    clearButton.addEventListener('mouseenter', () => {\n      clearButton.style.color = '#ff4444';\n    });\n    clearButton.addEventListener('mouseleave', () => {\n      clearButton.style.color = '#666';\n    });\n\n    // Add click handler\n    clearButton.addEventListener('click', () => {\n      searchInput.value = '';\n      searchInput.dispatchEvent(new Event('input'));\n      searchInput.focus();\n    });\n\n    // Position the search input as relative for absolute positioning\n    searchInput.style.position = 'relative';\n    searchInput.parentNode.appendChild(clearButton);\n\n    // Show/hide clear button based on input value\n    searchInput.addEventListener('input', () => {\n      clearButton.style.display = searchInput.value.trim() ? 'block' : 'none';\n    });\n  }\n\n  /**\n   * Add CSS styles for search highlights\n   */\n  addSearchHighlightStyles() {\n    if (document.getElementById('help-search-styles')) return;\n\n    const style = document.createElement('style');\n    style.id = 'help-search-styles';\n    style.textContent = `\n            .search-highlight {\n                background-color: #ffeb3b !important;\n                color: #000 !important;\n                padding: 2px 1px;\n                border-radius: 2px;\n                font-weight: bold;\n                box-shadow: 0 0 0 1px rgba(255, 193, 7, 0.3);\n            }\n\n            #help-no-results {\n                background: #f8f9fa;\n                border: 1px solid #dee2e6;\n                border-radius: 4px;\n                margin: 20px 0;\n            }\n\n            .help-section-card {\n                transition: opacity 0.3s ease;\n            }\n\n            .help-section-card[style*=\"display: none\"] {\n                opacity: 0.3;\n            }\n        `;\n\n    document.head.appendChild(style);\n  }\n\n  /**\n   * Perform search across help sections with intelligent matching\n   */\n  performSearch(searchTerm) {\n    const helpSections = document.querySelectorAll('.help-section-card');\n    let hasVisibleResults = false;\n\n    // Split search term into keywords for better matching\n    const keywords = searchTerm\n      .toLowerCase()\n      .trim()\n      .split(/\\s+/)\n      .filter((k) => k.length > 0);\n    const originalSearchTerm = searchTerm.toLowerCase().trim();\n\n    console.log('Searching for:', originalSearchTerm, 'Keywords:', keywords);\n\n    helpSections.forEach((section) => {\n      const sectionText = section.textContent.toLowerCase();\n      const titleElement = section.querySelector('.help-section-title');\n      const title = titleElement ? titleElement.textContent.toLowerCase() : '';\n\n      // Calculate relevance score\n      let relevanceScore = 0;\n      let matchesAnyKeyword = false;\n\n      // Check each keyword - highlight ALL characters including single ones\n      keywords.forEach((keyword) => {\n        // Exact matches get higher score\n        if (title.includes(keyword)) {\n          relevanceScore += 10; // Title matches are very important\n          matchesAnyKeyword = true;\n          console.log('Title match for:', keyword);\n        }\n        if (sectionText.includes(keyword)) {\n          relevanceScore += 5; // Content matches\n          matchesAnyKeyword = true;\n          console.log('Content match for:', keyword);\n        }\n\n        // Word boundary matches (whole words) for all terms\n        const wordBoundaryRegex = new RegExp(\n          '\\\\b' + this.escapeRegExp(keyword) + '\\\\b',\n          'gi'\n        );\n        if (wordBoundaryRegex.test(title)) {\n          relevanceScore += 8; // Whole word in title\n          matchesAnyKeyword = true;\n          console.log('Word boundary title match for:', keyword);\n        }\n        if (wordBoundaryRegex.test(sectionText)) {\n          relevanceScore += 4; // Whole word in content\n          matchesAnyKeyword = true;\n          console.log('Word boundary content match for:', keyword);\n        }\n\n        // Partial matching for all keywords\n        const partialRegex = new RegExp(this.escapeRegExp(keyword), 'gi');\n        if (partialRegex.test(title)) {\n          relevanceScore += 6;\n          matchesAnyKeyword = true;\n          console.log('Partial title match for:', keyword);\n        }\n        if (partialRegex.test(sectionText)) {\n          relevanceScore += 3;\n          matchesAnyKeyword = true;\n          console.log('Partial content match for:', keyword);\n        }\n      });\n\n      // Check for exact phrase match (highest priority)\n      if (originalSearchTerm.length >= 2) {\n        if (title.includes(originalSearchTerm)) {\n          relevanceScore += 20;\n          matchesAnyKeyword = true;\n          console.log('Exact phrase title match for:', originalSearchTerm);\n        }\n        if (sectionText.includes(originalSearchTerm)) {\n          relevanceScore += 15;\n          matchesAnyKeyword = true;\n          console.log('Exact phrase content match for:', originalSearchTerm);\n        }\n      }\n\n      console.log(\n        'Section:',\n        title,\n        'Relevance:',\n        relevanceScore,\n        'Matches:',\n        matchesAnyKeyword\n      );\n\n      if (matchesAnyKeyword && relevanceScore > 0) {\n        section.style.display = 'block';\n        hasVisibleResults = true;\n\n        // Store relevance score for potential sorting\n        section.dataset.relevanceScore = relevanceScore;\n\n        // Clear existing highlights first\n        this.removeHighlights(section);\n\n        // Highlight ALL keywords including single characters\n        keywords.forEach((keyword) => {\n          console.log('Highlighting keyword:', keyword);\n          this.highlightSearchTerm(section, keyword);\n        });\n\n        // Also highlight the original search term if it's different\n        if (originalSearchTerm !== keywords.join(' ')) {\n          console.log('Highlighting original term:', originalSearchTerm);\n          this.highlightSearchTerm(section, originalSearchTerm);\n        }\n      } else {\n        section.style.display = 'none';\n        delete section.dataset.relevanceScore;\n      }\n    });\n\n    console.log('Search complete. Has results:', hasVisibleResults);\n\n    // Show \"no results\" message if needed\n    this.showNoResultsMessage(\n      !hasVisibleResults && searchTerm.trim().length > 0\n    );\n  }\n\n  /**\n   * Show all help sections\n   */\n  showAllSections() {\n    const helpSections = document.querySelectorAll('.help-section-card');\n    helpSections.forEach((section) => {\n      section.style.display = 'block';\n    });\n  }\n\n  /**\n   * Show or hide \"no results\" message\n   */\n  showNoResultsMessage(show) {\n    let noResultsMsg = document.getElementById('help-no-results');\n\n    if (show && !noResultsMsg) {\n      // Create no results message\n      noResultsMsg = document.createElement('div');\n      noResultsMsg.id = 'help-no-results';\n      noResultsMsg.style.cssText = `\n                text-align: center;\n                padding: 20px;\n                color: #666;\n                font-style: italic;\n            `;\n      noResultsMsg.textContent =\n        'No matching help topics found. Try different keywords.';\n\n      const helpContent = document.getElementById('helpContent');\n      if (helpContent) {\n        helpContent.appendChild(noResultsMsg);\n      }\n    } else if (!show && noResultsMsg) {\n      // Remove no results message\n      if (noResultsMsg.parentNode) {\n        noResultsMsg.parentNode.removeChild(noResultsMsg);\n      }\n    }\n  }\n\n  /**\n   * Remove all highlights from all sections\n   */\n  removeAllHighlights() {\n    const helpSections = document.querySelectorAll('.help-section-card');\n    helpSections.forEach((section) => {\n      this.removeHighlights(section);\n    });\n  }\n\n  /**\n   * Highlight search terms with better handling for multi-character keywords\n   */\n  highlightSearchTerm(element, term) {\n    // Remove existing highlights first\n    this.removeHighlights(element);\n\n    if (!term || term.trim().length === 0) return;\n\n    const searchTerm = term.toLowerCase().trim();\n\n    // Use TreeWalker for better text node traversal\n    const walker = document.createTreeWalker(\n      element,\n      NodeFilter.SHOW_TEXT,\n      null,\n      false\n    );\n    const textNodes = [];\n\n    let node;\n    while ((node = walker.nextNode())) {\n      textNodes.push(node);\n    }\n\n    textNodes.forEach((textNode) => {\n      const text = textNode.textContent;\n      const lowerText = text.toLowerCase();\n\n      // Find all matches in this text node\n      const matches = [];\n      let searchIndex = 0;\n\n      while (\n        (searchIndex = lowerText.indexOf(searchTerm, searchIndex)) !== -1\n      ) {\n        matches.push({\n          start: searchIndex,\n          end: searchIndex + searchTerm.length,\n        });\n        searchIndex += searchTerm.length;\n      }\n\n      // Look for word boundary matches for ALL search terms\n      const wordBoundaryRegex = new RegExp(\n        '\\\\b' + this.escapeRegExp(searchTerm) + '\\\\b',\n        'gi'\n      );\n      let match;\n      while ((match = wordBoundaryRegex.exec(lowerText)) !== null) {\n        const matchStart = match.index;\n        const matchEnd = matchStart + match[0].length;\n        // Only add if it doesn't overlap with existing matches\n        const overlaps = matches.some(\n          (m) => matchStart < m.end && matchEnd > m.start\n        );\n        if (!overlaps) {\n          matches.push({ start: matchStart, end: matchEnd });\n        }\n      }\n\n      if (matches.length > 0) {\n        // Sort matches by position and remove overlaps\n        matches.sort((a, b) => a.start - b.start);\n\n        // Build new content with highlights\n        let result = '';\n        let lastIndex = 0;\n\n        matches.forEach((match) => {\n          result += text.substring(lastIndex, match.start);\n          const highlightedText = text.substring(match.start, match.end);\n          result += `<mark class=\"search-highlight\">${highlightedText}</mark>`;\n          lastIndex = match.end;\n        });\n\n        result += text.substring(lastIndex);\n\n        // Replace the text node with highlighted version\n        const tempDiv = document.createElement('div');\n        tempDiv.innerHTML = result;\n        const fragment = document.createDocumentFragment();\n        while (tempDiv.firstChild) {\n          fragment.appendChild(tempDiv.firstChild);\n        }\n        textNode.parentNode.replaceChild(fragment, textNode);\n      }\n    });\n  }\n\n  /**\n   * Escape special regex characters\n   */\n  escapeRegExp(string) {\n    return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n  }\n\n  /**\n   * Remove highlights\n   */\n  removeHighlights(element) {\n    const marks = element.querySelectorAll('mark');\n    marks.forEach((mark) => {\n      mark.outerHTML = mark.innerHTML;\n    });\n  }\n\n  /**\n   * Initialize file tree viewer for markdown documents\n   */\n  async initializeFileTreeViewer() {\n    try {\n      // Get the file tree panel container\n      const treePanel = document.getElementById('helpFileTreePanel');\n      if (!treePanel) {\n        console.warn('HelpSystem: File tree panel not found in DOM');\n        return;\n      }\n\n      // Clean up existing viewer if present\n      if (this.fileTreeViewer) {\n        // Reset the container\n        treePanel.innerHTML = '';\n      }\n\n      // Create new file tree viewer\n      this.fileTreeViewer = new FileTreeViewer(treePanel);\n\n      console.log('HelpSystem: File tree viewer initialized successfully');\n    } catch (error) {\n      console.error(\n        'HelpSystem: Failed to initialize file tree viewer:',\n        error.message\n      );\n    }\n  }\n\n  /**\n   * Initialize documentation controls\n   */\n  initializeDocumentationControls() {\n    const toggleTreeBtn = document.getElementById('toggleTreeBtn');\n    const backToHelpBtn = document.getElementById('backToHelpBtn');\n    const panel = document.getElementById('fileTreeOverlay');\n    const closeTreeBtn = document.getElementById('closeTreeBtn');\n\n    // Toggle tree panel\n    if (toggleTreeBtn && panel) {\n      toggleTreeBtn.addEventListener('click', () => {\n        if (panel.classList.contains('open')) {\n          this.hideTreeView();\n        } else {\n          this.showTreeView();\n        }\n      });\n    }\n\n    // Close tree panel\n    if (closeTreeBtn && panel) {\n      closeTreeBtn.addEventListener('click', () => {\n        const contentPanel = document\n          .getElementById('helpModal')\n          ?.querySelector('.help-content-panel');\n        if (contentPanel?.classList.contains('md-mode')) {\n          this.showHelpView();\n        } else {\n          this.hideTreeView();\n        }\n      });\n    }\n\n    // Back to help button\n    if (backToHelpBtn) {\n      backToHelpBtn.addEventListener('click', () => {\n        this.showHelpView();\n      });\n    }\n\n    // Copy button\n    const copyBtn = document.getElementById('mdCopyBtn');\n    if (copyBtn) {\n      copyBtn.addEventListener('click', () => {\n        this.copyMarkdownContent();\n      });\n    }\n\n    // Hide tree button (new - keep file displayed)\n    const hideTreeBtn = document.getElementById('hideTreeBtn');\n    if (hideTreeBtn) {\n      hideTreeBtn.addEventListener('click', () => {\n        this.hideTreeView();\n      });\n    }\n\n    console.log('HelpSystem: Documentation controls initialized');\n  }\n\n  /**\n   * Show tree overlay and MD content\n   */\n  showTreeView() {\n    const overlay = document.getElementById('fileTreeOverlay');\n    const contentPanel = document\n      .getElementById('helpModal')\n      ?.querySelector('.help-content-panel');\n    const toggleBtn = document.getElementById('toggleTreeBtn');\n    const backBtn = document.getElementById('backToHelpBtn');\n\n    // Show tree overlay with animation\n    if (overlay) {\n      overlay.classList.add('open');\n    }\n\n    // Switch to MD mode\n    if (contentPanel) {\n      contentPanel.classList.add('md-mode');\n    }\n\n    // Update buttons\n    if (toggleBtn) {\n      toggleBtn.textContent = '📁 Hide Files';\n    }\n    if (backBtn) {\n      backBtn.style.display = 'inline-block';\n    }\n  }\n\n  /**\n   * Hide tree panel only (keep current file displayed)\n   */\n  hideTreeView() {\n    const panel = document.getElementById('fileTreeOverlay');\n    const toggleBtn = document.getElementById('toggleTreeBtn');\n\n    // Hide tree panel\n    if (panel) {\n      panel.classList.remove('open');\n    }\n\n    // Update button\n    if (toggleBtn) {\n      toggleBtn.textContent = '📁 Show Files';\n    }\n  }\n\n  /**\n   * Show help content view\n   */\n  showHelpView() {\n    const contentPanel = document\n      .getElementById('helpModal')\n      ?.querySelector('.help-content-panel');\n    const overlay = document.getElementById('fileTreeOverlay');\n    const backBtn = document.getElementById('backToHelpBtn');\n    const toggleBtn = document.getElementById('toggleTreeBtn');\n\n    // Switch to help content (remove MD mode)\n    if (contentPanel) {\n      contentPanel.classList.remove('md-mode');\n    }\n\n    // Keep tree visible but remove MD mode\n    if (overlay && overlay.classList.contains('open')) {\n      overlay.classList.remove('open');\n    }\n\n    // Update buttons\n    if (backBtn) {\n      backBtn.style.display = 'none';\n    }\n    if (toggleBtn) {\n      toggleBtn.textContent = '📁 Show Files';\n    }\n\n    // Clear current file title\n    const fileNameSpan = document.getElementById('fileName');\n    if (fileNameSpan) {\n      fileNameSpan.textContent = 'None Selected';\n    }\n  }\n\n  /**\n   * Update MD file display\n   */\n  async showMarkdownFile(filePath, fileContent) {\n    const fileNameSpan = document.getElementById('fileName');\n    const mdContentBody = document.getElementById('mdContentBody');\n    const contentPanel = document\n      .getElementById('helpModal')\n      ?.querySelector('.help-content-panel');\n\n    // Update file name\n    if (fileNameSpan) {\n      const fileName = filePath.split('/').pop();\n      fileNameSpan.textContent = fileName;\n    }\n\n    // Switch to MD viewer mode\n    if (contentPanel && !contentPanel.classList.contains('md-mode')) {\n      contentPanel.classList.add('md-mode');\n    }\n\n    // Update content\n    if (mdContentBody && fileContent) {\n      // Simple markdown-like rendering\n      const renderedContent = this.renderMarkdownText(fileContent);\n      mdContentBody.innerHTML = renderedContent;\n    }\n  }\n\n  /**\n   * Simple markdown rendering\n   */\n  renderMarkdownText(content) {\n    if (!content) return '<p>No content available</p>';\n\n    return content\n      .split('\\n')\n      .map((line) => {\n        if (line.startsWith('# ')) {\n          return `<h2 style=\"color: #007acc; margin-top: 20px; margin-bottom: 10px;\">${line.substring(2)}</h2>`;\n        } else if (line.startsWith('## ')) {\n          return `<h3 style=\"color: #258ed4; margin-top: 16px; margin-bottom: 8px;\">${line.substring(3)}</h3>`;\n        } else if (line.trim() === '') {\n          return '<br>';\n        } else {\n          return `<p style=\"margin-bottom: 8px;\">${line}</p>`;\n        }\n      })\n      .join('');\n  }\n\n  /**\n   * Copy markdown content to clipboard\n   */\n  async copyMarkdownContent() {\n    const mdContentBody = document.getElementById('mdContentBody');\n    if (mdContentBody && mdContentBody.textContent.trim()) {\n      try {\n        await navigator.clipboard.writeText(mdContentBody.textContent);\n        // Provide visual feedback\n        const copyBtn = document.getElementById('mdCopyBtn');\n        if (copyBtn) {\n          const originalText = copyBtn.textContent;\n          copyBtn.textContent = '✅ Copied!';\n          copyBtn.style.background = '#28a745';\n          setTimeout(() => {\n            copyBtn.textContent = originalText;\n            copyBtn.style.background = '#007acc';\n          }, 1500);\n        }\n      } catch (error) {\n        console.error('Failed to copy:', error);\n      }\n    }\n  }\n}\n\nexport default HelpSystem;\n","/**\n * Modal Manager Module\n * Handles modal dialogs and overlays\n */\n\nimport { ModalManager } from './modals.js';\n\nclass ModalManagerWrapper {\n  constructor() {\n    this.modalManager = new ModalManager();\n  }\n\n  /**\n   * Show modal by ID\n   */\n  showModal(modalId) {\n    if (this.modalManager) {\n      this.modalManager.showModal(modalId);\n    } else {\n      console.error('ModalManager module not available');\n    }\n  }\n\n  /**\n   * Close modal by ID\n   */\n  closeModal(modalId) {\n    if (this.modalManager) {\n      this.modalManager.closeModal(modalId);\n    } else {\n      console.error('ModalManager module not available');\n    }\n  }\n\n  /**\n   * Close configurator modal\n   */\n  closeConfigurator() {\n    const modal = document.getElementById('configuratorModal');\n    if (modal) {\n      modal.style.display = 'none';\n    }\n    // Additional configurator cleanup would go here\n  }\n\n  /**\n   * Close G-code viewer modal\n   */\n  closeGcodeViewer() {\n    const modal = document.getElementById('gcodeViewerModal');\n    if (modal) {\n      modal.style.display = 'none';\n    }\n\n    // Clean up Three.js renderer\n    try {\n      const gcode3d = document.getElementById('gcode3d');\n      if (gcode3d) {\n        gcode3d.innerHTML = '';\n      }\n\n      // Stop any running animation\n      if (window.gcodeSimAnimationId) {\n        clearTimeout(window.gcodeSimAnimationId);\n        window.gcodeSimAnimationId = null;\n      }\n\n      // Reset global variables to prevent memory leaks\n      window.gcodeToolpathPoints = null;\n      window.gcodeToolpathSegments = null;\n      window.gcodeToolpathModes = null;\n      window.gcodeLineMap = null;\n      window.gcodeLines = null;\n      window.gcodeSegmentCounts = null;\n      window.gcodeScene = null;\n      window.gcodeCamera = null;\n      window.gcodeToolMesh = null;\n      window.gcodeRender = null;\n    } catch (error) {\n      console.error('Error closing G-code viewer:', error);\n    }\n  }\n}\n\nexport default ModalManagerWrapper;\n","/**\n * Modal Management Module\n *\n * Provides a centralized system for managing modal dialogs with:\n * - Show/hide functionality\n * - Backdrop click handling\n * - Keyboard navigation (ESC key)\n * - Event management\n * - Reusable modal component system\n */\n\nclass ModalManager {\n  constructor() {\n    this.activeModals = new Set();\n    this.eventListeners = new Map();\n    this.setupGlobalEventListeners();\n  }\n\n  /**\n   * Setup global event listeners for keyboard navigation\n   */\n  setupGlobalEventListeners() {\n    // ESC key to close topmost modal\n    document.addEventListener('keydown', (e) => {\n      if (e.key === 'Escape' && this.activeModals.size > 0) {\n        const modals = Array.from(this.activeModals);\n        const topModal = modals[modals.length - 1];\n        this.closeModal(topModal);\n      }\n    });\n  }\n\n  /**\n   * Show a modal by ID\n   * @param {string} modalId - The ID of the modal element\n   * @param {Object} options - Configuration options\n   * @param {boolean} options.closeOnBackdrop - Whether to close on backdrop click (default: true)\n   * @param {Function} options.onShow - Callback when modal is shown\n   * @param {Function} options.onClose - Callback when modal is closed\n   */\n  showModal(modalId, options = {}) {\n    const modal = document.getElementById(modalId);\n    if (!modal) {\n      console.error(`Modal with ID '${modalId}' not found`);\n      return false;\n    }\n\n    const config = {\n      closeOnBackdrop: true,\n      onShow: null,\n      onClose: null,\n      ...options,\n    };\n\n    // Store configuration for this modal\n    this.eventListeners.set(modalId, config);\n\n    // Show the modal\n    modal.style.display = 'flex';\n    this.activeModals.add(modalId);\n\n    // Setup backdrop click handler\n    if (config.closeOnBackdrop) {\n      const backdropHandler = (e) => {\n        if (e.target === modal) {\n          this.closeModal(modalId);\n        }\n      };\n      modal.addEventListener('click', backdropHandler);\n\n      // Store handler for cleanup\n      if (!modal._modalBackdropHandler) {\n        modal._modalBackdropHandler = backdropHandler;\n      }\n    }\n\n    // Focus management - focus first focusable element\n    this.focusFirstElement(modal);\n\n    // Call onShow callback\n    if (config.onShow && typeof config.onShow === 'function') {\n      config.onShow(modalId);\n    }\n\n    return true;\n  }\n\n  /**\n   * Close a modal by ID\n   * @param {string} modalId - The ID of the modal element\n   */\n  closeModal(modalId) {\n    const modal = document.getElementById(modalId);\n    if (!modal) {\n      console.error(`Modal with ID '${modalId}' not found`);\n      return false;\n    }\n\n    // Hide the modal\n    modal.style.display = 'none';\n    this.activeModals.delete(modalId);\n\n    // Get configuration\n    const config = this.eventListeners.get(modalId);\n\n    // Cleanup backdrop handler\n    if (modal._modalBackdropHandler) {\n      modal.removeEventListener('click', modal._modalBackdropHandler);\n      delete modal._modalBackdropHandler;\n    }\n\n    // Call onClose callback\n    if (config && config.onClose && typeof config.onClose === 'function') {\n      config.onClose(modalId);\n    }\n\n    // Clean up configuration\n    this.eventListeners.delete(modalId);\n\n    return true;\n  }\n\n  /**\n   * Check if a modal is currently open\n   * @param {string} modalId - The ID of the modal element\n   * @returns {boolean}\n   */\n  isModalOpen(modalId) {\n    return this.activeModals.has(modalId);\n  }\n\n  /**\n   * Close all open modals\n   */\n  closeAllModals() {\n    const modals = Array.from(this.activeModals);\n    modals.forEach((modalId) => this.closeModal(modalId));\n  }\n\n  /**\n   * Focus the first focusable element in the modal\n   * @param {HTMLElement} modal - The modal element\n   */\n  focusFirstElement(modal) {\n    const focusableElements = modal.querySelectorAll(\n      'button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])'\n    );\n\n    if (focusableElements.length > 0) {\n      // Skip close button, focus first interactive element\n      const firstElement =\n        Array.from(focusableElements).find(\n          (el) => !el.classList.contains('modal-close')\n        ) || focusableElements[0];\n\n      setTimeout(() => firstElement.focus(), 100);\n    }\n  }\n\n  /**\n   * Create a reusable modal component\n   * @param {Object} config - Modal configuration\n   * @param {string} config.id - Modal ID\n   * @param {string} config.title - Modal title\n   * @param {string} config.content - Modal content HTML\n   * @param {Array} config.buttons - Array of button configurations\n   * @param {string} config.size - Modal size ('small', 'medium', 'large')\n   * @returns {HTMLElement} The created modal element\n   */\n  createModal(config) {\n    const {\n      id,\n      title = '',\n      content = '',\n      buttons = [],\n      size = 'medium',\n    } = config;\n\n    // Create modal structure\n    const modal = document.createElement('div');\n    modal.id = id;\n    modal.className = `modal-overlay modal-${size}`;\n    modal.style.display = 'none';\n\n    const modalContent = document.createElement('div');\n    modalContent.className = 'modal-content';\n\n    // Header\n    const header = document.createElement('div');\n    header.className = 'modal-header';\n\n    const titleElement = document.createElement('h2');\n    titleElement.className = 'modal-title';\n    titleElement.textContent = title;\n\n    const closeButton = document.createElement('button');\n    closeButton.className = 'modal-close';\n    closeButton.innerHTML = '&times;';\n    closeButton.onclick = () => this.closeModal(id);\n\n    header.appendChild(titleElement);\n    header.appendChild(closeButton);\n\n    // Body\n    const body = document.createElement('div');\n    body.className = 'modal-body';\n    body.innerHTML = content;\n\n    // Footer (if buttons provided)\n    let footer = null;\n    if (buttons.length > 0) {\n      footer = document.createElement('div');\n      footer.className = 'modal-footer';\n\n      buttons.forEach((buttonConfig) => {\n        const button = document.createElement('button');\n        button.textContent = buttonConfig.text || 'Button';\n        button.className = buttonConfig.className || 'modal-button';\n\n        if (buttonConfig.onClick) {\n          button.onclick = (e) => buttonConfig.onClick(e, id);\n        }\n\n        footer.appendChild(button);\n      });\n    }\n\n    // Assemble modal\n    modalContent.appendChild(header);\n    modalContent.appendChild(body);\n    if (footer) {\n      modalContent.appendChild(footer);\n    }\n\n    modal.appendChild(modalContent);\n    document.body.appendChild(modal);\n\n    return modal;\n  }\n\n  /**\n   * Update modal content\n   * @param {string} modalId - The ID of the modal element\n   * @param {string} content - New content HTML\n   */\n  updateModalContent(modalId, content) {\n    const modal = document.getElementById(modalId);\n    if (!modal) {\n      console.error(`Modal with ID '${modalId}' not found`);\n      return false;\n    }\n\n    const body = modal.querySelector('.modal-body');\n    if (body) {\n      body.innerHTML = content;\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Update modal title\n   * @param {string} modalId - The ID of the modal element\n   * @param {string} title - New title text\n   */\n  updateModalTitle(modalId, title) {\n    const modal = document.getElementById(modalId);\n    if (!modal) {\n      console.error(`Modal with ID '${modalId}' not found`);\n      return false;\n    }\n\n    const titleElement = modal.querySelector('.modal-title');\n    if (titleElement) {\n      titleElement.textContent = title;\n      return true;\n    }\n\n    return false;\n  }\n}\n\n// Create global instance\nconst modalManager = new ModalManager();\n\n// Export for module use\nexport { ModalManager, modalManager };\n\n// Global functions for backward compatibility\nwindow.showModal = (modalId, options) =>\n  modalManager.showModal(modalId, options);\nwindow.closeModal = (modalId) => modalManager.closeModal(modalId);\n\n// Export global functions for legacy code\nwindow.modalManager = modalManager;\n","/**\n * Navigation Loading States Manager\n * Handles loading indicators for page navigation and actions\n * Uses pre-existing HTML elements for better performance and maintainability\n */\n\nclass NavigationManager {\n  constructor() {\n    this.loadingStates = new Map();\n    this.globalLoader = null;\n    this.init();\n  }\n\n  init() {\n    this.setupElements();\n    this.setupEventListeners();\n  }\n\n  setupElements() {\n    // Get existing HTML elements instead of creating them dynamically\n    this.globalLoader = document.getElementById('globalLoader');\n    if (!this.globalLoader) {\n      console.warn(\n        'Global loader element not found. Navigation loading may not work properly.'\n      );\n    }\n  }\n\n  setupEventListeners() {\n    // Intercept all link clicks for SPA-like loading\n    document.addEventListener('click', (_e) => {\n      const link = _e.target.closest('a[href]');\n      if (link && !link.hasAttribute('data-no-loading')) {\n        // Don't intercept blob URLs (file downloads) or external links\n        const href = link.href;\n        if (\n          href.startsWith('blob:') ||\n          href.startsWith('http://') ||\n          href.startsWith('https://')\n        ) {\n          return; // Let the browser handle these normally\n        }\n        _e.preventDefault();\n        this.navigateTo(href, link.textContent);\n      }\n    });\n\n    // Handle browser back/forward buttons\n    window.addEventListener('popstate', (_e) => {\n      this.showLoading('Loading page...');\n      setTimeout(() => this.hideLoading(), 1000);\n    });\n\n    // Handle form submissions\n    document.addEventListener('submit', (e) => {\n      const form = e.target;\n      if (!form.hasAttribute('data-no-loading')) {\n        this.showLoading('Processing...');\n      }\n    });\n  }\n\n  showLoading(message = 'Loading...', element = null) {\n    if (element) {\n      // Show loading on specific element\n      this.showElementLoader(element, message);\n    } else {\n      // Show global loader\n      this.showGlobalLoader(message);\n    }\n  }\n\n  hideLoading(element = null) {\n    if (element) {\n      this.hideElementLoader(element);\n    } else {\n      this.hideGlobalLoader();\n    }\n  }\n\n  showGlobalLoader(message) {\n    if (this.globalLoader) {\n      const textElement = this.globalLoader.querySelector('.navigation-text');\n      if (textElement) {\n        textElement.textContent = message;\n      }\n      this.globalLoader.style.display = 'flex';\n    }\n  }\n\n  hideGlobalLoader() {\n    if (this.globalLoader) {\n      this.globalLoader.style.display = 'none';\n    }\n  }\n\n  showElementLoader(element, message) {\n    const rect = element.getBoundingClientRect();\n    const loader = document.createElement('div');\n    loader.className = 'element-loader';\n\n    // Set position and size using CSS classes and inline positioning only\n    Object.assign(loader.style, {\n      top: `${rect.top}px`,\n      left: `${rect.left}px`,\n      width: `${rect.width}px`,\n      height: `${rect.height}px`,\n    });\n\n    loader.innerHTML = `\n      <div class=\"navigation-spinner\"></div>\n      <span>${message}</span>\n    `;\n\n    document.body.appendChild(loader);\n    this.loadingStates.set(element, loader);\n  }\n\n  hideElementLoader(element) {\n    const loader = this.loadingStates.get(element);\n    if (loader) {\n      loader.remove();\n      this.loadingStates.delete(element);\n    }\n  }\n\n  navigateTo(url, title = '') {\n    this.showLoading(`Loading ${title}...`);\n\n    // Simulate navigation delay\n    setTimeout(() => {\n      window.location.href = url;\n    }, 500);\n  }\n\n  // Utility methods for common actions\n  showButtonLoading(button, message = 'Loading...') {\n    const originalHTML = button.innerHTML;\n    button.disabled = true;\n    button.classList.add('button-loading');\n\n    button.innerHTML = `\n      <span class=\"navigation-spinner\"></span>\n      ${message}\n    `;\n\n    return () => {\n      button.disabled = false;\n      button.classList.remove('button-loading');\n      button.innerHTML = originalHTML;\n    };\n  }\n\n  showFormLoading(form, message = 'Submitting...') {\n    const submitButtons = form.querySelectorAll(\n      'button[type=\"submit\"], input[type=\"submit\"]'\n    );\n    const restoreFunctions = [];\n\n    submitButtons.forEach((button) => {\n      restoreFunctions.push(this.showButtonLoading(button, message));\n    });\n\n    // Disable all form inputs\n    const inputs = form.querySelectorAll('input, textarea, select');\n    inputs.forEach((input) => {\n      input.disabled = true;\n    });\n\n    return () => {\n      restoreFunctions.forEach((restore) => restore());\n      inputs.forEach((input) => {\n        input.disabled = false;\n      });\n    };\n  }\n}\n\n// Initialize navigation manager\nconst navigationManager = new NavigationManager();\n\n// Export for global access\nwindow.NavigationManager = NavigationManager;\nwindow.navigationManager = navigationManager;\n\n// Convenience functions\nwindow.showLoading = (message, element) =>\n  navigationManager.showLoading(message, element);\nwindow.hideLoading = (element) => navigationManager.hideLoading(element);\n\nexport default NavigationManager;\n"],"names":["ConfiguratorSystem","configuratorManager","editorManager","_classCallCheck","_createClass","key","value","initialize","options","showConfigurator","ggcode","getInputValue","console","error","handleConfiguratorCompile","result","log","handleConfiguratorSave","configuratorSaveAndCompile","_this","handleSaveAndCompile","code","_this$editorManager","setInputValue","window","submitGGcode","Event","configuratorCompileOnly","handleCompileOnly","closeConfigurator","modal","document","getElementById","style","display","e","t","r","Symbol","n","iterator","o","toStringTag","i","c","prototype","Generator","u","Object","create","_regeneratorDefine2","f","p","y","G","v","a","d","bind","length","l","TypeError","call","done","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","setPrototypeOf","__proto__","displayName","_regenerator","w","m","defineProperty","_regeneratorDefine","_invoke","enumerable","configurable","writable","asyncGeneratorStep","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","_defineProperties","_toPropertyKey","_toPrimitive","_typeof","toPrimitive","String","Number","ConfiguratorParser","ConfiguratorRenderer","ConfiguratorValidator","ConfiguratorManager","configVars","currentValues","modalElement","contentElement","formElement","onCompile","onSave","undefined","_options$modalId","modalId","_options$contentId","contentId","_options$onCompile","_options$onSave","_addStyles","parseConfiguratorVars","getDefaultValues","formHtml","renderConfiguratorForm","innerHTML","setupRealTimeValidation","classList","add","remove","getFormValues","validateForm","isValid","errors","general","values","saveAndUpdateGGcode","originalGGcode","validation","success","updateResult","updateGGcodeWithValues","notFound","warn","foundVars","compileWithCurrentValues","_handleSaveAndCompile","_callee","editorSetValue","compileFunction","_t","_context","_showErrorMessage","_x","_x2","_x3","_handleCompileOnly","_callee2","_t2","_context2","message","_x4","_x5","getConfigVars","getCurrentValues","hasVariables","reset","errorHtml","renderErrorMessage","errorDiv","createElement","insertBefore","firstChild","setTimeout","parentNode","removeChild","styleId","id","textContent","concat","getValidationStyles","getAnimationStyles","head","appendChild","lines","split","_iterator","_createForOfIteratorHelper","_step","s","line","match","name","rawValue","trim","tag","description","descIdx","indexOf","slice","variable","_parseVariableTag","push","err","type","params","defaultValue","startsWith","numMatch","min","parseFloat","max","toLowerCase","selMatch","map","filter","Boolean","textMatch","rows","parseInt","newLines","hasOwnProperty","newLine","replace","_","p1","p2","p3","keys","join","validateVariableValue","numValue","isNaN","includes","defaults","_iterator2","_step2","convertFormValues","formValues","converted","varMap","_iterator3","_step3","_i","_Object$entries","entries","_Object$entries$_i","_slicedToArray","getVariableByName","find","getVariablesByType","Array","isArray","_renderEmptyState","_renderForm","html","_renderFormField","_renderNumberField","_renderCheckboxField","_renderSelectionField","_renderTextField","_variable$params$min","_variable$params$max","inputStyles","focusBlurHandlers","numberInputHtml","minMaxHtml","checked","selectStyles","option","selected","baseStyles","_variable$params$max2","textareaStyles","_variable$params$max3","renderSuccessMessage","renderLoadingIndicator","form","elements","element","_getElementValue","_markElementAsInvalid","_markElementAsValid","_validateNumberValue","_validateTextValue","_validateSelectionValue","_validateCheckValue","stringValue","_variable","_value","errorMessage","border","_updateErrorMessage","_removeErrorMessage","errorId","errorElement","className","cssText","container","closest","nextSibling","_iterator4","_step4","_loop","addEventListener","Infinity","clampedValue","Math","_ret","clearValidationStates","_iterator5","_step5","_iterator6","_step6","_iterator7","_step7","MonacoEditorManager","GcodeAnnotationSystem","VisualizerModules","NavigationManager","aiManager","aiCommands","HelpSystem","ExampleManager","FileOperationsManager","CompilationSystem","ModalManagerWrapper","storageManager","ApplicationManager","annotationSystem","visualizerModules","navigationManager","helpSystem","exampleManager","fileOperationsManager","compilationSystem","modalManager","configuratorSystem","monacoReady","lastOpenedFilename","pendingMonacoReady","_initializeApplication","makeManagersGloballyAvailable","getLastFilename","initializeMonacoEditor","setupAutoCompileCheckbox","setupFileOperations","initializeApplication","_initializeMonacoEditor","initialInput","initialOutput","editors","getInputContent","getOutputContent","inputContainerId","outputContainerId","event","customCode","onAnnotationUpdate","lineNumber","lineContent","updateAnnotations","getEditors","outputEditor","output","editor","input","setMonacoReady","loadAutoCompileState","loadLastOpenedFilename","setupAutoSave","_this2","autoCheckbox","setAutoCompile","target","_this3","openBtn","fileInput","click","file","files","reader","FileReader","onload","evt","setLastOpenedFilename","readAsText","apiManager","setApiManager","getEditorManager","getAnnotationSystem","getConfiguratorManager","getHelpSystem","getExampleManager","getFileOperationsManager","getCompilationSystem","getModalManager","getConfiguratorSystem","ready","_submitGGcode","firstLineContent","_args","preventDefault","syncEditors","setOutputValue","compiler","compile","resetModalState","getModel","getLineContent","saveContent","ggcodeElement","showCompileLoadingIndicator","show","compileIndicator","body","millDictionary","millAnnotations","annotationsLoaded","lastGCommand","_initialize","loadGcodeDictionaries","_loadGcodeDictionaries","_yield$Promise$all","_yield$Promise$all2","dictResponse","annotResponse","all","fetch","ok","json","isMotionCmd","cmd","test","hasMotionCoords","_Object$keys","k","getAllGcodeLines","getValue","out","findPreviousMotion","targetIdx","parsed","parseGcodeLine","commands","motions","cleanLine","commandMatches","matchAll","commandsUsed","Set","toUpperCase","gCommands","primaryCommand","paramMatches","parameters","letter","fullMatch","has","original","isModal","hasParams","hasMultipleCommands","generateAnnotation","implied","prev","annotation","cmdDesc","desc","_i2","param","paramDesc","sub","annotationsDiv","getModalState","setModalState","state","themeManager","settingsManager","autoCompile","autoCompileTimeout","skipAutoCompile","userFunctions","Map","functionParseTimeout","userFunctionCache","completionData","keywords","functions","constants","axes","operators","brackets","paramMappings","tokenizer","languageConfig","hoverConstants","hoverKeywords","hoverFunctions","signatures","_options$inputContain","_options$outputContai","_options$initialInput","_options$initialOutpu","_options$onAnnotation","_args2","_context3","reject","initializeEditor","_ref","_loadCompletionData","loadAndInitializeTheme","_registerGGcodeLanguage","_createEditors","_setupEventHandlers","_setupDragAndDrop","_parseUserFunctions","monaco","loadMonaco","require","config","paths","vs","attempts","maxAttempts","checkMonaco","Error","_loadCompletionData2","_callee4","loadPromises","_context5","_ref3","_callee3","_ref2","_ref4","filePath","response","data","_context4","status","languages","register","_registerCompletionProvider","_registerHoverProvider","_registerSignatureHelpProvider","languageConfiguration","setLanguageConfiguration","autoClosingPairs","surroundingPairs","folding","markers","start","RegExp","end","kw","word","constant","builtins","func","keywordPattern","constantPattern","builtinPattern","tokenizerConfig","axisChars","axisCharacters","langConfig","tokenizerRules","axisTypes","char","axisFallbackPattern1","charAt","axisFallbackPattern2","variablePattern","numberPattern","commentPatterns","lineComment","blockCommentStart","bracketSymbols","blockEndPattern","blockCommentEnd","setMonarchTokensProvider","symbols","tokenizerSymbolsPattern","root","blockComment","_window$applicationMa","_window$applicationMa2","applicationManager","registerCompletionItemProvider","provideCompletionItems","model","position","_token","_this3$helpSystem","_this3$helpSystem2","getWordUntilPosition","range","startLineNumber","endLineNumber","startColumn","endColumn","suggestions","linePrefix","substring","column","allCompletions","_toConsumableArray","_getGcodeCompletions","_getMcodeCompletions","_getKeywordCompletions","_getFunctionCompletions","_getConstantCompletions","_getAxisCompletions","_getOperatorCompletions","_getBracketCompletions","_getUserFunctionCompletions","_getAxisParametersCompletions","dictionaryCache","_getMillDictionaryCompletions","annotationsCache","_getMillAnnotationsCompletions","sort","b","sortText","localeCompare","incomplete","triggerCharacters","gcodes","completions","gcode","definition","detail","usage","completionItem","label","kind","CompletionItemKind","Class","documentation","_ref5","_ref6","insertText","mcodes","_Object$entries2","_Object$entries2$_i","mcode","Interface","_ref7","_ref8","Keyword","snippet","insertTextRules","CompletionItemInsertTextRule","InsertAsSnippet","Function","Constant","axis","Variable","operator","op","Operator","bracket","pair","Snippet","Value","item","_window$applicationMa3","_window$applicationMa4","dictionary","_i3","_Object$entries3","_Object$entries3$_i","paramDocs","_ref9","_ref0","_window$applicationMa5","_window$applicationMa6","_this4","annotations","isGCode","isMCode","_i4","_Object$entries4","_Object$entries4$_i","gcodeMatch","shouldInclude","altCode","shortForm","searchNum","gcodeNum","displayCode","isFullLinePreset","Property","lineTrimmed","isExactMatch","hasComplexParameters","paramsOnly","completionParams","paramMap","X","Y","Z","A","B","C","F","S","T","I","J","K","R","Q","P","fullPresetPriority","completionLabel","axisParameters","Field","_this5","registerHoverProvider","provideHover","getWordAtPosition","hoverInfo","_getHoverInfo","contents","_window$applicationMa7","_window$applicationMa8","paramList","_ref1","_ref10","altWord","_ref11","_ref12","title","entry","subParams","paramInfo","syntax","returns","keyword","example","userFunc","signature","_this6","registerSignatureHelpProvider","signatureHelpTriggerCharacters","provideSignatureHelp","beforeCursor","functionMatch","functionName","parametersText","signatureInfo","_getFunctionSignature","commaCount","parameterIndex","activeSignature","activeParameter","_registerBracketPairCompletionProvider","_this7","content","clear","functionRegex","exec","functionStart","index","linesBefore","functionLineIndex","noteMatch","set","forEach","docString","_this8","savedInput","savedOutput","inputContent","outputContent","inputLoading","outputLoading","inputContainer","outputContainer","initialSettings","getSettings","language","theme","automaticLayout","minimap","enabled","fontSize","fontFamily","wordWrap","lineNumbers","renderWhitespace","renderIndentGuides","bracketMatching","autoClosingBrackets","autoClosingQuotes","autoClosingDelete","autoClosingOvertype","surroudWithBrackets","tabSize","insertSpaces","bracketPairColorization","applyAllSettingsToEditor","applyThemeToSpecificEditor","_this9","onDidChangeModelContent","clearTimeout","onDidChangeCursorPosition","_this0","editorDom","getDomNode","background","dataTransfer","endsWith","setValue","getOutputValue","setAutoCompileState","getAutoCompile","getAutoCompileState","filename","setLastFilename","getLastOpenedFilename","setInputContent","setOutputContent","_this1","setInterval","isReady","refreshUserFunctions","getUserFunctions","from","ownKeys","getOwnPropertySymbols","getOwnPropertyDescriptor","_objectSpread","_defineProperty","getOwnPropertyDescriptors","defineProperties","AIManager","currentMode","isAutoApprove","pendingCommandData","isStreaming","messageQueue","sessionId","generateSessionId","conversationHistory","userContext","currentTask","lastCommand","codeContext","lastAnalyzed","selectedText","cursorPosition","recentSearches","preferences","autoExecute","verboseMode","maxHistoryLength","Date","now","random","toString","substr","addToConversationHistory","role","timestamp","toISOString","getConversationContext","maxMessages","updateUserContext","contextUpdate","clearConversationHistory","switchMode","mode","setAiMode","updateModeSelector","toggleAutoApprove","toggle","color","setAiAutoApprove","handleChatKeydown","shiftKey","sendMessage","_sendMessage","messagesContainer","userMessage","typingIndicator","context","handleUserConfirmation","addMessage","createTypingIndicator","scrollTop","scrollHeight","buildAIContext","method","headers","JSON","stringify","provider","stream","handleStreamingResponse","removeTypingIndicator","currentGcode","userConfirmation","pendingCommand","_handleStreamingResponse","_response$headers$get","decoder","buffer","responseText","aiResponseContainer","aiResponseContent","_yield$reader$read","readerDone","commandMatch","command","_data","get","handleNonStreamingResponse","getReader","TextDecoder","createAIMessageContainer","querySelector","read","decode","pop","parse","showCommandActions","parseError","parseAICommands","_handleNonStreamingResponse","cleanResponse","_t3","_x6","commandPatterns","_commandPatterns","pattern","implementedCommands","executePendingCommand","addSystemMessage","sender","messageDiv","actionsDiv","previewDiv","executeBtn","previewText","commandNames","insertat","insert","analyze","scrollIntoView","behavior","block","hideCommandActions","executePendingCommandFromUI","_this$pendingCommandD","confirmationWords","lastAiMessage","querySelectorAll","aiMessageText","modeSelector","updateAutoApproveToggle","showAiChat","loadSettings","focus","closeAiChat","sendAiMessage","handleAiChatKeydown","changeAiMode","switchAiMode","aiQuickAction","action","aiInput","editorContent","getCurrentEditorContent","getSelectedText","cursorPos","getCursorPosition","prompt","selection","getSelection","isEmpty","getValueInRange","getPosition","testAICommands","testResponse","multiCommandResponse","multiResult","testEditor","pos","executeEdits","text","testAIIntegration","analysis","analyzeCode","testAICommandParsing","testCases","testCase","testDirectCommandExecution","testCommands","setupEventListeners","savedMode","getAiMode","savedAutoApprove","getAiAutoApprove","aiChatInput","autoApproveToggle","executeAiCommandBtn","ensureGlobalFunction","showExamples","showModal","loadExamples","setupExamplesSearch","searchInput","_loadExamples","examplesList","examples","getList","preview","_loadExample","getContent","closeModal","alert","loadExample","FileOperations","fileOperations","copyOutput","saveOutput","saveGGcode","clearMemory","supportedExtensions","maxFileSize","validateFile","size","extension","getFileExtension","lastDot","lastIndexOf","determineFileType","isGGcodeContent","isGcodeContent","ggcodePatterns","some","gcodePatterns","processContent","lineCount","hasErrors","warnings","processGGcodeContent","processGcodeContent","lineNum","trimmed","openBrackets","closeBrackets","hasMotionCommands","_readFileWithProgress","onProgress","onprogress","lengthComputable","progress","loaded","total","processed","lastModified","onerror","readFileWithProgress","createDownload","mimeType","blob","Blob","url","URL","createObjectURL","convertFormat","fromType","toType","getFileStats","stats","totalLines","nonEmptyLines","commentLines","codeLines","copyButton","navigator","clipboard","writeText","exportButton","restoreButton","showButtonLoading","lastFilename","localStorage","getItem","suggestedFilename","base","userFilename","utf8Bytes","TextEncoder","encode","href","download","revokeObjectURL","saveButton","dot","confirm","removeItem","FileTreeViewer","currentFile","treeData","markdownContent","initializeAsync","_initializeAsync","scanMarkdownFiles","createTreeStructure","render","bindEvents","_scanMarkdownFiles","markdownFiles","loadMarkdownContent","path","_loadMarkdownContent","encodeURIComponent","tree","pathParts","current","part","children","renderTreeNode","node","level","itemPath","indentation","isExpanded","expandedFolders","toggleFolder","selectFile","updateDisplayedFile","dataset","refresh","_copyFileContent","_callee5","_t4","copyFileContent","_refresh","_callee6","_context6","_loadAndDisplayFile","_callee7","_t5","_context7","displayFileContent","triggerViewModeChange","loadAndDisplayFile","titleElement","fileName","renderedHtml","renderMarkdownContent","_updateDisplayedFile","_callee8","mdContentBody","fileNameSpan","_t6","_context8","showMarkdownFile","fileTreeViewer","_showHelp","savedLanguage","getSelectedLanguage","loadHelpContent","setupLanguageSelector","initializeLanguageSelectorDisplay","addCopyButtons","setupHelpSearch","loadMillDictionaryData","initializeFileTreeViewer","initializeDocumentationControls","showHelp","_loadHelpContent","helpContent","help","renderHelpContent","sections","section","additionalInfo","list","listItem","items","_setupLanguageSelector","selectSelected","languageMap","es","flag","fr","de","it","pt","ru","zh","ja","ko","ar","he","tr","pl","nl","selectedLanguageInfo","_loadMillDictionaryData","dictionaryResponse","annotationsResponse","annotationsJson","integrateMillDictionaryWithMonaco","_window$editorManager","_window$editorManager2","millCompletions","convertDictionaryToCompletions","signalCompletionRefresh","preElements","pre","onclick","originalSections","searchTerm","showAllSections","removeAllHighlights","performSearch","addClearSearchButton","addSearchHighlightStyles","clearButton","dispatchEvent","helpSections","hasVisibleResults","originalSearchTerm","sectionText","relevanceScore","matchesAnyKeyword","wordBoundaryRegex","escapeRegExp","partialRegex","removeHighlights","highlightSearchTerm","showNoResultsMessage","noResultsMsg","term","walker","createTreeWalker","NodeFilter","SHOW_TEXT","textNodes","nextNode","textNode","lowerText","matches","searchIndex","matchStart","matchEnd","overlaps","lastIndex","highlightedText","tempDiv","fragment","createDocumentFragment","replaceChild","string","marks","mark","outerHTML","_initializeFileTreeViewer","treePanel","toggleTreeBtn","backToHelpBtn","panel","closeTreeBtn","contains","hideTreeView","showTreeView","_document$getElementB","contentPanel","showHelpView","copyBtn","copyMarkdownContent","hideTreeBtn","_document$getElementB2","overlay","toggleBtn","backBtn","_document$getElementB3","_showMarkdownFile","fileContent","_document$getElementB4","renderedContent","renderMarkdownText","_copyMarkdownContent","originalText","ModalManager","closeGcodeViewer","gcode3d","gcodeSimAnimationId","gcodeToolpathPoints","gcodeToolpathSegments","gcodeToolpathModes","gcodeLineMap","gcodeLines","gcodeSegmentCounts","gcodeScene","gcodeCamera","gcodeToolMesh","gcodeRender","activeModals","eventListeners","setupGlobalEventListeners","modals","topModal","closeOnBackdrop","onShow","onClose","backdropHandler","_modalBackdropHandler","focusFirstElement","removeEventListener","isModalOpen","closeAllModals","focusableElements","firstElement","el","createModal","_config$title","_config$content","_config$buttons","buttons","_config$size","modalContent","header","closeButton","footer","buttonConfig","button","onClick","updateModalContent","updateModalTitle","loadingStates","globalLoader","init","setupElements","_e","link","hasAttribute","navigateTo","showLoading","hideLoading","showElementLoader","showGlobalLoader","hideElementLoader","hideGlobalLoader","textElement","rect","getBoundingClientRect","loader","assign","top","left","width","height","location","originalHTML","disabled","showFormLoading","submitButtons","restoreFunctions","inputs","restore"],"sourceRoot":""}