// Complete Math Functions Example
// This example demonstrates ALL available mathematical functions and operators

// ── G-code File Variables ──
let id = 4453            // File ID
let nline = 1            // Line numbering: 1 = enabled, 0 = disabled
let decimalpoint = 3     // Number of decimal places (range: 0–6)


let center_x = 0 /// @number -50 50 // Center X coordinate
let center_y = 0 /// @number -50 50 // Center Y coordinate

// Move to starting position
G0 X[center_x] Y[center_y]

// Test all arithmetic functions
let value1 = abs(-15)
let value2 = sqrt(25)
let value3 = floor(3.7)
let value4 = ceil(3.2)
let value5 = round(3.6)
let value6 = min(5, 10)
let value7 = max(5, 10)
let value8 = clamp(15, 0, 10)
let value9 = mod(17, 5)
let value10 = pow(2, 8)
let value11 = hypot(3, 4)
let value12 = sign(-5)
let value13 = log(10)
let value14 = exp(1)

// Test trigonometric functions
let angle_30 = 30 * DEG_TO_RAD
let angle_45 = 45 * DEG_TO_RAD
let angle_60 = 60 * DEG_TO_RAD

let sin_val = sin(angle_30)
let cos_val = cos(angle_45)
let tan_val = tan(angle_60)
let asin_val = asin(0.5)
let acos_val = acos(0.5)
let atan_val = atan(1)
let atan2_val = atan2(1, 1)

// Test conversion functions
let deg_val = deg(PI)
let rad_val = rad(180)

// Test interpolation and mapping
let lerp_val = lerp(0, 100, 0.5)
let map_val = map(50, 0, 100, 0, 200)

// Test distance function
let dist_val = distance(0, 0, 3, 4)

// Test noise function (placeholder)
let noise_val = noise(1.5)

// Draw a pattern using all the calculated values
G1 X[center_x + value1] Y[center_y] F[100]
G1 X[center_x + value2] Y[center_y + value3] F[100]
G1 X[center_x + value4] Y[center_y + value5] F[100]
G1 X[center_x + value6] Y[center_y + value7] F[100]
G1 X[center_x + value8] Y[center_y + value9] F[100]
G1 X[center_x + value10] Y[center_y + value11] F[100]

// Draw using trigonometric values
G0 X[center_x + 20] Y[center_y]
G1 X[center_x + 20 + 10 * cos_val] Y[center_y + 10 * sin_val] F[100]
G1 X[center_x + 20 + 10 * tan_val] Y[center_y + 10 * asin_val] F[100]

// Draw using interpolation values
G0 X[center_x - 20] Y[center_y]
G1 X[center_x - 20 + lerp_val] Y[center_y + map_val] F[100]
G1 X[center_x - 20 + dist_val] Y[center_y + noise_val] F[100]

// Return to center
G0 X[center_x] Y[center_y] 