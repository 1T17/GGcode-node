{"version":3,"file":"src_client_js_core_applicationManager_js.js","mappings":"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","sources":["webpack://ggcode-compiler/./src/client/js/config/configuratorSystem.js","webpack://ggcode-compiler/./src/client/js/configurator/index.js","webpack://ggcode-compiler/./src/client/js/configurator/parser.js","webpack://ggcode-compiler/./src/client/js/configurator/renderer.js","webpack://ggcode-compiler/./src/client/js/configurator/validator.js","webpack://ggcode-compiler/./src/client/js/core/applicationManager.js","webpack://ggcode-compiler/./src/client/js/core/compilationSystem.js","webpack://ggcode-compiler/./src/client/js/editor/annotations.js","webpack://ggcode-compiler/./src/client/js/editor/monaco.js","webpack://ggcode-compiler/./src/client/js/ui/aiManager.js","webpack://ggcode-compiler/./src/client/js/ui/exampleManager.js","webpack://ggcode-compiler/./src/client/js/ui/fileOperations.js","webpack://ggcode-compiler/./src/client/js/ui/fileOps.js","webpack://ggcode-compiler/./src/client/js/ui/fileTreeViewer.js","webpack://ggcode-compiler/./src/client/js/ui/helpSystem.js","webpack://ggcode-compiler/./src/client/js/ui/modalManager.js","webpack://ggcode-compiler/./src/client/js/ui/modals.js","webpack://ggcode-compiler/./src/client/js/ui/navigation.js","webpack://ggcode-compiler/./src/client/js/visualizer/chunk-loader.js","webpack://ggcode-compiler/./src/client/js/visualizer/controls.js","webpack://ggcode-compiler/./src/client/js/visualizer/core.js","webpack://ggcode-compiler/./src/client/js/visualizer/geometry-manager.js","webpack://ggcode-compiler/./src/client/js/visualizer/index.js","webpack://ggcode-compiler/./src/client/js/visualizer/modal.js","webpack://ggcode-compiler/./src/client/js/visualizer/parser.js"],"sourcesContent":["/**\n * Configurator System Module\n * Handles configurator-related operations\n */\n\nclass ConfiguratorSystem {\n    constructor(configuratorManager, editorManager) {\n        this.configuratorManager = configuratorManager;\n        this.editorManager = editorManager;\n    }\n\n    /**\n     * Initialize configurator\n     */\n    initialize(options) {\n        if (this.configuratorManager) {\n            this.configuratorManager.initialize(options);\n        }\n    }\n\n    /**\n     * Show configurator\n     */\n    showConfigurator() {\n        if (this.configuratorManager) {\n            const ggcode = this.editorManager ? this.editorManager.getInputValue() : '';\n            this.configuratorManager.showConfigurator(ggcode);\n        } else {\n            console.error('ConfiguratorManager module not available');\n        }\n    }\n\n    /**\n     * Handle configurator compile action\n     */\n    handleConfiguratorCompile(result) {\n        console.log('Configurator compile completed:', result);\n    }\n\n    /**\n     * Handle configurator save action\n     */\n    handleConfiguratorSave(result) {\n        console.log('Configurator save completed:', result);\n    }\n\n    /**\n     * Configurator save and compile\n     */\n    configuratorSaveAndCompile() {\n        if (this.configuratorManager) {\n            const ggcode = this.editorManager ? this.editorManager.getInputValue() : '';\n            this.configuratorManager.handleSaveAndCompile(\n                ggcode,\n                (code) => this.editorManager?.setInputValue(code),\n                () => {\n                    if (window.submitGGcode) {\n                        window.submitGGcode(new Event('submit'));\n                    }\n                }\n            );\n        } else {\n            console.error('ConfiguratorManager module not available');\n        }\n    }\n\n    /**\n     * Configurator compile only\n     */\n    configuratorCompileOnly() {\n        if (this.configuratorManager) {\n            const ggcode = this.editorManager ? this.editorManager.getInputValue() : '';\n            this.configuratorManager.handleCompileOnly(ggcode, (code) => {\n                if (window.submitGGcode) {\n                    window.submitGGcode(new Event('submit'), code);\n                }\n            });\n        } else {\n            console.error('ConfiguratorManager module not available');\n        }\n    }\n\n    /**\n     * Close configurator\n     */\n    closeConfigurator() {\n        if (this.configuratorManager) {\n            this.configuratorManager.closeConfigurator();\n        }\n        const modal = document.getElementById('configuratorModal');\n        if (modal) {\n            modal.style.display = 'none';\n        }\n    }\n}\n\nexport default ConfiguratorSystem;","/**\n * Configurator Manager\n * Main configurator module that coordinates parsing, rendering, and validation\n */\n\nimport ConfiguratorParser from './parser.js';\nimport ConfiguratorRenderer from './renderer.js';\nimport ConfiguratorValidator from './validator.js';\n\nclass ConfiguratorManager {\n  constructor() {\n    this.configVars = [];\n    this.currentValues = {};\n    this.modalElement = null;\n    this.contentElement = null;\n    this.formElement = null;\n    this.onCompile = null;\n    this.onSave = null;\n  }\n\n  /**\n   * Initialize the configurator manager\n   * @param {Object} options - Configuration options\n   * @param {string} options.modalId - ID of the modal element\n   * @param {string} options.contentId - ID of the content container\n   * @param {Function} options.onCompile - Callback for compilation\n   * @param {Function} options.onSave - Callback for saving\n   */\n  initialize(options = {}) {\n    const {\n      modalId = 'configuratorModal',\n      contentId = 'configuratorContent',\n      onCompile = null,\n      onSave = null,\n    } = options;\n\n    this.modalElement = document.getElementById(modalId);\n    this.contentElement = document.getElementById(contentId);\n    this.onCompile = onCompile;\n    this.onSave = onSave;\n\n    if (!this.modalElement || !this.contentElement) {\n      console.error('Configurator: Required DOM elements not found');\n      return false;\n    }\n\n    // Add CSS styles\n    this._addStyles();\n\n    return true;\n  }\n\n  /**\n   * Show configurator modal with GGcode content\n   * @param {string} ggcode - GGcode content to parse\n   */\n  showConfigurator(ggcode) {\n    if (!this.modalElement || !this.contentElement) {\n      console.error('Configurator not initialized');\n      return;\n    }\n\n    // Parse configurator variables from GGcode\n    this.configVars = ConfiguratorParser.parseConfiguratorVars(ggcode);\n    this.currentValues = ConfiguratorParser.getDefaultValues(this.configVars);\n\n    // Render the form\n    const formHtml = ConfiguratorRenderer.renderConfiguratorForm(\n      this.configVars\n    );\n    this.contentElement.innerHTML = formHtml;\n\n    // Get form element and setup validation\n    this.formElement = document.getElementById('configuratorForm');\n    if (this.formElement) {\n      ConfiguratorValidator.setupRealTimeValidation(\n        this.formElement,\n        this.configVars\n      );\n    }\n\n    // Show modal\n    this.modalElement.style.display = 'flex';\n    this.modalElement.classList.add('configurator-fade-in');\n  }\n\n  /**\n   * Close configurator modal\n   */\n  closeConfigurator() {\n    if (this.modalElement) {\n      this.modalElement.style.display = 'none';\n      this.modalElement.classList.remove('configurator-fade-in');\n    }\n  }\n\n  /**\n   * Get current form values\n   * @returns {Object} Current form values\n   */\n  getFormValues() {\n    if (!this.formElement) {\n      return {};\n    }\n\n    return ConfiguratorValidator.getFormValues(\n      this.formElement,\n      this.configVars\n    );\n  }\n\n  /**\n   * Validate current form\n   * @returns {Object} Validation result\n   */\n  validateForm() {\n    if (!this.formElement) {\n      return {\n        isValid: false,\n        errors: { general: 'Form not available' },\n        values: {},\n      };\n    }\n\n    return ConfiguratorValidator.validateForm(\n      this.formElement,\n      this.configVars\n    );\n  }\n\n  /**\n   * Save form values and update GGcode\n   * @param {string} originalGGcode - Original GGcode content\n   * @returns {Object} Result with updated code and status\n   */\n  saveAndUpdateGGcode(originalGGcode) {\n    const validation = this.validateForm();\n\n    if (!validation.isValid) {\n      return {\n        success: false,\n        error: 'Form validation failed',\n        errors: validation.errors,\n      };\n    }\n\n    const values = validation.values;\n    const updateResult = ConfiguratorParser.updateGGcodeWithValues(\n      originalGGcode,\n      values\n    );\n\n    // Log any variables not found\n    if (updateResult.notFound.length > 0) {\n      console.warn(\n        '[Configurator] Variables not found in code:',\n        updateResult.notFound\n      );\n    }\n\n    // Update current values\n    this.currentValues = values;\n\n    return {\n      success: true,\n      code: updateResult.code,\n      foundVars: updateResult.foundVars,\n      notFound: updateResult.notFound,\n      values: values,\n    };\n  }\n\n  /**\n   * Compile with current form values without saving\n   * @param {string} originalGGcode - Original GGcode content\n   * @returns {Object} Result with temporary code for compilation\n   */\n  compileWithCurrentValues(originalGGcode) {\n    const validation = this.validateForm();\n\n    if (!validation.isValid) {\n      return {\n        success: false,\n        error: 'Form validation failed',\n        errors: validation.errors,\n      };\n    }\n\n    const values = validation.values;\n    const updateResult = ConfiguratorParser.updateGGcodeWithValues(\n      originalGGcode,\n      values\n    );\n\n    return {\n      success: true,\n      code: updateResult.code,\n      values: values,\n    };\n  }\n\n  /**\n   * Handle save and compile action\n   * @param {string} originalGGcode - Original GGcode content\n   * @param {Function} editorSetValue - Function to update editor\n   * @param {Function} compileFunction - Function to trigger compilation\n   */\n  async handleSaveAndCompile(originalGGcode, editorSetValue, compileFunction) {\n    const result = this.saveAndUpdateGGcode(originalGGcode);\n\n    if (!result.success) {\n      console.error('[Configurator] Save failed:', result.error);\n      this._showErrorMessage('Failed to save: ' + result.error);\n      return;\n    }\n\n    //console.log('[Configurator] Saving values from form:', result.values);\n    //console.log('[Configurator] Updated code:', result.code);\n\n    // Update editor\n    if (editorSetValue) {\n      editorSetValue(result.code);\n      console.log('[Configurator] Editor updated with new values.');\n    }\n\n    // Close modal\n    this.closeConfigurator();\n\n    // Trigger compilation\n    if (compileFunction) {\n      try {\n        await compileFunction();\n      } catch (error) {\n        console.error('[Configurator] Compilation failed:', error);\n      }\n    }\n\n    // Call save callback if provided\n    if (this.onSave) {\n      this.onSave(result);\n    }\n  }\n\n  /**\n   * Handle compile only action\n   * @param {string} originalGGcode - Original GGcode content\n   * @param {Function} compileFunction - Function to compile code\n   */\n  async handleCompileOnly(originalGGcode, compileFunction) {\n    const result = this.compileWithCurrentValues(originalGGcode);\n\n    if (!result.success) {\n      console.error('[Configurator] Compile preparation failed:', result.error);\n      this._showErrorMessage('Failed to prepare compilation: ' + result.error);\n      return;\n    }\n\n    //console.log('[Configurator] Compiling with values:', result.values);\n\n    // Compile with temporary code\n    if (compileFunction) {\n      try {\n        await compileFunction(result.code);\n      } catch (error) {\n        console.error('[Configurator] Compilation failed:', error);\n        this._showErrorMessage('Compilation failed: ' + error.message);\n      }\n    }\n\n    // Call compile callback if provided\n    if (this.onCompile) {\n      this.onCompile(result);\n    }\n  }\n\n  /**\n   * Get configurator variables\n   * @returns {Array} Array of configurator variables\n   */\n  getConfigVars() {\n    return this.configVars;\n  }\n\n  /**\n   * Get current values\n   * @returns {Object} Current form values\n   */\n  getCurrentValues() {\n    return this.currentValues;\n  }\n\n  /**\n   * Check if configurator has variables\n   * @returns {boolean} True if has variables\n   */\n  hasVariables() {\n    return this.configVars.length > 0;\n  }\n\n  /**\n   * Reset configurator state\n   */\n  reset() {\n    this.configVars = [];\n    this.currentValues = {};\n    this.formElement = null;\n\n    if (this.contentElement) {\n      this.contentElement.innerHTML = '';\n    }\n  }\n\n  /**\n   * Show error message in the configurator\n   * @param {string} message - Error message\n   * @private\n   */\n  _showErrorMessage(message) {\n    if (this.contentElement) {\n      const errorHtml = ConfiguratorRenderer.renderErrorMessage(message);\n      const errorDiv = document.createElement('div');\n      errorDiv.innerHTML = errorHtml;\n      this.contentElement.insertBefore(\n        errorDiv,\n        this.contentElement.firstChild\n      );\n\n      // Remove error after 5 seconds\n      setTimeout(() => {\n        if (errorDiv.parentNode) {\n          errorDiv.parentNode.removeChild(errorDiv);\n        }\n      }, 5000);\n    }\n  }\n\n  /**\n   * Add CSS styles for configurator\n   * @private\n   */\n  _addStyles() {\n    const styleId = 'configurator-styles';\n    if (document.getElementById(styleId)) return;\n\n    const style = document.createElement('style');\n    style.id = styleId;\n    style.textContent = `\n      ${ConfiguratorRenderer.getValidationStyles()}\n      ${ConfiguratorRenderer.getAnimationStyles()}\n    `;\n\n    document.head.appendChild(style);\n  }\n}\n\nexport default ConfiguratorManager;\n","/**\n * Configurator Variable Parser\n * Parses GGcode to extract configurator variables and their annotations\n */\n\nclass ConfiguratorParser {\n  /**\n   * Parse GGcode to extract configurator variables\n   * @param {string} ggcode - GGcode content to parse\n   * @returns {Array} Array of configurator variable objects\n   */\n  static parseConfiguratorVars(ggcode) {\n    const lines = ggcode.split(/\\r?\\n/);\n    const configVars = [];\n\n    for (const line of lines) {\n      const match = line.match(\n        /^\\s*let\\s+([a-zA-Z_][a-zA-Z0-9_]*)\\s*=\\s*([^/]+?)\\s*\\/\\/\\/\\s*(.*)$/\n      );\n      if (!match) continue;\n\n      const name = match[1];\n      const rawValue = match[2].trim();\n      let tag = match[3].trim();\n      let description = '';\n\n      // Extract description if present (after //)\n      const descIdx = tag.indexOf('//');\n      if (descIdx !== -1) {\n        description = tag.slice(descIdx + 2).trim();\n        tag = tag.slice(0, descIdx).trim();\n      }\n\n      const variable = this._parseVariableTag(name, rawValue, tag, description);\n      if (variable) {\n        configVars.push(variable);\n      }\n    }\n\n    return configVars;\n  }\n\n  /**\n   * Parse a variable tag to determine type and parameters\n   * @param {string} name - Variable name\n   * @param {string} rawValue - Raw variable value\n   * @param {string} tag - Annotation tag\n   * @param {string} description - Variable description\n   * @returns {Object|null} Parsed variable object or null if invalid\n   * @private\n   */\n  static _parseVariableTag(name, rawValue, tag, description) {\n    let type,\n      params = {},\n      defaultValue = rawValue;\n\n    if (tag.startsWith('@number')) {\n      type = 'number';\n      const numMatch = tag.match(\n        /@number\\s+(-?\\d+(?:\\.\\d+)?)(?:\\s+|\\s*to\\s*)(-?\\d+(?:\\.\\d+)?)/\n      );\n      if (numMatch) {\n        params.min = parseFloat(numMatch[1]);\n        params.max = parseFloat(numMatch[2]);\n      }\n      defaultValue = parseFloat(rawValue);\n    } else if (tag.startsWith('@check')) {\n      type = 'check';\n      defaultValue = rawValue == '1' || rawValue.toLowerCase() == 'true';\n    } else if (tag.startsWith('@selction')) {\n      type = 'selection';\n      const selMatch = tag.match(/@selction\\s+([\\d, ]+)/);\n      if (selMatch) {\n        params.options = selMatch[1]\n          .split(',')\n          .map((s) => s.trim())\n          .filter(Boolean);\n      }\n      defaultValue = rawValue;\n    } else if (tag.startsWith('@text')) {\n      type = 'text';\n      const textMatch = tag.match(/@text\\s+(\\d+)(?:\\s+max\\s*(\\d+))?/);\n      if (textMatch) {\n        params.rows = parseInt(textMatch[1]);\n        if (textMatch[2]) params.max = parseInt(textMatch[2]);\n      }\n      defaultValue = rawValue;\n    } else {\n      return null; // skip unknown tags\n    }\n\n    return { name, type, defaultValue, params, description };\n  }\n\n  /**\n   * Update GGcode with new variable values\n   * @param {string} ggcode - Original GGcode\n   * @param {Object} values - New variable values\n   * @returns {Object} Object with updated code and found variables\n   */\n  static updateGGcodeWithValues(ggcode, values) {\n    const lines = ggcode.split(/\\r?\\n/);\n    let foundVars = {};\n\n    const newLines = lines.map((line) => {\n      const match = line.match(\n        /^\\s*let\\s+([a-zA-Z_][a-zA-Z0-9_]*)\\s*=\\s*([^/]+)(\\/\\/\\/)/\n      );\n      if (!match) return line;\n\n      const name = match[1];\n      if (Object.prototype.hasOwnProperty.call(values, name)) {\n        foundVars[name] = true;\n        // Replace value, keep tag and description\n        const newLine = line.replace(\n          /(let\\s+[a-zA-Z_][a-zA-Z0-9_]*\\s*=\\s*)([^/]+)(\\/\\/\\/)/,\n          function (_, p1, p2, p3) {\n            return p1 + values[name] + ' ' + p3;\n          }\n        );\n        return newLine;\n      }\n      return line;\n    });\n\n    // Log any variables not found in code\n    const notFound = Object.keys(values).filter((name) => !foundVars[name]);\n\n    return {\n      code: newLines.join('\\n'),\n      foundVars,\n      notFound,\n    };\n  }\n\n  /**\n   * Validate variable value against its constraints\n   * @param {Object} variable - Variable definition\n   * @param {*} value - Value to validate\n   * @returns {Object} Validation result with isValid and error message\n   */\n  static validateVariableValue(variable, value) {\n    const result = { isValid: true, error: null };\n\n    switch (variable.type) {\n      case 'number': {\n        const numValue = parseFloat(value);\n        if (isNaN(numValue)) {\n          result.isValid = false;\n          result.error = 'Must be a valid number';\n        } else if (\n          variable.params.min !== undefined &&\n          numValue < variable.params.min\n        ) {\n          result.isValid = false;\n          result.error = `Must be at least ${variable.params.min}`;\n        } else if (\n          variable.params.max !== undefined &&\n          numValue > variable.params.max\n        ) {\n          result.isValid = false;\n          result.error = `Must be at most ${variable.params.max}`;\n        }\n        break;\n      }\n\n      case 'text':\n        if (variable.params.max && value.length > variable.params.max) {\n          result.isValid = false;\n          result.error = `Must be at most ${variable.params.max} characters`;\n        }\n        break;\n\n      case 'selection':\n        if (\n          variable.params.options &&\n          !variable.params.options.includes(value)\n        ) {\n          result.isValid = false;\n          result.error = 'Must be one of the available options';\n        }\n        break;\n\n      case 'check':\n        // Boolean values are always valid\n        break;\n    }\n\n    return result;\n  }\n\n  /**\n   * Get default values for all configurator variables\n   * @param {Array} configVars - Array of configurator variables\n   * @returns {Object} Object with variable names as keys and default values\n   */\n  static getDefaultValues(configVars) {\n    const defaults = {};\n    for (const variable of configVars) {\n      defaults[variable.name] = variable.defaultValue;\n    }\n    return defaults;\n  }\n\n  /**\n   * Convert form values to appropriate types\n   * @param {Object} formValues - Raw form values\n   * @param {Array} configVars - Array of configurator variables\n   * @returns {Object} Typed values\n   */\n  static convertFormValues(formValues, configVars) {\n    const converted = {};\n    const varMap = {};\n\n    // Create a map for quick lookup\n    for (const variable of configVars) {\n      varMap[variable.name] = variable;\n    }\n\n    for (const [name, value] of Object.entries(formValues)) {\n      const variable = varMap[name];\n      if (!variable) {\n        converted[name] = value;\n        continue;\n      }\n\n      switch (variable.type) {\n        case 'number':\n          converted[name] = parseFloat(value);\n          break;\n        case 'check':\n          converted[name] = value ? 1 : 0;\n          break;\n        default:\n          converted[name] = value;\n      }\n    }\n\n    return converted;\n  }\n\n  /**\n   * Get variable by name\n   * @param {Array} configVars - Array of configurator variables\n   * @param {string} name - Variable name to find\n   * @returns {Object|null} Variable object or null if not found\n   */\n  static getVariableByName(configVars, name) {\n    return configVars.find((variable) => variable.name === name) || null;\n  }\n\n  /**\n   * Get variables by type\n   * @param {Array} configVars - Array of configurator variables\n   * @param {string} type - Variable type to filter by\n   * @returns {Array} Array of variables of the specified type\n   */\n  static getVariablesByType(configVars, type) {\n    return configVars.filter((variable) => variable.type === type);\n  }\n}\n\nexport default ConfiguratorParser;\n","/**\n * Configurator Form Renderer\n * Handles rendering of configurator forms and UI components\n */\n\nclass ConfiguratorRenderer {\n  /**\n   * Render configurator form HTML\n   * @param {Array} configVars - Array of configurator variables\n   * @returns {string} HTML string for the form\n   */\n  static renderConfiguratorForm(configVars) {\n    if (!Array.isArray(configVars) || configVars.length === 0) {\n      return this._renderEmptyState();\n    }\n\n    return this._renderForm(configVars);\n  }\n\n  /**\n   * Render empty state when no configurator variables are found\n   * @returns {string} HTML for empty state\n   * @private\n   */\n  static _renderEmptyState() {\n    return `<div style=\"color:#aaa; padding:2em;\">\n      <div style=\"font-size:1.1em; font-weight:600; color:#ff0000; margin-bottom:10px;\">No configurable variables found in GGcode.</div>\n      <div style=\"margin-top:10px; color:#ccc; font-size:0.98em;\">\n        <p>\n          <strong>How to add Configurator support:</strong>\n        </p>\n        <ul style=\"margin-left:1.2em; padding-left:0;\">\n          <li>\n            Add <code>/// @number min max</code> after a <code>let</code> variable to create a number input.<br>\n            Example: <code>let width = 10 /// @number 1 100 // Part width in mm</code>\n          </li>\n          <li>\n            Add <code>/// @check</code> for a checkbox (boolean).<br>\n            Example: <code>let enabled = 1 /// @check // Enable feature</code>\n          </li>\n          <li>\n            Add <code>/// @selction 1,2,3</code> for a dropdown with options.<br>\n            Example: <code>let mode = 2 /// @selction 1,2,3 // Select mode</code>\n          </li>\n          <li>\n            Add <code>/// @text rows [max N]</code> for a text input or textarea.<br>\n            Example: <code>let notes = \"\" /// @text 3 max 120 // Notes for operator</code>\n          </li>\n          <li>\n            To add a field title/description, append <code>// Title here</code> at the end of the line.\n          </li>\n        </ul>\n        <div style=\"margin-top:8px; color:#aaa; font-size:0.93em;\">\n          Example:<br>\n          <code>let speed = 1200 /// @number 500 3000 // Spindle speed (RPM)</code>\n        </div>\n        <div style=\"margin-top:14px; color:#b0b0b0; font-size:0.97em;\">\n          <strong>How to use the Configurator:</strong><br>\n          When you add variables with configurator tags, they will appear here for easy editing.<br>\n        </div>\n      </div>\n    </div>`;\n  }\n\n  /**\n   * Render the main configurator form\n   * @param {Array} configVars - Array of configurator variables\n   * @returns {string} HTML for the form\n   * @private\n   */\n  static _renderForm(configVars) {\n    let html = `\n      <div style=\"background:#23272e; box-shadow:0 2px 16px #0002; padding:18px 18px 8px 18px; max-width:38vw; margin:0 auto;\">\n        <div style=\"font-size:1.1em; font-weight:600; color:#fff; margin-bottom:10px;\">Configurator</div>\n        <div style=\"color:#ccc; font-size:0.98em; margin-bottom:12px;\">\n          <ul style=\"margin:0 0 0 1.2em; padding:0; list-style:disc;\">\n            <li>Edit variables below before compiling.</li>\n            <li>Numbers: range-limited. Checks: on/off. Select: preset options. Text: custom input.</li>\n          </ul>\n          <div style=\"margin-top:6px; color:#aaa; font-size:0.93em;\">\n            <div>\n              <strong>Press <span style=\"color:#fff;\">Save</span></strong> to save your changes and apply them to the GGcode source.<br>\n              Or just press <strong><span style=\"color:#fff;\">Compile</span></strong> to test the results only, without updating your main GGcode.\n            </div>\n          </div>\n        </div>\n        <form id=\"configuratorForm\" style=\"display:flex; flex-direction:column; gap:16px;\">`;\n\n    for (const variable of configVars) {\n      html += this._renderFormField(variable);\n    }\n\n    html += '</form>';\n    html +=\n      '<hr style=\"border: none; border-top: 1px solid #333; margin: 18px 0 8px 0;\">';\n    html += '</div>';\n\n    return html;\n  }\n\n  /**\n   * Render a single form field based on variable type\n   * @param {Object} variable - Variable configuration\n   * @returns {string} HTML for the form field\n   * @private\n   */\n  static _renderFormField(variable) {\n    let html = `<div style=\"display:flex; align-items:center; gap:8px; padding:4px 0;\">`;\n    html += `<label style=\"color:#e0e0e0; font-weight:500; font-size:0.9em; min-width:80px; text-align:right;\">${variable.name}:</label>`;\n\n    switch (variable.type) {\n      case 'number':\n        html += this._renderNumberField(variable);\n        break;\n      case 'check':\n        html += this._renderCheckboxField(variable);\n        break;\n      case 'selection':\n        html += this._renderSelectionField(variable);\n        break;\n      case 'text':\n        html += this._renderTextField(variable);\n        break;\n      default:\n        html += `<div style=\"color:#ff6b6b;\">Unknown field type: ${variable.type}</div>`;\n    }\n\n    html += `</div>`;\n    return html;\n  }\n\n  /**\n   * Render number input field\n   * @param {Object} variable - Variable configuration\n   * @returns {string} HTML for number field\n   * @private\n   */\n  static _renderNumberField(variable) {\n    const inputStyles = `margin-left:0; width:140px; padding:6px 8px; border-radius:4px; border:1px solid #444; background:#181b20; color:#fff; font-size:0.9em; transition:border 0.2s; outline:none;`;\n    const focusBlurHandlers = `onfocus=\"this.style.borderColor='#0074D9'\" onblur=\"this.style.borderColor='#444'; if(this.value !== '' && !isNaN(this.value)) { this.value = Math.max(this.min, Math.min(this.max, this.value)); }\"`;\n\n    let numberInputHtml = `<input type=\"number\" title=\"${variable.description}\" name=\"${variable.name}\" value=\"${variable.defaultValue}\" min=\"${variable.params.min ?? ''}\" max=\"${variable.params.max ?? ''}\" style=\"${inputStyles}\" ${focusBlurHandlers}>`;\n\n    let minMaxHtml = '';\n    if (\n      variable.params.min !== undefined &&\n      variable.params.max !== undefined\n    ) {\n      minMaxHtml = ` <span style=\"color:#ffb347; font-size:0.85em; margin-left:6px;\">[${variable.params.min}-${variable.params.max}]</span>`;\n    }\n\n    return `<div style=\"display:flex; align-items:center; gap:6px; flex:1;\">${numberInputHtml}${minMaxHtml}</div>`;\n  }\n\n  /**\n   * Render checkbox field\n   * @param {Object} variable - Variable configuration\n   * @returns {string} HTML for checkbox field\n   * @private\n   */\n  static _renderCheckboxField(variable) {\n    const checked = variable.defaultValue ? 'checked' : '';\n    return `<div style=\"display:flex; align-items:center; gap:6px; flex:1;\">\n      <input title=\"${variable.description}\" type=\"checkbox\" name=\"${variable.name}\" ${checked} style=\"margin-left:0; width:18px; height:18px; accent-color:#0074D9;\">\n    </div>`;\n  }\n\n  /**\n   * Render selection dropdown field\n   * @param {Object} variable - Variable configuration\n   * @returns {string} HTML for selection field\n   * @private\n   */\n  static _renderSelectionField(variable) {\n    const selectStyles = `margin-left:0; width:160px; padding:6px 8px; border-radius:4px; border:1px solid #444; background:#181b20; color:#fff; font-size:0.9em; transition:border 0.2s; outline:none;`;\n    const focusBlurHandlers = `onfocus=\"this.style.borderColor='#0074D9'\" onblur=\"this.style.borderColor='#444'\"`;\n\n    let html = `<div style=\"display:flex; align-items:center; gap:6px; flex:1;\">\n      <select title=\"${variable.description}\" name=\"${variable.name}\" style=\"${selectStyles}\" ${focusBlurHandlers}>`;\n\n    for (const option of variable.params.options || []) {\n      const selected = option == variable.defaultValue ? ' selected' : '';\n      html += `<option value=\"${option}\"${selected}>${option}</option>`;\n    }\n\n    html += `</select></div>`;\n    return html;\n  }\n\n  /**\n   * Render text input or textarea field\n   * @param {Object} variable - Variable configuration\n   * @returns {string} HTML for text field\n   * @private\n   */\n  static _renderTextField(variable) {\n    const baseStyles = `margin-left:0; padding:6px 8px; border-radius:4px; border:1px solid #444; background:#181b20; color:#fff; font-size:0.9em; transition:border 0.2s; outline:none;`;\n    const focusBlurHandlers = `onfocus=\"this.style.borderColor='#0074D9'\" onblur=\"this.style.borderColor='#444'\"`;\n\n    if (variable.params.rows && variable.params.rows > 1) {\n      // Textarea for multi-line text\n      const textareaStyles = `${baseStyles} width:100%; min-width:160px; max-width:100%; resize:vertical;`;\n      return `<div style=\"display:flex; align-items:flex-start; gap:6px; flex:1;\">\n        <textarea title=\"${variable.description}\" name=\"${variable.name}\" rows=\"${variable.params.rows}\" maxlength=\"${variable.params.max ?? ''}\" style=\"${textareaStyles}\" ${focusBlurHandlers}>${variable.defaultValue}</textarea>\n      </div>`;\n    } else {\n      // Single-line text input\n      const inputStyles = `${baseStyles} width:100%; min-width:160px; max-width:100%;`;\n      let html = `<div style=\"display:flex; align-items:center; gap:6px; flex:1;\">\n        <input type=\"text\" title=\"${variable.description}\" name=\"${variable.name}\" value=\"${variable.defaultValue}\" maxlength=\"${variable.params.max ?? ''}\" style=\"${inputStyles}\" ${focusBlurHandlers}>`;\n\n      if (variable.params.max) {\n        html += ` <span style=\"color:#888; font-size:0.85em;\">[max ${variable.params.max}]</span>`;\n      }\n\n      html += `</div>`;\n      return html;\n    }\n  }\n\n  /**\n   * Create form validation styles\n   * @returns {string} CSS styles for form validation\n   */\n  static getValidationStyles() {\n    return `\n      .configurator-field-error {\n        border: 2px solid #ff6b6b !important;\n      }\n      .configurator-field-valid {\n        border: 1px solid #444 !important;\n      }\n      .configurator-error-message {\n        color: #ff6b6b;\n        font-size: 0.8em;\n        margin-top: 2px;\n      }\n    `;\n  }\n\n  /**\n   * Render validation error message\n   * @param {string} message - Error message\n   * @returns {string} HTML for error message\n   */\n  static renderErrorMessage(message) {\n    return `<div class=\"configurator-error-message\">${message}</div>`;\n  }\n\n  /**\n   * Render success message\n   * @param {string} message - Success message\n   * @returns {string} HTML for success message\n   */\n  static renderSuccessMessage(message) {\n    return `<div style=\"color:#51cf66; font-size:0.9em; padding:8px; background:#1a4d3a; border-radius:4px; margin:8px 0;\">\n      ${message}\n    </div>`;\n  }\n\n  /**\n   * Render loading indicator\n   * @param {string} message - Loading message\n   * @returns {string} HTML for loading indicator\n   */\n  static renderLoadingIndicator(message = 'Loading...') {\n    return `<div style=\"color:#aaa; padding:2em; text-align:center;\">\n      <div style=\"font-size:1.1em; margin-bottom:10px;\">${message}</div>\n      <div style=\"width:20px; height:20px; border:2px solid #444; border-top:2px solid #0074D9; border-radius:50%; animation:spin 1s linear infinite; margin:0 auto;\"></div>\n    </div>`;\n  }\n\n  /**\n   * Get CSS animations for the configurator\n   * @returns {string} CSS animation styles\n   */\n  static getAnimationStyles() {\n    return `\n      @keyframes spin {\n        0% { transform: rotate(0deg); }\n        100% { transform: rotate(360deg); }\n      }\n      .configurator-fade-in {\n        animation: fadeIn 0.3s ease-in;\n      }\n      @keyframes fadeIn {\n        from { opacity: 0; }\n        to { opacity: 1; }\n      }\n    `;\n  }\n}\n\nexport default ConfiguratorRenderer;\n","/**\n * Configurator Form Validator\n * Handles validation of configurator form inputs and values\n */\n\nclass ConfiguratorValidator {\n  /**\n   * Validate entire configurator form\n   * @param {HTMLFormElement} form - Form element to validate\n   * @param {Array} configVars - Array of configurator variables\n   * @returns {Object} Validation result with isValid flag and errors\n   */\n  static validateForm(form, configVars) {\n    const result = {\n      isValid: true,\n      errors: {},\n      values: {},\n    };\n\n    if (!form || !configVars) {\n      result.isValid = false;\n      result.errors.general = 'Form or configuration variables not provided';\n      return result;\n    }\n\n    // Create a map for quick variable lookup\n    const varMap = {};\n    for (const variable of configVars) {\n      varMap[variable.name] = variable;\n    }\n\n    // Validate each form element\n    for (const element of form.elements) {\n      if (!element.name) continue;\n\n      const variable = varMap[element.name];\n      if (!variable) continue;\n\n      const value = this._getElementValue(element);\n      const validation = this.validateVariableValue(variable, value);\n\n      result.values[element.name] = value;\n\n      if (!validation.isValid) {\n        result.isValid = false;\n        result.errors[element.name] = validation.error;\n        this._markElementAsInvalid(element, validation.error);\n      } else {\n        this._markElementAsValid(element);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n   * Validate a single variable value against its constraints\n   * @param {Object} variable - Variable definition\n   * @param {*} value - Value to validate\n   * @returns {Object} Validation result with isValid and error message\n   */\n  static validateVariableValue(variable, value) {\n    const result = { isValid: true, error: null };\n\n    if (!variable) {\n      result.isValid = false;\n      result.error = 'Variable definition not found';\n      return result;\n    }\n\n    switch (variable.type) {\n      case 'number':\n        return this._validateNumberValue(variable, value);\n      case 'text':\n        return this._validateTextValue(variable, value);\n      case 'selection':\n        return this._validateSelectionValue(variable, value);\n      case 'check':\n        return this._validateCheckValue(variable, value);\n      default:\n        result.isValid = false;\n        result.error = `Unknown variable type: ${variable.type}`;\n    }\n\n    return result;\n  }\n\n  /**\n   * Validate number value\n   * @param {Object} variable - Variable definition\n   * @param {*} value - Value to validate\n   * @returns {Object} Validation result\n   * @private\n   */\n  static _validateNumberValue(variable, value) {\n    const result = { isValid: true, error: null };\n\n    // Convert to number\n    const numValue = parseFloat(value);\n\n    if (isNaN(numValue)) {\n      result.isValid = false;\n      result.error = 'Must be a valid number';\n      return result;\n    }\n\n    // Check minimum value\n    if (variable.params.min !== undefined && numValue < variable.params.min) {\n      result.isValid = false;\n      result.error = `Must be at least ${variable.params.min}`;\n      return result;\n    }\n\n    // Check maximum value\n    if (variable.params.max !== undefined && numValue > variable.params.max) {\n      result.isValid = false;\n      result.error = `Must be at most ${variable.params.max}`;\n      return result;\n    }\n\n    return result;\n  }\n\n  /**\n   * Validate text value\n   * @param {Object} variable - Variable definition\n   * @param {*} value - Value to validate\n   * @returns {Object} Validation result\n   * @private\n   */\n  static _validateTextValue(variable, value) {\n    const result = { isValid: true, error: null };\n\n    const stringValue = String(value);\n\n    // Check maximum length\n    if (variable.params.max && stringValue.length > variable.params.max) {\n      result.isValid = false;\n      result.error = `Must be at most ${variable.params.max} characters`;\n      return result;\n    }\n\n    return result;\n  }\n\n  /**\n   * Validate selection value\n   * @param {Object} variable - Variable definition\n   * @param {*} value - Value to validate\n   * @returns {Object} Validation result\n   * @private\n   */\n  static _validateSelectionValue(variable, value) {\n    const result = { isValid: true, error: null };\n\n    if (\n      variable.params.options &&\n      !variable.params.options.includes(String(value))\n    ) {\n      result.isValid = false;\n      result.error = 'Must be one of the available options';\n      return result;\n    }\n\n    return result;\n  }\n\n  /**\n   * Validate checkbox value\n   * @param {Object} variable - Variable definition\n   * @param {*} value - Value to validate\n   * @returns {Object} Validation result\n   * @private\n   */\n  static _validateCheckValue(_variable, _value) {\n    // Boolean values are always valid\n    return { isValid: true, error: null };\n  }\n\n  /**\n   * Get value from form element based on its type\n   * @param {HTMLElement} element - Form element\n   * @returns {*} Element value\n   * @private\n   */\n  static _getElementValue(element) {\n    if (element.type === 'checkbox') {\n      return element.checked;\n    }\n    return element.value;\n  }\n\n  /**\n   * Mark form element as invalid\n   * @param {HTMLElement} element - Form element\n   * @param {string} errorMessage - Error message\n   * @private\n   */\n  static _markElementAsInvalid(element, errorMessage) {\n    element.classList.remove('configurator-field-valid');\n    element.classList.add('configurator-field-error');\n    element.style.border = '2px solid #ff6b6b';\n\n    // Add or update error message\n    this._updateErrorMessage(element, errorMessage);\n  }\n\n  /**\n   * Mark form element as valid\n   * @param {HTMLElement} element - Form element\n   * @private\n   */\n  static _markElementAsValid(element) {\n    element.classList.remove('configurator-field-error');\n    element.classList.add('configurator-field-valid');\n    element.style.border = '1px solid #444';\n\n    // Remove error message\n    this._removeErrorMessage(element);\n  }\n\n  /**\n   * Update error message for form element\n   * @param {HTMLElement} element - Form element\n   * @param {string} message - Error message\n   * @private\n   */\n  static _updateErrorMessage(element, message) {\n    const errorId = `error-${element.name}`;\n    let errorElement = document.getElementById(errorId);\n\n    if (!errorElement) {\n      errorElement = document.createElement('div');\n      errorElement.id = errorId;\n      errorElement.className = 'configurator-error-message';\n      errorElement.style.cssText =\n        'color:#ff6b6b; font-size:0.8em; margin-top:2px;';\n\n      // Insert after the element's parent container\n      const container = element.closest('div');\n      if (container && container.parentNode) {\n        container.parentNode.insertBefore(errorElement, container.nextSibling);\n      }\n    }\n\n    errorElement.textContent = message;\n  }\n\n  /**\n   * Remove error message for form element\n   * @param {HTMLElement} element - Form element\n   * @private\n   */\n  static _removeErrorMessage(element) {\n    const errorId = `error-${element.name}`;\n    const errorElement = document.getElementById(errorId);\n    if (errorElement) {\n      errorElement.remove();\n    }\n  }\n\n  /**\n   * Validate form in real-time as user types\n   * @param {HTMLFormElement} form - Form element\n   * @param {Array} configVars - Array of configurator variables\n   */\n  static setupRealTimeValidation(form, configVars) {\n    if (!form || !configVars) return;\n\n    // Create a map for quick variable lookup\n    const varMap = {};\n    for (const variable of configVars) {\n      varMap[variable.name] = variable;\n    }\n\n    // Add event listeners to form elements\n    for (const element of form.elements) {\n      if (!element.name) continue;\n\n      const variable = varMap[element.name];\n      if (!variable) continue;\n\n      // Add input event listener for real-time validation\n      element.addEventListener('input', () => {\n        const value = this._getElementValue(element);\n        const validation = this.validateVariableValue(variable, value);\n\n        if (!validation.isValid) {\n          this._markElementAsInvalid(element, validation.error);\n        } else {\n          this._markElementAsValid(element);\n        }\n      });\n\n      // Add blur event listener for final validation\n      element.addEventListener('blur', () => {\n        const value = this._getElementValue(element);\n        const validation = this.validateVariableValue(variable, value);\n\n        if (!validation.isValid) {\n          this._markElementAsInvalid(element, validation.error);\n        } else {\n          this._markElementAsValid(element);\n        }\n      });\n\n      // Special handling for number inputs\n      if (element.type === 'number' && variable.type === 'number') {\n        element.addEventListener('blur', () => {\n          const value = parseFloat(element.value);\n          if (!isNaN(value)) {\n            // Clamp value to min/max range\n            const min =\n              variable.params.min !== undefined\n                ? variable.params.min\n                : -Infinity;\n            const max =\n              variable.params.max !== undefined\n                ? variable.params.max\n                : Infinity;\n            const clampedValue = Math.max(min, Math.min(max, value));\n\n            if (clampedValue !== value) {\n              element.value = clampedValue;\n            }\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * Clear all validation states from form\n   * @param {HTMLFormElement} form - Form element\n   */\n  static clearValidationStates(form) {\n    if (!form) return;\n\n    for (const element of form.elements) {\n      if (!element.name) continue;\n\n      element.classList.remove(\n        'configurator-field-error',\n        'configurator-field-valid'\n      );\n      element.style.border = '';\n      this._removeErrorMessage(element);\n    }\n  }\n\n  /**\n   * Get form values with type conversion\n   * @param {HTMLFormElement} form - Form element\n   * @param {Array} configVars - Array of configurator variables\n   * @returns {Object} Form values with proper types\n   */\n  static getFormValues(form, configVars) {\n    const values = {};\n\n    if (!form || !configVars) return values;\n\n    // Create a map for quick variable lookup\n    const varMap = {};\n    for (const variable of configVars) {\n      varMap[variable.name] = variable;\n    }\n\n    for (const element of form.elements) {\n      if (!element.name) continue;\n\n      const variable = varMap[element.name];\n      const rawValue = this._getElementValue(element);\n\n      if (variable) {\n        // Convert value based on variable type\n        switch (variable.type) {\n          case 'number':\n            values[element.name] = parseFloat(rawValue);\n            break;\n          case 'check':\n            values[element.name] = rawValue ? 1 : 0;\n            break;\n          default:\n            values[element.name] = rawValue;\n        }\n      } else {\n        values[element.name] = rawValue;\n      }\n    }\n\n    return values;\n  }\n}\n\nexport default ConfiguratorValidator;\n","/**\n * Application Manager Module\n * Coordinates all application modules and provides the main entry point\n */\n\nimport MonacoEditorManager from '../editor/monaco.js';\nimport GcodeAnnotationSystem from '../editor/annotations.js';\nimport ConfiguratorManager from '../configurator/index.js';\nimport * as VisualizerModules from '../visualizer/index.js';\nimport NavigationManager from '../ui/navigation.js';\nimport aiManager from '../ui/aiManager.js';\nimport aiCommands from '../ui/aiCommands.js';\nimport HelpSystem from '../ui/helpSystem.js';\nimport ExampleManager from '../ui/exampleManager.js';\nimport FileOperationsManager from '../ui/fileOperations.js';\nimport CompilationSystem from './compilationSystem.js';\nimport ModalManagerWrapper from '../ui/modalManager.js';\nimport ConfiguratorSystem from '../config/configuratorSystem.js';\nimport storageManager from '../utils/storageManager.js';\n\nclass ApplicationManager {\n    constructor() {\n        this.editorManager = null;\n        this.annotationSystem = null;\n        this.configuratorManager = null;\n        this.visualizerModules = null;\n        this.navigationManager = null;\n        this.helpSystem = null;\n        this.exampleManager = null;\n        this.fileOperationsManager = null;\n        this.compilationSystem = null;\n        this.modalManager = null;\n        this.configuratorSystem = null;\n\n        // Legacy global variables for backward compatibility\n        this.monacoReady = false;\n        this.lastOpenedFilename = '';\n\n        // Track monaco ready state for deferred setting on CompilationSystem\n        this.pendingMonacoReady = false;\n    }\n\n    /**\n     * Initialize all application modules\n     */\n    async initializeApplication() {\n        // Initialize managers\n        this.editorManager = new MonacoEditorManager();\n        this.annotationSystem = new GcodeAnnotationSystem();\n        this.configuratorManager = new ConfiguratorManager();\n        this.visualizerModules = VisualizerModules;\n        this.navigationManager = new NavigationManager();\n\n        // Initialize UI managers\n        this.modalManager = new ModalManagerWrapper();\n        this.helpSystem = null; // Will be initialized when API manager is set\n        this.exampleManager = null; // Will be initialized when API manager is set\n        this.fileOperationsManager = new FileOperationsManager();\n        this.compilationSystem = null; // Will be initialized when API manager is set\n        this.configuratorSystem = new ConfiguratorSystem(this.configuratorManager, this.editorManager);\n\n        // Initialize AI modules\n        aiManager.initialize();\n\n        // Make managers globally available for the functions\n        this.makeManagersGloballyAvailable();\n\n        // Load saved filename\n        this.lastOpenedFilename = storageManager.getLastFilename();\n\n        // Initialize annotation system\n        await this.annotationSystem.initialize();\n\n        // Initialize configurator\n        this.configuratorSystem.initialize({\n            modalId: 'configuratorModal',\n            contentId: 'configuratorContent',\n        });\n\n        // Initialize Monaco editor\n        await this.initializeMonacoEditor();\n\n        // Setup auto-compile checkbox\n        this.setupAutoCompileCheckbox();\n\n        // Setup file operations\n        this.setupFileOperations();\n    }\n\n    /**\n     * Initialize Monaco editor with modular approach\n     */\n    async initializeMonacoEditor() {\n        // Load saved content\n        const initialInput = storageManager.getInputContent();\n        const initialOutput = storageManager.getOutputContent();\n\n        await this.editorManager.initialize({\n            inputContainerId: 'editor',\n            outputContainerId: 'output',\n            initialInput: initialInput,\n            initialOutput: initialOutput,\n            onCompile: (event, customCode) => {\n                if (this.compilationSystem) {\n                    return this.compilationSystem.submitGGcode(event, customCode);\n                } else {\n                    console.warn('CompilationSystem not available for compile callback');\n                    return false;\n                }\n            },\n            onAnnotationUpdate: (lineNumber, lineContent) => this.updateAnnotations(lineNumber, lineContent),\n        });\n\n        // Set up backward compatibility\n        const editors = this.editorManager.getEditors();\n        window.outputEditor = editors.output;\n        window.editor = editors.input;\n\n        this.monacoReady = true;\n        if (this.compilationSystem) {\n            this.compilationSystem.setMonacoReady(true);\n        } else {\n            this.pendingMonacoReady = true;\n        }\n\n        // Load auto-compile state\n        this.editorManager.loadAutoCompileState();\n\n        // Load last opened filename\n        this.lastOpenedFilename = this.editorManager.loadLastOpenedFilename();\n\n        // Setup auto-save\n        this.editorManager.setupAutoSave();\n    }\n\n    /**\n     * Setup auto-compile checkbox functionality\n     */\n    setupAutoCompileCheckbox() {\n        const autoCheckbox = document.getElementById('autoCompileCheckbox');\n        if (autoCheckbox) {\n            autoCheckbox.checked = this.editorManager ? this.editorManager.loadAutoCompileState() : false;\n\n            autoCheckbox.addEventListener('change', (e) => {\n                if (this.editorManager) {\n                    this.editorManager.setAutoCompile(e.target.checked);\n                }\n            });\n        }\n    }\n\n    /**\n     * Setup file operations\n     */\n    setupFileOperations() {\n        const openBtn = document.getElementById('openGGcodeBtn');\n        const fileInput = document.getElementById('ggcodeFileInput');\n\n        if (openBtn && fileInput) {\n            openBtn.addEventListener('click', () => {\n                fileInput.value = '';\n                fileInput.click();\n            });\n\n            fileInput.addEventListener('change', (e) => {\n                const file = e.target.files[0];\n                if (!file) return;\n\n                const reader = new FileReader();\n                reader.onload = (evt) => {\n                    if (this.editorManager) {\n                        this.editorManager.setInputValue(evt.target.result);\n                        this.editorManager.setLastOpenedFilename(file.name || '');\n                        this.lastOpenedFilename = file.name || '';\n                        if (this.compilationSystem) {\n                            this.compilationSystem.submitGGcode(new Event('submit'));\n                        } else {\n                            // Fallback to global submitGGcode if compilationSystem not ready\n                            if (window.submitGGcode) {\n                                window.submitGGcode(new Event('submit'));\n                            }\n                        }\n                    }\n                };\n                reader.readAsText(file);\n            });\n        }\n    }\n\n    /**\n     * Update annotations\n     */\n    updateAnnotations(lineNumber, lineContent) {\n        if (this.annotationSystem) {\n            const editors = this.editorManager\n                ? this.editorManager.getEditors()\n                : { output: window.outputEditor };\n            this.annotationSystem.updateAnnotations(lineNumber, lineContent, editors.output);\n        }\n    }\n\n    /**\n     * Make managers globally available for backward compatibility\n     */\n    makeManagersGloballyAvailable() {\n        window.editorManager = this.editorManager;\n        window.apiManager = {}; // This should be passed from main.js\n        window.configuratorManager = this.configuratorManager;\n        window.visualizerModules = this.visualizerModules;\n        window.navigationManager = this.navigationManager;\n        window.aiManager = aiManager;\n        window.aiCommands = aiCommands;\n    }\n\n    /**\n     * Set API manager reference\n     */\n    setApiManager(apiManager) {\n        this.apiManager = apiManager;\n\n        // Initialize modules that depend on API manager\n        this.helpSystem = new HelpSystem(apiManager);\n        this.exampleManager = new ExampleManager(apiManager, this.editorManager);\n        this.compilationSystem = new CompilationSystem(apiManager, this.editorManager, this.annotationSystem);\n        this.configuratorSystem = new ConfiguratorSystem(this.configuratorManager, this.editorManager);\n\n        // Apply any pending monaco ready state to newly initialized CompilationSystem\n        if (this.pendingMonacoReady && this.compilationSystem) {\n            console.log('Applying pending monaco ready state to CompilationSystem');\n            this.compilationSystem.setMonacoReady(true);\n            this.pendingMonacoReady = false;\n        }\n\n        // Update global reference\n        window.apiManager = apiManager;\n    }\n\n    /**\n     * Getters for external access\n     */\n    getEditorManager() { return this.editorManager; }\n    getAnnotationSystem() { return this.annotationSystem; }\n    getConfiguratorManager() { return this.configuratorManager; }\n    getHelpSystem() {\n        if (!this.helpSystem && this.apiManager) {\n            this.helpSystem = new HelpSystem(this.apiManager);\n        }\n        return this.helpSystem;\n    }\n    getExampleManager() {\n        if (!this.exampleManager && this.apiManager && this.editorManager) {\n            this.exampleManager = new ExampleManager(this.apiManager, this.editorManager);\n        }\n        return this.exampleManager;\n    }\n    getFileOperationsManager() { return this.fileOperationsManager; }\n    getCompilationSystem() {\n        if (!this.compilationSystem && this.apiManager && this.editorManager && this.annotationSystem) {\n            this.compilationSystem = new CompilationSystem(this.apiManager, this.editorManager, this.annotationSystem);\n        }\n        return this.compilationSystem;\n    }\n    getModalManager() { return this.modalManager; }\n    getConfiguratorSystem() { return this.configuratorSystem; }\n}\n\nexport default ApplicationManager;","/**\n * Compilation System Module\n * Handles GGcode compilation and loading indicators\n */\n\nclass CompilationSystem {\n    constructor(apiManager, editorManager, annotationSystem) {\n        this.apiManager = apiManager;\n        this.editorManager = editorManager;\n        this.annotationSystem = annotationSystem;\n        this.monacoReady = false;\n    }\n\n    /**\n     * Set Monaco ready state\n     */\n    setMonacoReady(ready) {\n        this.monacoReady = ready;\n        console.log('CompilationSystem: Monaco ready state set to:', ready);\n    }\n\n    /**\n     * Submit GGcode for compilation\n     */\n    async submitGGcode(event, customCode = null) {\n        if (event) event.preventDefault();\n\n        this.syncEditors();\n        const code = customCode || this.editorManager.getInputValue();\n\n        if (this.editorManager) {\n            this.editorManager.setOutputValue('Compiling...');\n        }\n\n        try {\n            const result = await this.apiManager.compiler.compile(code);\n\n            if (result.success) {\n                if (this.editorManager) {\n                    this.editorManager.setOutputValue(result.output);\n\n                    // Reset annotation modal state when new G-code is loaded\n                    if (this.annotationSystem) {\n                        this.annotationSystem.resetModalState();\n                    }\n\n                    // Trigger annotation for first line if content exists\n                    if (result.output.trim()) {\n                        const editors = this.editorManager.getEditors();\n                        if (editors.output) {\n                            const firstLineContent = editors.output\n                                .getModel()\n                                .getLineContent(1);\n                            if (window.updateAnnotations) {\n                                window.updateAnnotations(1, firstLineContent);\n                            }\n                        }\n                    }\n                }\n                if (window.saveContent) {\n                    window.saveContent();\n                }\n            } else {\n                if (this.editorManager) {\n                    this.editorManager.setOutputValue('Error: ' + result.error);\n                }\n            }\n        } catch (err) {\n            if (this.editorManager) {\n                this.editorManager.setOutputValue('Network error: ' + err.message);\n            }\n        }\n        return false;\n    }\n\n    /**\n     * Sync editors (legacy function for backward compatibility)\n     */\n    syncEditors() {\n        if (this.editorManager) {\n            const ggcodeElement = document.getElementById('ggcode');\n            if (ggcodeElement) {\n                ggcodeElement.value = this.editorManager.getInputValue();\n            }\n        }\n    }\n\n    /**\n     * Show/hide compile loading indicator\n     */\n    showCompileLoadingIndicator(show) {\n        // Create or find compile loading indicator element\n        let compileIndicator = document.getElementById('compileLoadingIndicator');\n\n        if (show) {\n            if (!compileIndicator) {\n                // Create compile loading indicator if it doesn't exist\n                compileIndicator = document.createElement('div');\n                compileIndicator.id = 'compileLoadingIndicator';\n                compileIndicator.style.cssText = `\n                    position: fixed;\n                    top: 50%;\n                    left: 50%;\n                    transform: translate(-50%, -50%);\n                    background: rgba(0, 0, 0, 0.9);\n                    color: white;\n                    padding: 20px 30px;\n                    border-radius: 10px;\n                    font-family: monospace;\n                    font-size: 14px;\n                    text-align: center;\n                    z-index: 1000;\n                    border: 2px solid #007acc;\n                    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.5);\n                    min-width: 200px;\n                `;\n\n                // Add loading animation\n                compileIndicator.innerHTML = `\n                    <div style=\"margin-bottom: 10px; font-weight: bold;\">Compiling GGcode...</div>\n                    <div style=\"display: inline-block; width: 20px; height: 20px; border: 3px solid #ffffff; border-radius: 50%; border-top-color: #007acc; animation: spin 1s ease-in-out infinite; margin: 0 auto;\"></div>\n                    <div id=\"compileStatus\" style=\"margin-top: 10px; font-size: 12px; color: #ccc;\">Processing...</div>\n                    <style>\n                        @keyframes spin {\n                            to { transform: rotate(360deg); }\n                        }\n                    </style>\n                `;\n\n                document.body.appendChild(compileIndicator);\n            }\n            compileIndicator.style.display = 'block';\n            //console.log('Showing compile loading indicator');\n        } else {\n            if (compileIndicator) {\n                compileIndicator.style.display = 'none';\n                // Remove after fade out\n                setTimeout(() => {\n                    if (compileIndicator.parentNode) {\n                        compileIndicator.parentNode.removeChild(compileIndicator);\n                    }\n                }, 300);\n            }\n            //console.log('Hiding compile loading indicator');\n        }\n    }\n}\n\nexport default CompilationSystem;","/**\n * G-code Annotation System\n * Handles parsing and generation of G-code annotations and modal state tracking\n */\n\nclass GcodeAnnotationSystem {\n  constructor() {\n    this.millDictionary = {};\n    this.millAnnotations = {};\n    this.annotationsLoaded = false;\n    this.lastGCommand = null;\n  }\n\n  /**\n   * Initialize the annotation system by loading dictionaries\n   */\n  async initialize() {\n    await this.loadGcodeDictionaries();\n  }\n\n  /**\n   * Load G-code dictionaries from server\n   */\n  async loadGcodeDictionaries() {\n    try {\n      const [dictResponse, annotResponse] = await Promise.all([\n        fetch('/mill-dictionary.json'),\n        fetch('/mill-annotations.json'),\n      ]);\n\n      if (dictResponse.ok && annotResponse.ok) {\n        this.millDictionary = await dictResponse.json();\n        this.millAnnotations = await annotResponse.json();\n        this.annotationsLoaded = true;\n        //console.log('G-code dictionaries loaded successfully');\n      } else {\n        console.error('Failed to load G-code dictionaries');\n      }\n    } catch (error) {\n      console.error('Error loading G-code dictionaries:', error);\n    }\n  }\n\n  /**\n   * Check if a command is a motion command\n   * @param {string} cmd - Command to check\n   * @returns {boolean} True if motion command\n   */\n  isMotionCmd(cmd) {\n    return /^G(?:0|1|2|3|33|38\\.2|38\\.3|38\\.4|38\\.5|80|81|82|83|85|86|89)$/i.test(\n      cmd\n    );\n  }\n\n  /**\n   * Check if parameters contain motion-relevant coordinates\n   * @param {Object} params - Parameters object\n   * @returns {boolean} True if has motion coordinates\n   */\n  hasMotionCoords(params) {\n    for (const k of Object.keys(params)) {\n      if (/[XYZIJKRABCUVW]/.test(k)) return true;\n    }\n    return false;\n  }\n\n  /**\n   * Get all G-code lines from editor\n   * @param {Object} outputEditor - Monaco output editor instance\n   * @returns {Array} Array of G-code lines\n   */\n  getAllGcodeLines(outputEditor) {\n    if (outputEditor && typeof outputEditor.getValue === 'function') {\n      return outputEditor.getValue().split(/\\r?\\n/);\n    }\n    const out = document.getElementById('output');\n    return out ? out.textContent.split(/\\r?\\n/) : [];\n  }\n\n  /**\n   * Find last motion G command before a given line number\n   * @param {number} lineNumber - 1-based line number\n   * @param {Object} outputEditor - Monaco output editor instance\n   * @returns {Object} Object with cmd and line properties\n   */\n  findPreviousMotion(lineNumber, outputEditor) {\n    const lines = this.getAllGcodeLines(outputEditor);\n    const targetIdx = Math.max(0, (lineNumber | 0) - 2);\n\n    for (let i = targetIdx; i >= 0; i--) {\n      const parsed = this.parseGcodeLine(lines[i]);\n      if (!parsed || !parsed.commands || !parsed.commands.length) continue;\n\n      const motions = parsed.commands.filter((cmd) => this.isMotionCmd(cmd));\n      if (motions.length) {\n        return { cmd: motions[motions.length - 1], line: i + 1 };\n      }\n    }\n\n    return { cmd: null, line: null };\n  }\n\n  /**\n   * Parse a G-code line to extract commands and parameters\n   * @param {string} line - G-code line to parse\n   * @returns {Object|null} Parsed line object or null\n   */\n  parseGcodeLine(line) {\n    if (!line || typeof line !== 'string') return null;\n\n    // Remove comments and trim\n    const cleanLine = line.split('//')[0].split('(')[0].trim();\n    if (!cleanLine) return null;\n\n    // Extract ALL commands (G, M codes) from the line\n    const commandMatches = cleanLine.matchAll(/([GM])(\\d+)/gi);\n    const commands = [];\n    const commandsUsed = new Set();\n\n    for (const match of commandMatches) {\n      const cmd = (match[1] + match[2]).toUpperCase();\n      commands.push(cmd);\n      commandsUsed.add(match[0].toUpperCase());\n    }\n\n    // Update last G command if this line has any G commands\n    const gCommands = commands.filter((cmd) => cmd.startsWith('G'));\n\n    // Handle modal behavior - if no commands but has motion coordinates, use last G command\n    let primaryCommand = null;\n    if (commands.length > 0) {\n      primaryCommand =\n        gCommands.length > 0 ? gCommands[gCommands.length - 1] : commands[0];\n    } else if (cleanLine.match(/[XYZ]/i)) {\n      primaryCommand = this.lastGCommand;\n    }\n\n    // Extract all parameters (letter followed by number/value, including negative)\n    const paramMatches = cleanLine.matchAll(/([A-Z])([+-]?\\d*\\.?\\d+)/gi);\n    const parameters = {};\n\n    for (const match of paramMatches) {\n      const letter = match[1].toUpperCase();\n      const value = match[2];\n      const fullMatch = match[0].toUpperCase();\n\n      // Skip if this is part of a command (like G1, M3)\n      if (!commandsUsed.has(fullMatch)) {\n        parameters[letter] = value;\n      }\n    }\n\n    return {\n      original: line,\n      commands: commands,\n      primaryCommand: primaryCommand,\n      parameters: parameters,\n      cleanLine: cleanLine,\n      isModal: commands.length === 0 && primaryCommand,\n      hasParams: Object.keys(parameters).length > 0,\n      hasMultipleCommands: commands.length > 1,\n    };\n  }\n\n  /**\n   * Generate enhanced annotation for G-code line\n   * @param {number} lineNumber - Line number (1-based)\n   * @param {string} lineContent - Content of the line\n   * @param {Object} outputEditor - Monaco output editor instance\n   * @returns {string} HTML annotation\n   */\n  generateAnnotation(lineNumber, lineContent, outputEditor = null) {\n    if (!this.annotationsLoaded) {\n      return `<div class=\"annotation-loading\">Loading G-code dictionaries...</div>`;\n    }\n\n    const parsed = this.parseGcodeLine(lineContent);\n\n    // Check if parsing failed first\n    if (!parsed) {\n      return `<div class=\"annotation-simple\">\n        <strong>Line ${lineNumber}:</strong> ${lineContent || '(empty line)'}\n        <br><em>No G-code content detected</em>\n      </div>`;\n    }\n\n    // If line has coords but no explicit G, find implied motion from above\n    let implied = null;\n    if (!parsed.primaryCommand && parsed.parameters && this.hasMotionCoords(parsed.parameters)) {\n      const prev = this.findPreviousMotion(lineNumber, outputEditor);\n      if (prev.cmd) {\n        parsed.primaryCommand = prev.cmd.toUpperCase();\n        parsed.isModal = true;\n        implied = prev;\n      }\n    }\n\n    if (\n      !parsed.primaryCommand &&\n      !parsed.hasParams &&\n      (!parsed.commands || parsed.commands.length === 0)\n    ) {\n      return `<div class=\"annotation-simple\">\n        <strong>Line ${lineNumber}:</strong> ${lineContent}\n        <br><em>No G-code command or parameters detected</em>\n      </div>`;\n    }\n\n    let annotation = '';\n\n    // Build annotation header\n    annotation += `<div class=\"annotation-header\">`;\n    annotation += `<strong>Line ${lineNumber}:</strong> `;\n\n    if (parsed.commands.length > 0) {\n      if (parsed.hasMultipleCommands) {\n        annotation += `Multiple Commands (${parsed.commands.length})`;\n        if (parsed.isModal) {\n          annotation += ` <span class=\"modal-indicator\">(Modal)</span>`;\n        }\n      } else {\n        // Single command\n        const cmd = parsed.primaryCommand || parsed.commands[0];\n        let cmdDesc = '';\n        if (cmd) {\n          if (this.millDictionary[cmd]) {\n            cmdDesc =\n              typeof this.millDictionary[cmd] === 'string'\n                ? this.millDictionary[cmd]\n                : this.millDictionary[cmd].desc || '';\n          } else if (this.millAnnotations[cmd]) {\n            cmdDesc = this.millAnnotations[cmd];\n          }\n        }\n        annotation += `${cmd || 'Unknown'} - ${cmdDesc || 'Unknown command'}`;\n\n        if (parsed.isModal) {\n          annotation += ` <span class=\"modal-indicator\">(Implied</span>`;\n          if (implied && implied.line != null) {\n            annotation += ` <span class=\"modal-indicator\">from line ${implied.line}</span>`;\n          }\n          annotation += `<span class=\"modal-indicator\">)</span>`;\n        }\n      }\n    } else {\n      if (parsed.primaryCommand) {\n        annotation += `Implied ${parsed.primaryCommand}`;\n        if (implied && implied.line != null) {\n          annotation += ` <span class=\"modal-indicator\">(from line ${implied.line})</span>`;\n        } else {\n          annotation += ` <span class=\"modal-indicator\">(modal)</span>`;\n        }\n      } else {\n        annotation += `Parameters only`;\n        if (parsed.hasParams) {\n          annotation += ` <span class=\"modal-indicator\">(no prior motion found)</span>`;\n        }\n      }\n    }\n\n    annotation += `</div>`;\n\n    // Add command details for multiple commands\n    if (parsed.hasMultipleCommands) {\n      annotation += `<div class=\"annotation-commands\">`;\n      for (const cmd of parsed.commands) {\n        let cmdDesc = '';\n        if (this.millDictionary[cmd]) {\n          if (typeof this.millDictionary[cmd] === 'string') {\n            cmdDesc = this.millDictionary[cmd];\n          } else if (this.millDictionary[cmd].desc) {\n            cmdDesc = this.millDictionary[cmd].desc;\n          }\n        } else if (this.millAnnotations[cmd]) {\n          cmdDesc = this.millAnnotations[cmd];\n        }\n        annotation += `<div class=\"annotation-command\">`;\n        annotation += `<span class=\"command-name\">${cmd}:</span> `;\n        annotation += `<span class=\"command-desc\">${cmdDesc || 'Unknown command'}</span>`;\n        annotation += `</div>`;\n      }\n      annotation += `</div>`;\n    }\n\n    // Add parameter details\n    if (Object.keys(parsed.parameters).length > 0) {\n      annotation += `<div class=\"annotation-params\">`;\n\n      for (const [param, value] of Object.entries(parsed.parameters)) {\n        let paramDesc = `${param}-Axis Motion`;\n\n        // Get parameter description from dictionary\n        if (\n          parsed.primaryCommand &&\n          this.millDictionary[parsed.primaryCommand] &&\n          this.millDictionary[parsed.primaryCommand].sub &&\n          this.millDictionary[parsed.primaryCommand].sub[param]\n        ) {\n          paramDesc = this.millDictionary[parsed.primaryCommand].sub[param];\n        } else if (this.millDictionary[param]) {\n          paramDesc =\n            typeof this.millDictionary[param] === 'string'\n              ? this.millDictionary[param]\n              : this.millDictionary[param].desc || paramDesc;\n        }\n\n        annotation += `<div class=\"annotation-param\">`;\n        annotation += `<span class=\"param-name\">${paramDesc}:</span> `;\n        annotation += `<span class=\"param-value\">${value}</span>`;\n        annotation += `</div>`;\n      }\n\n      annotation += `</div>`;\n    }\n\n    // Add raw line for reference\n    annotation += `<div class=\"annotation-raw\">`;\n    annotation += `<em>Raw: ${lineContent}</em>`;\n    annotation += `</div>`;\n\n    return annotation;\n  }\n\n  /**\n   * Update annotations display\n   * @param {number} lineNumber - Line number (1-based)\n   * @param {string} lineContent - Content of the line\n   * @param {Object} outputEditor - Monaco output editor instance\n   */\n  updateAnnotations(lineNumber, lineContent, outputEditor = null) {\n    const annotationsDiv = document.getElementById('annotations');\n    if (!annotationsDiv) return;\n\n    const annotation = this.generateAnnotation(\n      lineNumber,\n      lineContent,\n      outputEditor\n    );\n    annotationsDiv.innerHTML = annotation;\n  }\n\n  /**\n   * Reset modal state (call when new G-code is loaded)\n   */\n  resetModalState() {\n    this.lastGCommand = null;\n  }\n\n  /**\n   * Get current modal state\n   * @returns {Object} Current modal state\n   */\n  getModalState() {\n    return {\n      lastGCommand: this.lastGCommand,\n    };\n  }\n\n  /**\n   * Set modal state\n   * @param {Object} state - Modal state to set\n   */\n  setModalState(state) {\n    if (state.lastGCommand !== undefined) {\n      this.lastGCommand = state.lastGCommand;\n    }\n  }\n}\n\nexport default GcodeAnnotationSystem;\n","/**\n * Monaco Editor Manager\n * Handles Monaco editor initialization, configuration, and management\n */\n\nimport storageManager from '../utils/storageManager.js';\nimport themeManager from './themes.js';\nimport settingsManager from './settings.js';\n\nclass MonacoEditorManager {\n  constructor() {\n    this.editor = null;\n    this.outputEditor = null;\n    this.monacoReady = false;\n    this.autoCompile = false;\n    this.autoCompileTimeout = null;\n    this.lastOpenedFilename = '';\n    this.skipAutoCompile = false;\n\n    // User-defined function support\n    this.userFunctions = new Map();\n    this.functionParseTimeout = null;\n    this.userFunctionCache = {};\n\n    // Completion data from external JSON files\n    this.completionData = {\n      keywords: null,\n      functions: null,\n      constants: null,\n      axes: null,\n      operators: null,\n      brackets: null,\n      paramMappings: null,\n      tokenizer: null,\n      languageConfig: null,\n      hoverConstants: null,\n      hoverKeywords: null,\n      hoverFunctions: null,\n      signatures: null,\n      millDictionary: null,\n      millAnnotations: null\n    };\n  }\n\n  /**\n   * Initialize Monaco editor with GGcode language support\n   * @param {Object} options - Configuration options\n   * @param {string} options.inputContainerId - ID of input editor container\n   * @param {string} options.outputContainerId - ID of output editor container\n   * @param {string} options.initialInput - Initial input content\n   * @param {string} options.initialOutput - Initial output content\n   * @param {Function} options.onCompile - Callback for compilation\n   * @param {Function} options.onAnnotationUpdate - Callback for annotation updates\n   */\n  async initialize(options = {}) {\n    const {\n      inputContainerId = 'editor',\n      outputContainerId = 'output',\n      initialInput = '',\n      initialOutput = '',\n      onCompile = null,\n      onAnnotationUpdate = null,\n    } = options;\n\n\n    // Always check for global Monaco first (works for both webpack and AMD loading)\n    return new Promise((resolve, reject) => {\n      const initializeEditor = async () => {\n        try {\n          //console.log('MonacoEditorManager: Monaco available, initializing editors...');\n          await this._loadCompletionData();\n          await themeManager.loadAndInitializeTheme(); // Load theme BEFORE language registration for proper syntax highlighting\n          this._registerGGcodeLanguage();\n          this._createEditors(\n            inputContainerId,\n            outputContainerId,\n            initialInput,\n            initialOutput\n          );\n          this._setupEventHandlers(onCompile, onAnnotationUpdate);\n          this._setupDragAndDrop();\n\n          this.monacoReady = true;\n          // Parse user functions from initial content\n          this._parseUserFunctions();\n\n          //console.log('MonacoEditorManager: Initialization complete!');\n          resolve();\n        } catch (error) {\n          console.error('MonacoEditorManager: Initialization failed:', error);\n          reject(error);\n        }\n      };\n\n      // Check if Monaco is already available globally\n      if (typeof window.monaco !== 'undefined') {\n        //console.log('MonacoEditorManager: Monaco already available globally');\n        initializeEditor();\n      } else {\n        // Load Monaco dynamically using the global require (from loader.js)\n        //console.log('MonacoEditorManager: Loading Monaco dynamically...');\n\n        const loadMonaco = () => {\n          // Check if the global require from loader.js is available\n          if (\n            typeof window.require !== 'undefined' &&\n            typeof window.require.config === 'function'\n          ) {\n            //console.log('MonacoEditorManager: Using global require to load Monaco');\n\n            // Configure Monaco paths\n            window.require.config({\n              paths: {\n                vs: 'https://cdn.jsdelivr.net/npm/monaco-editor@0.45.0/min/vs',\n              },\n            });\n\n            // Load Monaco\n            window.require(['vs/editor/editor.main'], () => {\n              //console.log('MonacoEditorManager: Monaco loaded successfully');\n              initializeEditor();\n            });\n          } else {\n            // Fallback: wait for Monaco to be available\n            //console.log('MonacoEditorManager: Waiting for Monaco...');\n            let attempts = 0;\n            const maxAttempts = 50; // Wait up to 5 seconds\n\n            const checkMonaco = () => {\n              attempts++;\n              if (typeof window.monaco !== 'undefined') {\n                //console.log('MonacoEditorManager: Monaco became available after', attempts * 100, 'ms');\n                initializeEditor();\n              } else if (attempts < maxAttempts) {\n                setTimeout(checkMonaco, 100);\n              } else {\n                console.error(\n                  'MonacoEditorManager: Timeout waiting for Monaco to load'\n                );\n                reject(\n                  new Error('Monaco Editor failed to load within timeout')\n                );\n              }\n            };\n            checkMonaco();\n          }\n        };\n\n        // Give the loader.js a moment to set up the global require\n        setTimeout(loadMonaco, 100);\n      }\n    });\n  }\n\n  /**\n   * Load completion data from external JSON files\n   * @private\n   * @returns {Promise} Promise that resolves when all completion data is loaded\n   */\n  async _loadCompletionData() {\n\n    const files = {\n      keywords: '/data/completions/ggcode-keywords.json',\n      functions: '/data/completions/ggcode-functions.json',\n      constants: '/data/completions/ggcode-constants.json',\n      axes: '/data/completions/ggcode-axes.json',\n      operators: '/data/completions/ggcode-operators.json',\n      brackets: '/data/completions/ggcode-brackets.json',\n      paramMappings: '/data/completions/ggcode-param-mappings.json',\n      tokenizer: '/data/completions/ggcode-tokenizer.json',\n      languageConfig: '/data/completions/ggcode-language-config.json',\n      hoverConstants: '/data/completions/ggcode-hover-constants.json',\n      hoverKeywords: '/data/completions/ggcode-hover-keywords.json',\n      hoverFunctions: '/data/completions/ggcode-hover-functions.json',\n      signatures: '/data/completions/ggcode-signatures.json',\n      millDictionary: '/mill-dictionary.json',\n      millAnnotations: '/mill-annotations.json'\n    };\n\n    const loadPromises = Object.entries(files).map(async ([key, filePath]) => {\n      try {\n        const response = await fetch(filePath);\n        if (response.ok) {\n          const data = await response.json();\n          this.completionData[key] = data;\n        } else {\n          console.warn(`Failed to load ${key} completion data: ${response.status}`);\n        }\n      } catch (error) {\n        console.warn(`⚠️ Error loading ${key} completion data:`, error.message);\n      }\n    });\n\n    await Promise.all(loadPromises);\n  }\n\n  /**\n   * Register GGcode language with Monaco\n   * @private\n   */\n  _registerGGcodeLanguage() {\n    monaco.languages.register({ id: 'ggcode' });\n\n    // Register comprehensive completion provider for GGcode\n    this._registerCompletionProvider();\n\n    // Register hover provider for better documentation\n    this._registerHoverProvider();\n\n    // Register signature help for function parameters\n    this._registerSignatureHelpProvider();\n\n    // Set language configuration for GGcode using JSON data\n    if (this.completionData.languageConfig) {\n      const config = this.completionData.languageConfig.languageConfiguration;\n      monaco.languages.setLanguageConfiguration('ggcode', {\n        brackets: config.brackets,\n        autoClosingPairs: config.autoClosingPairs,\n        surroundingPairs: config.surroundingPairs,\n        folding: {\n          markers: {\n            start: new RegExp(config.folding.markers.start),\n            end: new RegExp(config.folding.markers.end)\n          }\n        }\n      });\n    } else {\n      console.warn('⚠️ Language configuration not loaded, using defaults');\n    }\n\n    // Use completion data loaded at startup - fallback to minimal sets if JSON failed\n    const keywords = this.completionData.keywords\n      ? this.completionData.keywords.keywords.map(kw => kw.word)\n      : ['let', 'if', 'else', 'for', 'while', 'function', 'return', 'note'];\n\n    const constants = this.completionData.constants\n      ? this.completionData.constants.constants.map(constant => constant.name)\n      : ['PI', 'E', 'TAU', 'DEG_TO_RAD'];\n\n    const builtins = this.completionData.functions\n      ? this.completionData.functions.functions.map(func => func.name)\n      : ['abs', 'mod', 'sin', 'cos', 'tan', 'sqrt', 'hypot', 'floor', 'ceil', 'round'];\n\n    // Create dynamic regex patterns for tokenizer using JSON configuration\n    const keywordPattern = keywords.length > 0 ? new RegExp(`\\\\b(${keywords.join('|')})\\\\b`) : /\\b(dummy)\\b/;\n    const constantPattern = constants.length > 0 ? new RegExp(`\\\\b(${constants.join('|')})\\\\b`) : /\\b(dummy)\\b/;\n    const builtinPattern = builtins.length > 0 ? new RegExp(`\\\\b(${builtins.join('|')})\\\\b`) : /\\b(dummy)\\b/;\n\n    // Build dynamic tokenizer using JSON configuration\n    if (!this.completionData.tokenizer) {\n      console.warn('⚠️ Tokenizer configuration not loaded');\n      return;\n    }\n\n    const tokenizerConfig = this.completionData.tokenizer.tokenizer;\n    const axisChars = tokenizerConfig.axisCharacters || 'XYZABCEFSHTHRPN';\n\n    // Get language configuration patterns from JSON\n    const langConfig = this.completionData.languageConfig;\n\n    // Build dynamic tokenizer rules\n    const tokenizerRules = [];\n\n    // Generate axis patterns dynamically\n    const axisTypes = {};\n    for (const char of axisChars) {\n      // Axis with bracketed variables (e.g., X[f], Y[y+1]) - HIGHER PRIORITY\n      tokenizerRules.push([new RegExp(`\\\\b${char}\\\\[([^\\\\]]+)\\\\]`), `axis-with-var.${char.toLowerCase()}`]);\n\n      // Axis with numeric values (e.g., X123.45, Y-789) - MEDIUM PRIORITY\n      tokenizerRules.push([new RegExp(`\\\\b${char}[-+]?[0-9]*\\\\.?[0-9]+\\\\b`), `axis.${char.toLowerCase()}`]);\n\n      // Map for word matching\n      axisTypes[char] = `axis.${char.toLowerCase()}`;\n    }\n\n    // Add N-line pattern (for line numbers)\n    if (axisChars.includes('N')) {\n      tokenizerRules.push([/\\bN[+-]?[0-9.]+\\b/, 'nline']);\n    }\n\n    // Add predefined patterns using JSON configuration - each as separate push for proper tokenizer structure\n    // G-code / M-code patterns with differentiated token types for better color coding\n\n    // Rapid positioning (G0) - Yellow/green color\n    tokenizerRules.push([/\\bG0\\b/, 'gcode-rapid']);\n\n    // Linear interpolation (G1) - Blue color\n    tokenizerRules.push([/\\bG1\\b/, 'gcode-linear']);\n\n    // Arc moves (G2/G3) - Purple color\n    tokenizerRules.push([/\\b(G2|G3)\\b/, 'gcode-arc']);\n\n    // Dwell (G4) - Orange color\n    tokenizerRules.push([/\\bG4\\b/, 'gcode-dwell']);\n\n    // Drill cycles (G8x) - Dark green color\n    tokenizerRules.push([/\\bG8[0-9]\\b/, 'gcode-drill']);\n\n    // Boring/cutoff cycles (G76-G89) - Dark blue color\n    tokenizerRules.push([/\\bG[7-8][6-9]\\b/, 'gcode-bore']);\n\n    // Reference position returns (G28/G30) - Cyan color\n    tokenizerRules.push([/\\bG2[89]|G30\\b/, 'gcode-ref']);\n\n    // Rigid tapping (G84) - Gold color\n    tokenizerRules.push([/\\bG84\\b/, 'gcode-tap']);\n\n    // Other G-codes (directory setting, coordinate system, etc.) - Default G-code red\n    tokenizerRules.push([/\\bG\\d+\\b/, 'gcode']);\n\n    // Spindle commands (M3/M4/M5) - Orange color\n    tokenizerRules.push([/\\b(M3|M4|M5)\\b/, 'mcode-spindle']);\n\n    // Tool change (M6) - Purple color\n    tokenizerRules.push([/\\bM6\\b/, 'mcode-toolchange']);\n\n    // Coolant commands (M7/M8/M9) - Cyan color\n    tokenizerRules.push([/\\b(M7|M8|M9)\\b/, 'mcode-coolant']);\n\n    // Program control (M0/M1/M2/M30) - Yellow color\n    tokenizerRules.push([/\\b(M0|M1|M2|M30)\\b/, 'mcode-control']);\n\n    // Other M-codes - Default M-code color\n    tokenizerRules.push([/\\bM\\d+\\b/, 'mcode']);\n\n    // Dynamic patterns using loaded JSON data (keywords come after G-codes)\n    tokenizerRules.push([keywordPattern, 'keyword']);\n    tokenizerRules.push([constantPattern, 'constant']);\n    tokenizerRules.push([builtinPattern, 'predefined']);\n\n    // Axis fallback patterns using JSON templates\n    tokenizerRules.push([new RegExp(langConfig.axisFallbackPattern1.replace(/\\{axis0\\}/g, axisChars.charAt(0)).replace(/\\{axis1\\}/g, axisChars.charAt(1)).replace(/\\{axis2\\}/g, axisChars.charAt(2))), 'axis']);\n    tokenizerRules.push([new RegExp(langConfig.axisFallbackPattern2), 'axis']);\n\n\n    // General bracketed variables (lower priority)\n    tokenizerRules.push([/\\b[A-Z]\\[[^\\]]+\\]/, 'variable-bracket']);\n\n    // Variable assignments (let var_name = value) - HIGHEST priority for consistency\n    tokenizerRules.push([/\\blet\\s+([a-zA-Z_]\\w*)\\b/, 'variable-declaration']);\n\n    // Variables in brackets using JSON pattern (fallback)\n    tokenizerRules.push([new RegExp(langConfig.variablePattern), 'variable']);\n\n    // General variable references (higher priority than identifiers)\n    tokenizerRules.push([/\\b[a-zA-Z_]\\w*\\b/, 'variable-reference']);\n\n    // Numbers using JSON pattern\n    tokenizerRules.push([new RegExp(`\\\\b${langConfig.numberPattern}\\\\b`), 'number']);\n\n    // Comments using JSON comment patterns\n    tokenizerRules.push([new RegExp(`${tokenizerConfig.commentPatterns.lineComment}.*$`), 'comment']);\n    tokenizerRules.push([new RegExp(`${tokenizerConfig.commentPatterns.blockCommentStart}.*$`), 'comment', '@blockComment']);\n\n    // Dynamic brackets using JSON bracket symbols\n    tokenizerRules.push([new RegExp(`[${langConfig.bracketSymbols}]`), 'bracket']);\n\n    // Build block comment pattern from JSON\n    const blockEndPattern = tokenizerConfig.commentPatterns.blockCommentEnd || '%/';\n\n    monaco.languages.setMonarchTokensProvider('ggcode', {\n      keywords: keywords,\n      constants: constants,\n      builtins: builtins,\n      operators: tokenizerConfig.operators || ['=', '+', '-', '*', '/', '%', '..'],\n      symbols: new RegExp(`[${langConfig.tokenizerSymbolsPattern}]`),\n\n      tokenizer: {\n        root: tokenizerRules,\n\n        blockComment: [\n          [new RegExp(`.*${blockEndPattern}`), 'comment', '@pop'],\n          [/.*$/, 'comment'],\n        ],\n      },\n    });\n  }\n\n  /**\n   * Register comprehensive completion provider for GGcode language\n   * Provides IntelliSense-style completion suggestions for all GGcode elements\n   * @private\n   */\n  _registerCompletionProvider() {\n    // Store reference to help system for dictionary access\n    this.helpSystem = window.applicationManager?.getHelpSystem?.();\n\n    // Register the main completion item provider\n    monaco.languages.registerCompletionItemProvider('ggcode', {\n      provideCompletionItems: (model, position, _context, _token) => {\n        const word = model.getWordUntilPosition(position);\n        const range = {\n          startLineNumber: position.lineNumber,\n          endLineNumber: position.lineNumber,\n          startColumn: word.startColumn,\n          endColumn: word.endColumn\n        };\n\n        const suggestions = [];\n\n        // Add context-aware completions based on current line content\n        const lineContent = model.getLineContent(position.lineNumber);\n        const linePrefix = lineContent.substring(0, position.column - 1);\n\n        // Unified completion processing - combine all sources with proper priority sorting\n        const allCompletions = [];\n\n        // Standard completions (G-codes, M-codes, functions, constants, etc.)\n        allCompletions.push(...this._getGcodeCompletions(range));\n        allCompletions.push(...this._getMcodeCompletions(range));\n        allCompletions.push(...this._getKeywordCompletions(range));\n        allCompletions.push(...this._getFunctionCompletions(range));\n        allCompletions.push(...this._getConstantCompletions(range));\n        allCompletions.push(...this._getAxisCompletions(range));\n        allCompletions.push(...this._getOperatorCompletions(range));\n        allCompletions.push(...this._getBracketCompletions(range));\n\n        // User-defined function completions (higher priority)\n        allCompletions.push(...this._getUserFunctionCompletions(range));\n\n        // Context-aware axis parameters when user types G/M codes\n        if (linePrefix.match(/\\b(G\\d+|M\\d+)\\s*$/)) {\n          allCompletions.push(...this._getAxisParametersCompletions(range));\n        }\n\n        // External dictionary and annotation completions (lowest priority)\n        if (this.helpSystem?.dictionaryCache) {\n          allCompletions.push(...this._getMillDictionaryCompletions(range, linePrefix));\n        }\n        if (this.helpSystem?.annotationsCache) {\n          allCompletions.push(...this._getMillAnnotationsCompletions(range, linePrefix));\n        }\n\n        // Sort all completions by sortText to ensure consistent priority\n        suggestions.push(...allCompletions.sort((a, b) => a.sortText.localeCompare(b.sortText)));\n\n        return {\n          suggestions: suggestions,\n          incomplete: false\n        };\n      },\n\n      triggerCharacters: ['G', 'M', 'g', 'm', 'x', 'y', 'z', 'a', 'b', 'c', 'f', 's', 't', 'h', 'r', 'p', 'l', 'i', 'f', 'w', '(', '[', ' ']\n    });\n  }\n\n  /**\n   * Get G-code completion items from mill dictionary JSON data\n   * @private\n   */\n  _getGcodeCompletions(range) {\n    const gcodes = this.completionData.millDictionary || {};\n\n    if (!gcodes || Object.keys(gcodes).length === 0) {\n      console.warn('⚠️ Mill dictionary JSON not loaded for G-code completions');\n      return [];\n    }\n\n    const completions = [];\n\n\n    for (const [gcode, definition] of Object.entries(gcodes)) {\n      if (gcode.startsWith('G') && gcode.length >= 2) {\n\n\n        const description = definition.desc || 'G-code command';\n        let detail = gcode;\n        let usage = gcode;\n\n        // Build usage string from parameters\n        if (definition.sub && Object.keys(definition.sub).length > 0) {\n          const params = Object.keys(definition.sub).join(' ');\n          usage = `${gcode} ${params}`;\n          detail = `Usage: ${usage}`;\n        }\n\n        const completionItem = {\n          label: gcode,\n          kind: monaco.languages.CompletionItemKind.Class,\n          detail: detail,\n          documentation: {\n            value: `**${gcode}** - ${description}${definition.sub ? '\\n\\nParameters:\\n' + Object.entries(definition.sub).map(([param, desc]) => `  ${param}: ${desc}`).join('\\n') : ''}`\n          },\n          insertText: gcode,\n          sortText: `01${gcode}`,\n          range: range\n        };\n\n        // Validate the completion item\n        if (!completionItem.label || !completionItem.insertText) {\n          console.warn(`⚠️ Invalid completion item for ${gcode}:`, completionItem);\n          continue;\n        }\n\n        completions.push(completionItem);\n\n      }\n    }\n\n\n    return completions;\n  }\n\n  /**\n   * Get M-code completion items from mill dictionary JSON data\n   * @private\n   */\n  _getMcodeCompletions(range) {\n    const mcodes = this.completionData.millDictionary || {};\n\n    if (!mcodes || Object.keys(mcodes).length === 0) {\n      console.warn('⚠️ Mill dictionary JSON not loaded for M-code completions');\n      return [];\n    }\n\n    const completions = [];\n    for (const [mcode, definition] of Object.entries(mcodes)) {\n      if (mcode.startsWith('M') && mcode.length >= 2) {\n        const description = definition.desc || 'M-code command';\n        let detail = mcode;\n        let usage = mcode;\n\n        // Build usage string from parameters\n        if (definition.sub && Object.keys(definition.sub).length > 0) {\n          const params = Object.keys(definition.sub).join(' ');\n          usage = `${mcode} ${params}`;\n          detail = `Usage: ${usage}`;\n        }\n\n        completions.push({\n          label: mcode,\n          kind: monaco.languages.CompletionItemKind.Interface,\n          detail: detail,\n          documentation: {\n            value: `**${mcode}** - ${description}${definition.sub ? '\\n\\nParameters:\\n' + Object.entries(definition.sub).map(([param, desc]) => `  ${param}: ${desc}`).join('\\n') : ''}`\n          },\n          insertText: mcode,\n          sortText: `02${mcode}`,\n          range: range\n        });\n      }\n    }\n\n    return completions;\n  }\n\n  /**\n   * Get keyword completion items from external JSON only\n   * @private\n   */\n  _getKeywordCompletions(range) {\n    if (!this.completionData.keywords) {\n      console.warn('⚠️ Keywords JSON not loaded');\n      return [];\n    }\n\n    const { keywords } = this.completionData.keywords;\n    return keywords.map(kw => ({\n      label: kw.word,\n      kind: monaco.languages.CompletionItemKind.Keyword,\n      detail: kw.detail,\n      documentation: {\n        value: `**${kw.word}** - ${kw.description}\\n\\nExample: \\`${kw.detail}\\``\n      },\n      insertText: kw.snippet || kw.word,\n      insertTextRules: kw.snippet ? monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet : undefined,\n      sortText: `10${kw.word}`,\n      range: range\n    }));\n  }\n\n  /**\n   * Get mathematical function completion items from external JSON only\n   * @private\n   */\n  _getFunctionCompletions(range) {\n    if (!this.completionData.functions) {\n      console.warn('⚠️ Functions JSON not loaded');\n      return [];\n    }\n\n    const { functions } = this.completionData.functions;\n    return functions.map(func => ({\n      label: func.name,\n      kind: monaco.languages.CompletionItemKind.Function,\n      detail: func.detail,\n      documentation: {\n        value: `**${func.name}** - ${func.description}\\n\\nUsage: \\`${func.detail}\\``\n      },\n      insertText: func.snippet,\n      insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\n      sortText: `30${func.name}`,\n      range: range\n    }));\n  }\n\n  /**\n   * Get constant completion items from external JSON only\n   * @private\n   */\n  _getConstantCompletions(range) {\n    if (!this.completionData.constants) {\n      console.warn('⚠️ Constants JSON not loaded');\n      return [];\n    }\n\n    const { constants } = this.completionData.constants;\n    return constants.map(constant => ({\n      label: constant.name,\n      kind: monaco.languages.CompletionItemKind.Constant,\n      detail: constant.detail,\n      documentation: {\n        value: `**${constant.name}** - ${constant.description}\\n\\nValue: ${constant.detail}`\n      },\n      insertText: constant.name,\n      sortText: `20${constant.name}`,\n      range: range\n    }));\n  }\n\n  /**\n   * Get axis completion items from external JSON only\n   * @private\n   */\n  _getAxisCompletions(range) {\n    if (!this.completionData.axes) {\n      console.warn('⚠️ Axes JSON not loaded');\n      return [];\n    }\n\n    const { axes } = this.completionData.axes;\n    return axes.map(axis => ({\n      label: axis.axis,\n      kind: monaco.languages.CompletionItemKind.Variable,\n      detail: axis.description,\n      documentation: {\n        value: `**${axis.axis}** - ${axis.description}\\n\\nExample: \\`${axis.snippet}\\``\n      },\n      insertText: axis.snippet,\n      insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\n      sortText: `40${axis.axis}`,\n      range: range\n    }));\n  }\n\n  /**\n   * Get operator completion items from external JSON only\n   * @private\n   */\n  _getOperatorCompletions(range) {\n    if (!this.completionData.operators) {\n      console.warn('⚠️ Operators JSON not loaded');\n      return [];\n    }\n\n    const { operators } = this.completionData.operators;\n    return operators.map(operator => ({\n      label: operator.op,\n      kind: monaco.languages.CompletionItemKind.Operator,\n      detail: operator.detail,\n      documentation: {\n        value: `**${operator.op}** - ${operator.description}\\n\\nExample: \\`${operator.detail}\\``\n      },\n      insertText: operator.op,\n      sortText: `50${operator.op}`,\n      range: range\n    }));\n  }\n\n  /**\n   * Get bracket completion items from external JSON only\n   * @private\n   */\n  _getBracketCompletions(range) {\n    if (!this.completionData.brackets) {\n      console.warn('⚠️ Brackets JSON not loaded');\n      return [];\n    }\n\n    const { brackets } = this.completionData.brackets;\n    return brackets.map(bracket => {\n      if (bracket.snippet) {\n        return {\n          label: bracket.pair,\n          kind: monaco.languages.CompletionItemKind.Snippet,\n          detail: bracket.description,\n          documentation: { value: bracket.description },\n          insertText: bracket.snippet,\n          insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\n          sortText: `60${bracket.pair}`,\n          range: range\n        };\n      } else {\n        const label = bracket.pair.replace(/\\{|\\[|\\(|\\}|\\]|\\)/, (match) => match); // Keep the original bracket\n        if (!label) {\n          console.warn('⚠️ Empty label for bracket:', bracket);\n          return null; // Skip invalid brackets\n        }\n        return {\n          label: label,\n          kind: monaco.languages.CompletionItemKind.Value,\n          detail: bracket.description,\n          documentation: { value: bracket.description },\n          insertText: label,\n          sortText: `60${bracket.pair}`,\n          range: range\n        };\n      }\n    }).filter(item => item !== null); // Remove null items\n  }\n\n\n\n\n\n\n\n\n\n\n  /**\n   * Get mill dictionary completions (shows detailed G/M-codes with parameters)\n   * @private\n   */\n  _getMillDictionaryCompletions(range, linePrefix) {\n    const completions = [];\n    const helpSystem = window.applicationManager?.getHelpSystem?.();\n    const dictionary = helpSystem?.dictionaryCache;\n\n    if (!dictionary) return completions;\n\n    // Get user input to filter completions\n    const word = linePrefix.toUpperCase();\n\n    for (const [gcode, definition] of Object.entries(dictionary)) {\n      // Skip single characters like \"F\", \"S\", \"T\" etc. - those are handled elsewhere\n      if (gcode.length === 1) continue;\n\n      // Filter based on what user has typed\n      if (word && !gcode.startsWith(word)) continue;\n\n      let description = definition.desc || 'G/M-code command';\n      let detail = gcode;\n      let usage = gcode;\n\n      // Build full usage string from parameters\n      if (definition.sub && Object.keys(definition.sub).length > 0) {\n        const params = Object.keys(definition.sub).join(' ');\n        usage = `${gcode} ${params}`;\n        detail = `Usage: ${usage}`;\n\n        // Create detailed parameter documentation\n        const paramDocs = Object.entries(definition.sub)\n          .map(([param, desc]) => `  ${param}: ${desc}`)\n          .join('\\n');\n\n        description = description + '\\n\\nParameters:\\n' + paramDocs;\n      }\n\n      completions.push({\n        label: gcode,\n        kind: monaco.languages.CompletionItemKind.Class,\n        detail: detail,\n        documentation: {\n          value: `**${gcode}** - ${description}`\n        },\n        insertText: gcode,\n        sortText: `000${gcode}`, // Very high priority for official G/M-codes\n        range: range\n      });\n    }\n\n    return completions;\n  }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  /**\n   * Get mill annotations completions (shows parameter syntax and smart completions)\n   * Enhanced to support both G1/G01 formats and improved full line completion\n   * @private\n   */\n  _getMillAnnotationsCompletions(range, linePrefix) {\n    const completions = [];\n    const helpSystem = window.applicationManager?.getHelpSystem?.();\n    const annotations = helpSystem?.annotationsCache;\n\n    if (!annotations) {\n      return completions;\n    }\n\n    // Get user input to filter completions\n    const word = linePrefix.toUpperCase();\n    const isGCode = word.startsWith('G');\n    const isMCode = word.startsWith('M');\n\n    if (!isGCode && !isMCode) return completions;\n\n    // Process each annotation entry\n    for (const [description, usage] of Object.entries(annotations)) {\n      // Skip single-character annotations and non-motion commands\n      if (usage.length <= 2 || /^\\s*[A-Z](\\s+[A-Z])*\\s*$/.test(usage)) {\n        continue;\n      }\n\n      // Extract G/M code from usage\n      const gcodeMatch = usage.match(/^[GM]\\d+/);\n      const gcode = gcodeMatch ? gcodeMatch[0] : null;\n\n\n      if (!gcode) continue;\n\n      // Enhanced matching logic to handle both G1 and G01 formats\n      let shouldInclude = false;\n      let altCode = null;\n\n      if (gcode.length === 2) {\n        // G1 format - check if user's input matches G1 or G01\n        if (word === gcode || word === (gcode[0] + '0' + gcode[1])) {\n          shouldInclude = true;\n          altCode = word;\n        }\n      } else if (gcode.length === 3 && gcode[1] === '0') {\n        // G01 format - check if user's input matches G01 or G1\n        const shortForm = gcode[0] + gcode[2];\n        if (word === gcode || word === shortForm) {\n          shouldInclude = true;\n          altCode = word;\n        }\n      }\n\n      // Alternative: check if word starts with G/M code (case insensitive)\n      if (!shouldInclude && word && gcode.toUpperCase().startsWith(word.toUpperCase())) {\n        shouldInclude = true;\n        altCode = gcode;\n      }\n\n      // Additional fuzzy matching for common patterns\n      if (!shouldInclude && word && word.length >= 2) {\n        // For example, \"35\" should match G35, \"rapid\" could match G00, etc.\n        const searchNum = parseInt(word);\n        if (searchNum && gcode.match(/G\\d+/)) {\n          const gcodeNum = parseInt(gcode.slice(1));\n          if (searchNum === gcodeNum) {\n            shouldInclude = true;\n            altCode = gcode;\n          }\n        }\n      }\n\n      if (!shouldInclude) continue;\n\n      // Use the matching code for display (user's format preference)\n      const displayCode = altCode || gcode;\n      const isFullLinePreset = description.startsWith('FULL LINE PRESET');\n\n      // Add completion for valid code\n\n      // Option 1: Just the G/M code (for basic completion)\n      completions.push({\n        label: `${isFullLinePreset ? '📋 ' : ''}${displayCode}`,\n        kind: monaco.languages.CompletionItemKind.Property,\n        detail: `${isFullLinePreset ? '📑 FULL PRESET: ' : 'Basic: '}${displayCode}`,\n        documentation: {\n          value: `${isFullLinePreset ? '⭐ **FULL LINE PRESET** ⭐\\n\\n' : ''}**${description}**\\n\\nComplete Syntax: \\`${usage}\\`\\n\\n${gcode !== displayCode ? `Equivalent to: **${gcode}**` : ''}${isFullLinePreset ? '\\n\\n💡 *This preset includes all standard parameters with smart placeholders!*' : ''}`\n        },\n        insertText: displayCode,\n        sortText: `${isFullLinePreset ? '000-' : '800'}${displayCode}`,\n        range: range\n      });\n\n      // Option 2: Complete syntax (enhanced smart completion - works even when not exact match)\n      const lineTrimmed = linePrefix.trim().toUpperCase();\n      const isExactMatch = lineTrimmed === displayCode || lineTrimmed === gcode;\n      const hasComplexParameters = usage.split(' ').length > 3; // G36 F I J K X Y Z has 7 params\n\n      // Trigger full completion if:\n      // - exact match (original logic)\n      // - complex command like G36 (at least 4 parameters)\n      // - user just typed the G/M code\n      if (isExactMatch || hasComplexParameters || lineTrimmed.match(/^[GM]\\d+$/)) {\n        const paramsOnly = usage.replace(gcode, '').trim();\n        if (paramsOnly) {\n          const completionParams = paramsOnly.split(' ').map(p => {\n            // Try to use external parameter mappings first\n            if (this.completionData.paramMappings && this.completionData.paramMappings.paramMappings) {\n              const paramMappings = this.completionData.paramMappings.paramMappings;\n              return paramMappings[p] ? paramMappings[p] : `[${p.toLowerCase()}]`;\n            }\n\n            // Fallback to hardcoded parameter mapping\n            const paramMap = {\n              'X': '[x_pos]', 'Y': '[y_pos]', 'Z': '[z_pos]', 'A': '[a_pos]', 'B': '[b_pos]', 'C': '[c_pos]',\n              'F': '[feed_rate]', 'S': '[rpm]', 'T': '[tool_num]',\n              'I': '[arc_x]', 'J': '[arc_y]', 'K': '[arc_z]',\n              'R': '[radius]', 'Q': '[depth]', 'P': '[dwell]'\n            };\n            return paramMap[p] ? paramMap[p] : `[${p.toLowerCase()}]`;\n          }).join(' ');\n\n          // Generate the sort text - full line presets get absolute top priority\n          const fullPresetPriority = isFullLinePreset ? '000' : '010';\n          const completionLabel = isFullLinePreset ? `🚀 FULL LINE: ${displayCode}` : `🚀 ${displayCode} • Complete Script`;\n\n          completions.push({\n            label: completionLabel,\n            kind: monaco.languages.CompletionItemKind.Snippet,\n            detail: `${isFullLinePreset ? '⭐⭐ FULL LINE PRESET:' : '⭐ FULL PRESET:'} ${displayCode} ${paramsOnly}`,\n            documentation: {\n              value: `🎯 **${description}**\\n\\n📋 **Complete Pattern:**\\n\\`\\`\\`gcode\\n${displayCode} ${paramsOnly}\\n\\`\\`\\`\\n\\n⚡ **Auto-filled Parameters:**\\n${completionParams.split(' ').map(p => `• **${p.replace(/\\[|\\]/g, '')}** - ${p}`).join('\\n')}\\n\\n💡 **Quick Use:** Just press TAB to insert the complete line with smart placeholders!\\n\\n${isFullLinePreset ? '⭐ **This is a pre-configured preset - recommended for quick use!**' : '📝 *Standard parameter completion pattern*'}`\n            },\n            insertText: `${displayCode} ${completionParams}`,\n            insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\n            sortText: `${fullPresetPriority}${displayCode}`, // FULL LINE PRESETS get absolute highest priority\n            range: range\n          });\n\n          // Added smart completion pattern\n        }\n      }\n    }\n\n    return completions;\n  }\n\n  /**\n   * Get axis parameter completions for G/M code context from external JSON only\n   * @private\n   */\n  _getAxisParametersCompletions(range) {\n    if (!this.completionData.paramMappings || !this.completionData.paramMappings.axisParameters) {\n      console.warn('⚠️ Axis Parameters JSON not loaded');\n      return [];\n    }\n\n    const { axisParameters } = this.completionData.paramMappings;\n    return axisParameters.map(param => ({\n      label: param.param.trim(),\n      kind: monaco.languages.CompletionItemKind.Field,\n      detail: param.description,\n      documentation: { value: `**${param.param.trim()}** - ${param.description}` },\n      insertText: param.snippet,\n      insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\n      sortText: `00${param.param}`,\n      range: range\n    }));\n  }\n\n  /**\n   * Register hover provider for enhanced documentation\n   * @private\n   */\n  _registerHoverProvider() {\n    monaco.languages.registerHoverProvider('ggcode', {\n      provideHover: (model, position) => {\n        const word = model.getWordAtPosition(position);\n        if (!word) return null;\n\n        const range = {\n          startLineNumber: position.lineNumber,\n          endLineNumber: position.lineNumber,\n          startColumn: word.startColumn,\n          endColumn: word.endColumn\n        };\n\n        const hoverInfo = this._getHoverInfo(word.word);\n        if (hoverInfo) {\n          return {\n            range: range,\n            contents: hoverInfo.contents\n          };\n        }\n\n        return null;\n      }\n    });\n  }\n\n  /**\n   * Get hover information for a word (using external JSON data)\n   * @private\n   */\n  _getHoverInfo(word) {\n    // Check mill dictionary data first (official G/M-code definitions)\n    const helpSystem = window.applicationManager?.getHelpSystem?.();\n    const dictionary = helpSystem?.dictionaryCache;\n\n    if (dictionary) {\n      // Check for exact match first\n      if (dictionary[word]) {\n        const definition = dictionary[word];\n        let description = definition.desc || 'G/M-code command';\n        let parameters = '';\n\n        // Build parameter documentation\n        if (definition.sub && Object.keys(definition.sub).length > 0) {\n          const paramList = Object.entries(definition.sub)\n            .map(([param, desc]) => `${param}: ${desc}`)\n            .join('\\n');\n          parameters = `\\n\\n**Parameters:**\\n${paramList}`;\n        }\n\n        return {\n          contents: [{\n            value: `**${word}** - ${description}${parameters}`\n          }]\n        };\n      }\n\n      // For G/M codes, also check the alternate format (G1 <-> G01)\n      if (word.match(/^[GM]\\d+$/)) {\n        let altWord = word;\n        if (word.length === 2 && word[1] !== '0') {\n          // G1 -> G01\n          altWord = word[0] + '0' + word[1];\n        } else if (word.length === 3 && word[1] === '0' && word[2] !== '0') {\n          // G01 -> G1 (but only if not G00)\n          altWord = word[0] + word[2];\n        }\n\n        if (altWord !== word && dictionary[altWord]) {\n          const definition = dictionary[altWord];\n          let description = definition.desc || 'G/M-code command';\n          let parameters = '';\n\n          // Build parameter documentation\n          if (definition.sub && Object.keys(definition.sub).length > 0) {\n            const paramList = Object.entries(definition.sub)\n              .map(([param, desc]) => `${param}: ${desc}`)\n              .join('\\n');\n            parameters = `\\n\\n**Parameters:**\\n${paramList}`;\n          }\n\n          return {\n            contents: [{\n              value: `**${altWord} / ${word}** - ${description}${parameters}`\n            }]\n          };\n        }\n      }\n    }\n\n    // Use JSON-based hover data instead of hardcoded values\n\n    // Check constants from JSON\n    if (this.completionData.hoverConstants && this.completionData.hoverConstants[word]) {\n      const constant = this.completionData.hoverConstants[word];\n      return {\n        contents: [{\n          value: `**${constant.title}**\\n\\n${constant.description}\\n\\nValue: ${constant.value}${constant.usage ? '\\n\\n' + constant.usage : ''}`\n        }]\n      };\n    }\n\n    // Check mill dictionary data (single source of truth)\n    if (this.completionData.millDictionary && this.completionData.millDictionary[word]) {\n      const entry = this.completionData.millDictionary[word];\n      const description = entry.desc || 'G/M-code command';\n      const subParams = entry.sub ? Object.keys(entry.sub) : [];\n      const paramInfo = subParams.length > 0 ? '\\n\\n**Parameters:**\\n' + subParams.map(param => `• **${param}**: ${entry.sub[param]}`).join('\\n') : '';\n\n      return {\n        contents: [{\n          value: `**${word}** - ${description}${paramInfo}`\n        }]\n      };\n    }\n\n    // Check functions from JSON\n    if (this.completionData.hoverFunctions && this.completionData.hoverFunctions[word]) {\n      const func = this.completionData.hoverFunctions[word];\n      return {\n        contents: [{\n          value: `**${func.syntax}** - ${func.description}${func.parameters && func.parameters.length > 0\n            ? '\\n\\nParameters:\\n' + func.parameters.map(p => `• ${p}`).join('\\n')\n            : '\\n\\nParameters: none'\n            }${func.returns ? '\\n\\nReturns: ' + func.returns : ''\n            }`\n        }]\n      };\n    }\n\n    // Check keywords from JSON\n    if (this.completionData.hoverKeywords && this.completionData.hoverKeywords[word]) {\n      const keyword = this.completionData.hoverKeywords[word];\n      return {\n        contents: [{\n          value: `**${word}** - ${keyword.description}\\n\\n${keyword.example}${keyword.usage ? '\\n\\n' + keyword.usage : ''\n            }`\n        }]\n      };\n    }\n\n    // Check for user-defined functions (kept for backward compatibility)\n    if (this.userFunctionCache[word]) {\n      const userFunc = this.userFunctionCache[word];\n      const signature = `${userFunc.name}(${userFunc.parameters.join(', ')})`;\n      const documentation = userFunc.documentation || 'User-defined function';\n\n      return {\n        contents: [{\n          value: `**${signature}**\\n\\n${documentation}${userFunc.documentation ? '' : '\\n\\nParameters: ' + (userFunc.parameters.length > 0 ? userFunc.parameters.join(', ') : 'none')}`\n        }]\n      };\n    }\n\n    return null;\n  }\n\n  /**\n   * Register signature help for function parameters\n   * @private\n   */\n  _registerSignatureHelpProvider() {\n    monaco.languages.registerSignatureHelpProvider('ggcode', {\n      signatureHelpTriggerCharacters: ['(', ','],\n      provideSignatureHelp: (model, position, _token, _context) => {\n        const lineContent = model.getLineContent(position.lineNumber);\n        const beforeCursor = lineContent.substring(0, position.column - 1);\n\n        // Find the function call\n        const functionMatch = beforeCursor.match(/(\\w+)\\s*\\(\\s*([^)]*)$/);\n        if (!functionMatch) return null;\n\n        const functionName = functionMatch[1];\n        const parametersText = functionMatch[2] || '';\n\n        const signatureInfo = this._getFunctionSignature(functionName);\n        if (!signatureInfo) return null;\n\n        // Count parameters\n        const commaCount = (parametersText.match(/,/g) || []).length;\n        const parameterIndex = Math.min(commaCount, signatureInfo.parameters.length - 1);\n\n        return {\n          signatures: [signatureInfo],\n          activeSignature: 0,\n          activeParameter: parameterIndex\n        };\n      }\n    });\n  }\n\n  /**\n   * Get function signature information (using external JSON data)\n   * @private\n   */\n  _getFunctionSignature(functionName) {\n    // Check signatures from JSON data first\n    if (this.completionData.signatures && this.completionData.signatures.functions) {\n      const signatures = this.completionData.signatures.functions;\n      if (signatures[functionName]) {\n        return signatures[functionName];\n      }\n    }\n\n    // Check for user-defined functions\n    if (this.userFunctionCache[functionName]) {\n      const userFunc = this.userFunctionCache[functionName];\n      return {\n        label: `${userFunc.name}(${userFunc.parameters.join(', ')})`,\n        documentation: `User-defined function${userFunc.documentation ? `\\n\\n${userFunc.documentation}` : ''}`,\n        parameters: userFunc.parameters.map(param => ({\n          label: param,\n          documentation: `Parameter: ${param}`\n        }))\n      };\n    }\n\n    return null;\n  }\n\n  /**\n   * Legacy method for backward compatibility - replaced by _registerCompletionProvider\n   * @private\n   * @deprecated\n   */\n  _registerBracketPairCompletionProvider() {\n    return this._registerCompletionProvider();\n  }\n\n  /**\n   * Parse user-defined functions from the current editor content\n   * @private\n   */\n  _parseUserFunctions(model = null) {\n    try {\n      // Use current model if not provided\n      if (!model && this.editor) {\n        model = this.editor.getModel();\n      }\n\n      if (!model) return;\n\n      const content = model.getValue();\n      this.userFunctions.clear();\n\n      // Regex pattern to match function definitions: function name(parameters) { ... }\n      const functionRegex = /function\\s+(\\w+)\\s*\\(\\s*([^)]*)\\s*\\)\\s*\\{[^}]*\\}/g;\n      let match;\n\n      while ((match = functionRegex.exec(content)) !== null) {\n        const functionName = match[1];\n        const parameters = match[2].trim();\n\n        // Parse parameters\n        const paramList = parameters === '' ?\n          [] :\n          parameters.split(',').map(param => param.trim()).filter(param => param.length > 0);\n\n        // Extract function documentation from comments\n        const functionStart = match.index;\n        const linesBefore = content.substring(0, functionStart).split('\\n');\n        const functionLineIndex = linesBefore.length;\n        let documentation = '';\n\n        // Look for note { ... } comments above the function\n        for (let i = linesBefore.length - 1; i >= 0; i--) {\n          const line = linesBefore[i].trim();\n          if (line.startsWith('note')) {\n            const noteMatch = line.match(/note\\s*\\{\\s*(.+?)\\s*\\}/);\n            if (noteMatch) {\n              documentation = noteMatch[1];\n              break;\n            }\n          } else if (line.includes('function')) {\n            // Stop looking when we hit another function definition\n            break;\n          }\n        }\n\n        // Store function information\n        this.userFunctions.set(functionName, {\n          name: functionName,\n          parameters: paramList,\n          documentation: documentation,\n          lineNumber: functionLineIndex + 1\n        });\n      }\n\n      // Cache for performance\n      this.userFunctionCache = {};\n      this.userFunctions.forEach((func, name) => {\n        this.userFunctionCache[name] = func;\n      });\n\n    } catch (error) {\n      console.warn('Error parsing user functions:', error);\n    }\n  }\n\n  /**\n   * Get user-defined function completion items\n   * @private\n   * @param {Object} range - Range for the completion items\n   * @returns {Array} Array of completion items\n   */\n  _getUserFunctionCompletions(range) {\n    const suggestions = [];\n\n    this.userFunctions.forEach((func) => {\n      const docString = `**${func.name}**(${func.parameters.join(', ')})\\n\\nUser-defined function${func.documentation ? `\\n\\n${func.documentation}` : ''}`;\n      const snippet = `${func.name}(${func.parameters.map((param, i) => `\\${${i + 1}:${param}}`).join(', ')})`;\n\n      suggestions.push({\n        label: func.name,\n        kind: monaco.languages.CompletionItemKind.Function,\n        detail: `${func.name}(${func.parameters.join(', ')})`,\n        documentation: {\n          value: docString\n        },\n        insertText: snippet,\n        insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\n        sortText: `05${func.name}`, // Sort after built-ins but before other items\n        range: range\n      });\n    });\n\n    return suggestions;\n  }\n\n  // Theme management is now handled by the consolidated theme system\n  // See themes.js for all theme-related functionality\n\n  /**\n   * Create input and output editors\n   * @private\n   */\n  _createEditors(\n    inputContainerId,\n    outputContainerId,\n    initialInput,\n    initialOutput\n  ) {\n    // Load saved content from StorageManager\n    const savedInput = storageManager.getInputContent();\n    const savedOutput = storageManager.getOutputContent();\n\n    const inputContent =\n      savedInput && savedInput.trim() !== '' ? savedInput : initialInput;\n    const outputContent =\n      savedOutput && savedOutput.trim() !== '' ? savedOutput : initialOutput;\n\n    // Hide loading indicators and show editor containers\n    const inputLoading = document.getElementById(inputContainerId + '-loading');\n    const outputLoading = document.getElementById(\n      outputContainerId + '-loading'\n    );\n    const inputContainer = document.getElementById(inputContainerId);\n    const outputContainer = document.getElementById(outputContainerId);\n\n    if (inputLoading) inputLoading.style.display = 'none';\n    if (outputLoading) outputLoading.style.display = 'none';\n    if (inputContainer) inputContainer.style.display = 'block';\n    if (outputContainer) outputContainer.style.display = 'block';\n\n    // Get initial settings from settings manager\n    const initialSettings = settingsManager ? settingsManager.getSettings() : {};\n\n    // Create input editor with proper initial settings\n    this.editor = monaco.editor.create(inputContainer, {\n      value: inputContent,\n      language: 'ggcode',\n      theme: 'vs-dark', // Start with safe default theme\n      automaticLayout: true,\n      minimap: initialSettings.minimap === 'disabled' ? { enabled: false } : { enabled: true },\n      fontSize: initialSettings.fontSize || 14,\n      fontFamily: initialSettings.fontFamily || 'Consolas, \"Courier New\", monospace',\n      wordWrap: initialSettings.wordWrap || 'off',\n      lineNumbers: initialSettings.lineNumbers || 'on',\n      renderWhitespace: initialSettings.renderWhitespace || 'none',\n      renderIndentGuides: initialSettings.renderIndentGuides !== undefined ? initialSettings.renderIndentGuides : true,\n      bracketMatching: initialSettings.bracketMatching !== undefined ? initialSettings.bracketMatching : true,\n      autoClosingBrackets: initialSettings.autoClosingBrackets || 'always',\n      autoClosingQuotes: initialSettings.autoClosingQuotes || 'always',\n      autoClosingDelete: initialSettings.autoClosingDelete || 'always',\n      autoClosingOvertype: initialSettings.autoClosingOvertype || 'always',\n      surroudWithBrackets: initialSettings.surroudWithBrackets !== undefined ? initialSettings.surroudWithBrackets : true,\n      tabSize: initialSettings.tabSize || 2,\n      insertSpaces: initialSettings.insertSpaces !== undefined ? initialSettings.insertSpaces : true,\n\n      // Bracket pair colorization settings\n      bracketPairColorization: {\n        enabled: true\n      },\n\n      // Semantic highlighting settings\n      'semanticHighlighting.enabled': true,\n    });\n\n    // Create output editor with proper initial settings\n    this.outputEditor = monaco.editor.create(outputContainer, {\n      value: outputContent,\n      language: 'ggcode',\n      theme: 'vs-dark', // Start with safe default theme\n      automaticLayout: true,\n      minimap: initialSettings.minimap === 'disabled' ? { enabled: false } : { enabled: true },\n      fontSize: initialSettings.fontSize || 14,\n      fontFamily: initialSettings.fontFamily || 'Consolas, \"Courier New\", monospace',\n      wordWrap: initialSettings.wordWrap || 'off',\n      lineNumbers: initialSettings.lineNumbers || 'on',\n      renderWhitespace: initialSettings.renderWhitespace || 'none',\n      renderIndentGuides: initialSettings.renderIndentGuides !== undefined ? initialSettings.renderIndentGuides : true,\n      bracketMatching: initialSettings.bracketMatching !== undefined ? initialSettings.bracketMatching : true,\n      autoClosingBrackets: initialSettings.autoClosingBrackets || 'always',\n      autoClosingQuotes: initialSettings.autoClosingQuotes || 'always',\n      autoClosingDelete: initialSettings.autoClosingDelete || 'always',\n      autoClosingOvertype: initialSettings.autoClosingOvertype || 'always',\n      surroudWithBrackets: initialSettings.surroudWithBrackets !== undefined ? initialSettings.surroudWithBrackets : true,\n      tabSize: initialSettings.tabSize || 2,\n      insertSpaces: initialSettings.insertSpaces !== undefined ? initialSettings.insertSpaces : true,\n\n      // Bracket pair colorization settings\n      bracketPairColorization: {\n        enabled: true\n      },\n    });\n\n    // Make output editor globally accessible for backward compatibility\n    window.outputEditor = this.outputEditor;\n\n    // Apply current settings to both editors\n    if (settingsManager) {\n      settingsManager.applyAllSettingsToEditor(this.editor);\n      settingsManager.applyAllSettingsToEditor(this.outputEditor);\n    }\n\n    // Apply the actual GGCode theme after editors are created\n    setTimeout(() => {\n      if (this.editor) {\n        themeManager.applyThemeToSpecificEditor(this.editor);\n      }\n      if (this.outputEditor) {\n        themeManager.applyThemeToSpecificEditor(this.outputEditor);\n      }\n    }, 100); // Small delay to ensure editors are fully initialized\n\n    //console.log('MonacoEditorManager: Editors created and configured successfully');\n  }\n\n  /**\n   * Setup event handlers for editors\n   * @private\n   */\n  _setupEventHandlers(onCompile, onAnnotationUpdate) {\n    // Auto-compile logic for input editor\n    this.editor.onDidChangeModelContent(() => {\n      // Parse user functions with debouncing\n      if (this.functionParseTimeout) clearTimeout(this.functionParseTimeout);\n      this.functionParseTimeout = setTimeout(() => {\n        this._parseUserFunctions();\n      }, 300); // Debounce parsing by 300ms\n\n      if (this.autoCompile && !this.skipAutoCompile) {\n        if (this.autoCompileTimeout) clearTimeout(this.autoCompileTimeout);\n        this.autoCompileTimeout = setTimeout(() => {\n          if (onCompile) onCompile(new Event('submit'));\n        }, 1000);\n      }\n      this.skipAutoCompile = false;\n    });\n\n    // Annotation updates for output editor\n    this.outputEditor.onDidChangeCursorPosition((e) => {\n      const lineNumber = e.position.lineNumber;\n      const lineContent = this.outputEditor\n        .getModel()\n        .getLineContent(lineNumber);\n      if (onAnnotationUpdate) {\n        onAnnotationUpdate(lineNumber, lineContent);\n      }\n    });\n  }\n\n  /**\n   * Setup drag and drop functionality\n   * @private\n   */\n  _setupDragAndDrop() {\n    const editorDom = this.editor.getDomNode();\n    if (!editorDom) return;\n\n    editorDom.addEventListener('dragover', (e) => {\n      e.preventDefault();\n      editorDom.style.background = '#222a';\n    });\n\n    editorDom.addEventListener('dragleave', (e) => {\n      e.preventDefault();\n      editorDom.style.background = '';\n    });\n\n    editorDom.addEventListener('drop', (e) => {\n      e.preventDefault();\n      editorDom.style.background = '';\n\n      if (\n        e.dataTransfer &&\n        e.dataTransfer.files &&\n        e.dataTransfer.files.length > 0\n      ) {\n        const file = e.dataTransfer.files[0];\n        const reader = new FileReader();\n\n        reader.onload = (evt) => {\n          if (file.name.endsWith('.gcode') || file.name.endsWith('.ggcode')) {\n            if (this.outputEditor) {\n              this.outputEditor.setValue(evt.target.result);\n            }\n          }\n          this.setLastOpenedFilename(file.name || '');\n        };\n\n        reader.readAsText(file);\n      }\n    });\n  }\n\n  /**\n   * Get input editor content\n   * @returns {string} Editor content\n   */\n  getInputValue() {\n    return this.editor ? this.editor.getValue() : '';\n  }\n\n  /**\n   * Set input editor content\n   * @param {string} content - Content to set\n   */\n  setInputValue(content) {\n    if (this.editor) {\n      this.skipAutoCompile = true;\n      this.editor.setValue(content);\n    }\n  }\n\n  /**\n   * Get output editor content\n   * @returns {string} Editor content\n   */\n  getOutputValue() {\n    return this.outputEditor ? this.outputEditor.getValue() : '';\n  }\n\n  /**\n   * Set output editor content\n   * @param {string} content - Content to set\n   */\n  setOutputValue(content) {\n    if (this.outputEditor) {\n      this.outputEditor.setValue(content);\n    }\n  }\n\n  /**\n   * Enable or disable auto-compile\n   * @param {boolean} enabled - Whether auto-compile should be enabled\n   */\n  setAutoCompile(enabled) {\n    this.autoCompile = enabled;\n    storageManager.setAutoCompileState(enabled);\n  }\n\n  /**\n   * Get auto-compile state\n   * @returns {boolean} Auto-compile state\n   */\n  getAutoCompile() {\n    return this.autoCompile;\n  }\n\n  /**\n   * Load auto-compile state from localStorage\n   */\n  loadAutoCompileState() {\n    this.autoCompile = storageManager.getAutoCompileState();\n    return this.autoCompile;\n  }\n\n  /**\n   * Set last opened filename\n   * @param {string} filename - Filename to remember\n   */\n  setLastOpenedFilename(filename) {\n    this.lastOpenedFilename = filename;\n    storageManager.setLastFilename(filename);\n  }\n\n  /**\n   * Get last opened filename\n   * @returns {string} Last opened filename\n   */\n  getLastOpenedFilename() {\n    return this.lastOpenedFilename;\n  }\n\n  /**\n   * Load last opened filename from localStorage\n   */\n  loadLastOpenedFilename() {\n    this.lastOpenedFilename = storageManager.getLastFilename();\n    return this.lastOpenedFilename;\n  }\n\n  /**\n   * Save editor content to localStorage\n   */\n  saveContent() {\n    try {\n      if (this.editor) {\n        storageManager.setInputContent(this.editor.getValue());\n      }\n      if (this.outputEditor) {\n        storageManager.setOutputContent(this.outputEditor.getValue());\n      }\n    } catch (e) {\n      console.warn('Failed to save content to storage:', e);\n    }\n  }\n\n  /**\n   * Setup auto-save functionality\n   */\n  setupAutoSave() {\n    // Auto-save content every 30 seconds\n    setInterval(() => this.saveContent(), 30000);\n\n    // Save content when page is about to unload\n    window.addEventListener('beforeunload', () => this.saveContent());\n  }\n\n  /**\n   * Check if Monaco is ready\n   * @returns {boolean} Monaco ready state\n   */\n  isReady() {\n    return this.monacoReady;\n  }\n\n\n  /**\n   * Force parsing of user-defined functions\n   * Useful for initial setup or manual refresh\n   */\n  refreshUserFunctions() {\n    this._parseUserFunctions();\n  }\n\n  /**\n   * Get all current user-defined functions\n   * @returns {Array} Array of user function objects\n   */\n  getUserFunctions() {\n    return Array.from(this.userFunctions.values());\n  }\n\n  /**\n   * Get editor instances\n   * @returns {Object} Object containing editor instances\n   */\n  getEditors() {\n    return {\n      input: this.editor,\n      output: this.outputEditor,\n    };\n  }\n}\n\n// Export for use in other modules\nexport default MonacoEditorManager;\n","/**\n * AI Manager - Centralized AI chat functionality\n * Handles AI chat interactions, command processing, and UI management\n */\n\nimport storageManager from '../utils/storageManager.js';\nimport aiCommands from './aiCommands.js';\n\nclass AIManager {\n    constructor() {\n        this.currentMode = 'assistant';\n        this.isAutoApprove = false;\n        this.pendingCommandData = null;\n        this.isStreaming = false;\n        this.messageQueue = [];\n\n        // Session and context management\n        this.sessionId = this.generateSessionId();\n        this.conversationHistory = [];\n        this.userContext = {\n            currentTask: null,\n            lastCommand: null,\n            codeContext: {\n                lastAnalyzed: null,\n                selectedText: null,\n                cursorPosition: null,\n                recentSearches: []\n            },\n            preferences: {\n                autoExecute: false,\n                verboseMode: false,\n                language: 'en'\n            }\n        };\n        this.maxHistoryLength = 20; // Keep last 20 messages for context\n    }\n\n    /**\n     * Generate a unique session ID\n     * @returns {string} Session ID\n     */\n    generateSessionId() {\n        return 'session_' + Date.now() + '_' + Math.random().toString(36).substr(2, 9);\n    }\n\n    /**\n     * Add message to conversation history\n     * @param {string} role - Message role (user/ai/system)\n     * @param {string} content - Message content\n     */\n    addToConversationHistory(role, content) {\n        const message = {\n            role: role,\n            content: content,\n            timestamp: new Date().toISOString(),\n            sessionId: this.sessionId\n        };\n\n        this.conversationHistory.push(message);\n\n        // Keep only the last maxHistoryLength messages\n        if (this.conversationHistory.length > this.maxHistoryLength) {\n            this.conversationHistory = this.conversationHistory.slice(-this.maxHistoryLength);\n        }\n\n        console.log(`📝 Added ${role} message to conversation history (${this.conversationHistory.length} total)`);\n    }\n\n    /**\n     * Get conversation context for AI requests\n     * @param {number} maxMessages - Maximum number of recent messages to include\n     * @returns {Array} Conversation history\n     */\n    getConversationContext(maxMessages = 10) {\n        return this.conversationHistory.slice(-maxMessages);\n    }\n\n    /**\n     * Update user context\n     * @param {Object} contextUpdate - Context updates\n     */\n    updateUserContext(contextUpdate) {\n        this.userContext = { ...this.userContext, ...contextUpdate };\n        console.log('🔄 Updated user context:', this.userContext);\n    }\n\n    /**\n     * Clear conversation history\n     */\n    clearConversationHistory() {\n        this.conversationHistory = [];\n        this.sessionId = this.generateSessionId();\n        console.log('🗑️ Conversation history cleared, new session:', this.sessionId);\n    }\n\n    /**\n     * Switch AI mode\n     * @param {string} mode - New mode (assistant, editor, optimizer, teacher)\n     */\n    switchMode(mode) {\n        this.currentMode = mode;\n        storageManager.setAiMode(mode);\n\n        this.updateModeSelector();\n        console.log('AI Mode switched to:', mode);\n\n    }\n\n    /**\n     * Toggle auto-approve setting\n     */\n    toggleAutoApprove() {\n        const toggle = document.getElementById('autoApproveToggle');\n        const status = document.getElementById('autoApproveStatus');\n\n        if (!toggle || !status) return;\n\n        this.isAutoApprove = toggle.checked;\n        status.textContent = this.isAutoApprove ? 'ON' : 'OFF';\n        status.style.color = this.isAutoApprove ? '#10a37f' : '#888';\n\n        storageManager.setAiAutoApprove(this.isAutoApprove);\n        console.log('Auto-approve toggled:', this.isAutoApprove);\n    }\n\n    /**\n     * Handle chat input keydown events\n     * @param {Event} event - Keydown event\n     */\n    handleChatKeydown(event) {\n        if (event.key === 'Enter' && !event.shiftKey) {\n            event.preventDefault();\n            this.sendMessage();\n        }\n    }\n\n    /**\n     * Send AI message\n     */\n    async sendMessage() {\n        const input = document.getElementById('aiChatInput');\n        const messagesContainer = document.getElementById('aiChatMessages');\n\n        if (!input || !messagesContainer || !input.value.trim()) return;\n\n        const userMessage = input.value.trim();\n\n        // Check if this is a confirmation of a pending command\n        if (this.handleUserConfirmation(userMessage, messagesContainer)) {\n            input.value = '';\n            return;\n        }\n\n        // Add user message to chat\n        this.addMessage('user', `<strong>You:</strong> ${userMessage}`);\n        input.value = '';\n\n        // Show typing indicator\n        const typingIndicator = this.createTypingIndicator();\n        messagesContainer.appendChild(typingIndicator);\n        messagesContainer.scrollTop = messagesContainer.scrollHeight;\n\n        try {\n            // Get context for AI\n            const context = this.buildAIContext(userMessage);\n\n            // Send to AI service\n            const response = await fetch('/api/ai/chat', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    message: userMessage,\n                    context: context,\n                    provider: 'local',\n                    stream: true,\n                }),\n            });\n\n            if (!response.ok) {\n                throw new Error(`Server responded with ${response.status}`);\n            }\n\n            // Handle streaming response\n            await this.handleStreamingResponse(response, messagesContainer, typingIndicator);\n\n        } catch (error) {\n            console.error('Error getting AI response:', error);\n            this.removeTypingIndicator(typingIndicator);\n            this.addMessage('ai', `<strong>🤖 :</strong> <span style=\"color: #ff6b6b;\">Sorry, I encountered an error: ${error.message}</span>`);\n        }\n    }\n\n    /**\n     * Build context for AI request\n     * @param {string} userMessage - User's message\n     * @returns {Object} Context object\n     */\n    buildAIContext(userMessage) {\n        // This would integrate with the editor to get context\n        // For now, return basic context\n        return {\n            currentGcode: '',\n            selectedText: '',\n            cursorPosition: null,\n            userConfirmation: userMessage.toLowerCase().match(/\\b(do it|yes|confirm|proceed|execute|go ahead)\\b/) ? true : false,\n            pendingCommand: null,\n            timestamp: new Date().toISOString(),\n        };\n    }\n\n    /**\n     * Handle streaming AI response\n     * @param {Response} response - Fetch response\n     * @param {Element} messagesContainer - Messages container element\n     * @param {Element} typingIndicator - Typing indicator element\n     */\n    async handleStreamingResponse(response, messagesContainer, typingIndicator) {\n        if (!response.headers.get('Content-Type')?.includes('text/event-stream')) {\n            // Handle non-streaming response\n            this.handleNonStreamingResponse(response, messagesContainer, typingIndicator);\n            return;\n        }\n\n        // Handle streaming response\n        const reader = response.body.getReader();\n        const decoder = new TextDecoder();\n        let buffer = '';\n        let responseText = '';\n\n        const aiResponseContainer = this.createAIMessageContainer();\n        messagesContainer.removeChild(typingIndicator);\n        messagesContainer.appendChild(aiResponseContainer);\n        let aiResponseContent = aiResponseContainer.querySelector('.ai-message-content');\n        aiResponseContent.innerHTML = '<strong>🤖 :</strong> ';\n\n        try {\n            let done = false;\n            while (!done) {\n                const { value, done: readerDone } = await reader.read();\n                done = readerDone;\n                if (done) break;\n\n                buffer += decoder.decode(value, { stream: true });\n                const lines = buffer.split('\\n');\n                buffer = lines.pop();\n\n                for (const line of lines) {\n                    if (line.startsWith('data: ')) {\n                        try {\n                            const data = JSON.parse(line.slice(6));\n                            if (data.content) {\n                                responseText += data.content;\n                                aiResponseContent.innerHTML = `<strong>🤖 :</strong> ${responseText}`;\n                                messagesContainer.scrollTop = messagesContainer.scrollHeight;\n\n                                // Check for AI commands\n                                const commandMatch = responseText.match(/\\/ai:(\\w+)\\s*\\[([^\\]]+)\\]/);\n                                if (commandMatch) {\n                                    const command = commandMatch[1];\n                                    const params = commandMatch[2];\n                                    this.showCommandActions(command, params);\n                                }\n                            }\n                        } catch (parseError) {\n                            console.warn('Failed to parse streaming data:', line, parseError);\n                        }\n                    }\n                }\n            }\n\n            // Process remaining buffer\n            if (buffer.startsWith('data: ')) {\n                try {\n                    const data = JSON.parse(buffer.slice(6));\n                    if (data.content) {\n                        responseText += data.content;\n                        aiResponseContent.innerHTML = `<strong>🤖 :</strong> ${this.parseAICommands(responseText)}`;\n                    }\n                } catch (parseError) {\n                    console.warn('Failed to parse final streaming data:', buffer);\n                }\n            }\n        } catch (error) {\n            console.error('Error reading streaming response:', error);\n            aiResponseContent.innerHTML = `<strong>🤖 :</strong> <span style=\"color: #ff6b6b;\">Sorry, I encountered an error: ${error.message}</span>`;\n        }\n    }\n\n    /**\n     * Handle non-streaming AI response\n     * @param {Response} response - Fetch response\n     * @param {Element} messagesContainer - Messages container element\n     * @param {Element} typingIndicator - Typing indicator element\n     */\n    async handleNonStreamingResponse(response, messagesContainer, typingIndicator) {\n        try {\n            const data = await response.json();\n            messagesContainer.removeChild(typingIndicator);\n\n            if (data.success) {\n                const cleanResponse = this.parseAICommands(data.response);\n                this.addMessage('ai', `<strong>🤖 :</strong> ${cleanResponse}`);\n            } else {\n                this.addMessage('ai', `<strong>🤖 :</strong> <span style=\"color: #ff6b6b;\">${data.error || 'Sorry, I encountered an error.'}</span>`);\n            }\n        } catch (error) {\n            console.error('Error parsing non-streaming response:', error);\n            messagesContainer.removeChild(typingIndicator);\n            this.addMessage('ai', `<strong>🤖 :</strong> <span style=\"color: #ff6b6b;\">Sorry, I encountered an error: ${error.message}</span>`);\n        }\n    }\n\n    /**\n     * Parse and execute AI commands from response\n     * @param {string} response - AI response text\n     * @returns {string} Clean response with commands removed\n     */\n    parseAICommands(response) {\n        console.log('🔍 Parsing AI commands from response:', response);\n\n        // More comprehensive command regex patterns\n        const commandPatterns = [\n            /\\/ai:(\\w+)\\s*\\[([^\\]]*)\\]/g,  // /ai:command[params]\n            /\\/ai:(\\w+)\\s*(\\w*)/g,          // /ai:command params\n            /\\/ai:(\\w+)/g                    // /ai:command\n        ];\n\n        let commands = [];\n        let cleanResponse = response;\n\n        // Try each pattern\n        for (const pattern of commandPatterns) {\n            let match;\n            while ((match = pattern.exec(response)) !== null) {\n                const command = match[1];\n                const params = match[2] || match[3] || '';\n\n                commands.push({\n                    command: command,\n                    params: params,\n                    original: match[0]\n                });\n\n                console.log('🎯 Found AI command:', { command, params, original: match[0] });\n            }\n        }\n\n        console.log('📋 Total commands found:', commands.length);\n\n        // Execute commands using the AI Commands module\n        commands.forEach((cmd, index) => {\n            console.log(`🔧 Executing command ${index + 1}:`, cmd.command, 'with params:', cmd.params);\n\n            // Handle commands that are implemented in aiCommands.js\n            const implementedCommands = ['insertat', 'insert', 'replace', 'replacerange', 'analyze', 'help', 'capabilities', 'status', 'find', 'getline', 'getlines', 'getcontent', 'getselection', 'getcursor'];\n\n            if (implementedCommands.includes(cmd.command)) {\n                try {\n                    console.log('🚀 Executing AI command:', cmd.command);\n                    aiCommands.executePendingCommand(cmd.command, cmd.params);\n\n                    // Add success feedback\n                    this.addSystemMessage(`<strong>🤖 :</strong> ✅ Executed command: <code>${cmd.original}</code>`);\n                    console.log('✅ AI command executed successfully:', cmd.command);\n\n                } catch (error) {\n                    console.error('❌ Error executing AI command:', cmd.command, error);\n                    this.addSystemMessage(`<strong>🤖 :</strong> <span style=\"color: #ff6b6b;\">❌ Error executing command ${cmd.command}: ${error.message}</span>`);\n                }\n            } else {\n                console.warn('⚠️ Unknown command:', cmd.command);\n                this.addSystemMessage(`<strong>🤖 :</strong> <span style=\"color: #ffa500;\">⚠️ Unknown command: ${cmd.command}</span>`);\n            }\n\n            // Remove the command from the response text\n            cleanResponse = cleanResponse.replace(cmd.original, '').trim();\n        });\n\n        console.log('📝 Clean response after command removal:', cleanResponse);\n        return cleanResponse;\n    }\n\n    /**\n     * Add message to chat\n     * @param {string} sender - Message sender (user/ai)\n     * @param {string} content - Message content\n     */\n    addMessage(sender, content) {\n        const messagesContainer = document.getElementById('aiChatMessages');\n        if (!messagesContainer) return;\n\n        const messageDiv = document.createElement('div');\n        messageDiv.className = `ai-message ai-${sender}`;\n        messageDiv.innerHTML = `<div class=\"ai-message-content\">${content}</div>`;\n\n        messagesContainer.appendChild(messageDiv);\n        messagesContainer.scrollTop = messagesContainer.scrollHeight;\n    }\n\n    /**\n     * Add system message to chat\n     * @param {string} message - System message to add\n     */\n    addSystemMessage(message) {\n        const messagesContainer = document.getElementById('aiChatMessages');\n        if (!messagesContainer) return;\n\n        const messageDiv = document.createElement('div');\n        messageDiv.className = 'ai-message ai-system';\n        messageDiv.innerHTML = `<div class=\"ai-message-content\">${message}</div>`;\n\n        messagesContainer.appendChild(messageDiv);\n        messagesContainer.scrollTop = messagesContainer.scrollHeight;\n    }\n\n    /**\n     * Create typing indicator element\n     * @returns {Element} Typing indicator element\n     */\n    createTypingIndicator() {\n        const typingIndicator = document.createElement('div');\n        typingIndicator.className = 'ai-message ai-typing';\n        typingIndicator.innerHTML = '<div class=\"ai-message-content\"><strong>🤖 :</strong> <em>Thinking...</em></div>';\n        return typingIndicator;\n    }\n\n    /**\n     * Create AI message container\n     * @returns {Element} AI message container element\n     */\n    createAIMessageContainer() {\n        const container = document.createElement('div');\n        container.className = 'ai-message ai-ai';\n        const content = document.createElement('div');\n        content.className = 'ai-message-content';\n        container.appendChild(content);\n        return container;\n    }\n\n    /**\n     * Remove typing indicator\n     * @param {Element} typingIndicator - Typing indicator element\n     */\n    removeTypingIndicator(typingIndicator) {\n        if (typingIndicator.parentNode) {\n            typingIndicator.parentNode.removeChild(typingIndicator);\n        }\n    }\n\n    /**\n     * Show command actions UI\n     * @param {string} command - AI command\n     * @param {string} params - Command parameters\n     */\n    showCommandActions(command, params) {\n        console.log('Showing command actions for:', command, params);\n\n        this.pendingCommandData = { command, params };\n\n        const actionsDiv = document.getElementById('aiCommandActions');\n        const previewDiv = document.getElementById('commandPreview');\n        const executeBtn = document.getElementById('executeAiCommandBtn');\n\n        if (!actionsDiv || !previewDiv || !executeBtn) {\n            console.error('Command actions UI elements not found');\n            return;\n        }\n\n        // Set command preview\n        let previewText = `/${command}`;\n        if (params) {\n            previewText += ` [${params}]`;\n        }\n        previewDiv.textContent = previewText;\n\n        // Update button text based on command type\n        const commandNames = {\n            'insertat': 'Insert at Position',\n            'insert': 'Insert at Cursor',\n            'replace': 'Replace Selection',\n            'analyze': 'Analyze Code'\n        };\n\n        executeBtn.innerHTML = `\n      <svg width=\"14\" height=\"14\" viewBox=\"0 0 16 16\" fill=\"currentColor\">\n        <path d=\"M8 0C3.58 0 0 3.58 0 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm3.5 5.5L7.25 10.75 4.5 8l1.5-1.5 1.25 1.25L10 4l1.5 1.5z\"/>\n      </svg>\n      ${commandNames[command] || 'Execute Command'}\n    `;\n\n        // Show the actions UI\n        actionsDiv.style.display = 'block';\n        actionsDiv.scrollIntoView({ behavior: 'smooth', block: 'nearest' });\n    }\n\n    /**\n     * Hide command actions UI\n     */\n    hideCommandActions() {\n        const actionsDiv = document.getElementById('aiCommandActions');\n        if (actionsDiv) {\n            actionsDiv.style.display = 'none';\n        }\n        this.pendingCommandData = null;\n        console.log('Command actions UI hidden');\n    }\n\n    /**\n     * Execute pending command from UI\n     */\n    executePendingCommandFromUI() {\n        if (!this.pendingCommandData) {\n            console.error('No pending command data');\n            return;\n        }\n\n        const { command, params } = this.pendingCommandData;\n        console.log('Executing pending command from UI:', command, params);\n\n        try {\n            aiCommands.executePendingCommand(command, params);\n            console.log('✅ AI command executed successfully from UI:', command);\n            this.hideCommandActions();\n        } catch (error) {\n            console.error('❌ Error executing AI command from UI:', command, error);\n            this.addSystemMessage(`<strong>System:</strong> Error executing command ${command}: ${error.message}`);\n            this.hideCommandActions();\n        }\n    }\n\n    /**\n     * Handle user confirmation for pending commands\n     * @param {string} userMessage - User's message\n     * @param {Element} messagesContainer - Messages container\n     * @returns {boolean} Whether a confirmation was handled\n     */\n    handleUserConfirmation(userMessage, messagesContainer) {\n        const confirmationWords = /\\b(do it|yes|confirm|proceed|execute|go ahead|please|sure|ok)\\b/i;\n        if (!confirmationWords.test(userMessage)) {\n            return false;\n        }\n\n        const lastAiMessage = Array.from(messagesContainer.querySelectorAll('.ai-message.ai-ai')).pop();\n        if (!lastAiMessage) return false;\n\n        const aiMessageText = lastAiMessage.textContent;\n        console.log('Checking for pending commands in:', aiMessageText);\n\n        const commandMatch = aiMessageText.match(/\\/ai:(\\w+)\\s*\\[([^\\]]+)\\]/);\n        if (commandMatch) {\n            const command = commandMatch[1];\n            const params = commandMatch[2];\n            console.log('Found pending command:', command, 'with params:', params);\n\n            // Execute the confirmed command\n            try {\n                aiCommands.executePendingCommand(command, params);\n                console.log('✅ Confirmed command executed successfully:', command);\n\n                // Add success message\n                this.addMessage('ai', `<strong>🤖 :</strong> Command executed successfully! ${command} with parameters: ${params}`);\n\n            } catch (error) {\n                console.error('❌ Error executing confirmed command:', command, error);\n                this.addMessage('ai', `<strong>🤖 :</strong> <span style=\"color: #ff6b6b;\">Error executing confirmed command: ${error.message}</span>`);\n            }\n\n            return true;\n        }\n\n        return false;\n    }\n\n    /**\n     * Update mode selector UI\n     */\n    updateModeSelector() {\n        const modeSelector = document.getElementById('aiMode');\n        if (modeSelector) {\n            modeSelector.value = this.currentMode;\n        }\n    }\n\n    /**\n     * Update auto-approve toggle UI\n     */\n    updateAutoApproveToggle() {\n        const toggle = document.getElementById('autoApproveToggle');\n        const status = document.getElementById('autoApproveStatus');\n\n        if (toggle) toggle.checked = this.isAutoApprove;\n        if (status) {\n            status.textContent = this.isAutoApprove ? 'ON' : 'OFF';\n            status.style.color = this.isAutoApprove ? '#10a37f' : '#888';\n        }\n    }\n\n\n\n\n\n\n\n    /**\n     * Show AI chat modal\n     */\n    showAiChat() {\n        //console.log('================================================================showAiChat called');\n        const modal = document.getElementById('aiChatModal');\n        //console.log('Modal element:', modal);\n\n        if (modal) {\n            modal.style.display = 'block';\n            //console.log('Modal opened');\n\n            // Load settings when modal opens\n            this.loadSettings();\n\n            // Dropdown state is now managed by DropdownManager\n\n            // Focus the input after a short delay\n            setTimeout(() => {\n                const input = document.getElementById('aiChatInput');\n                console.log('Input element:', input);\n                if (input) {\n                    input.focus();\n                    console.log('Input focused');\n                }\n            }, 100);\n        } else {\n            console.error('aiChatModal not found!');\n        }\n    }\n\n    /**\n     * Close AI chat modal\n     */\n    closeAiChat() {\n        const modal = document.getElementById('aiChatModal');\n        if (modal) {\n            modal.style.display = 'none';\n        }\n\n        // Dropdown closing is now handled by the centralized dropdown system\n    }\n\n    /**\n     * Send AI message (alias for sendMessage)\n     */\n    sendAiMessage() {\n        return this.sendMessage();\n    }\n\n    /**\n     * Handle AI chat keydown events (alias for handleChatKeydown)\n     * @param {Event} event - Keydown event\n     */\n    handleAiChatKeydown(event) {\n        return this.handleChatKeydown(event);\n    }\n\n    /**\n     * Change AI mode\n     * @param {string} mode - New mode to switch to\n     */\n    changeAiMode(mode) {\n        this.switchMode(mode);\n        this.showAiChat();\n    }\n\n    /**\n     * Switch AI mode (alias for switchMode for global access)\n     * @param {string} mode - New mode to switch to\n     */\n    switchAiMode(mode) {\n        this.switchMode(mode);\n        // Dropdown closing is now handled by the centralized dropdown system\n    }\n\n\n\n\n\n\n\n\n\n\n\n    /**\n     * AI Quick Actions Handler\n     * @param {string} action - Quick action type\n     */\n    aiQuickAction(action) {\n        // Dropdown closing is now handled by the centralized dropdown system\n\n        // Show the AI chat modal\n        this.showAiChat();\n\n        // Get the AI chat input element\n        const aiInput = document.getElementById('aiChatInput');\n        if (!aiInput) return;\n\n        // Get current editor content and selection\n        const editorContent = this.getCurrentEditorContent();\n        const selectedText = this.getSelectedText();\n        const cursorPos = this.getCursorPosition();\n\n        // Set the appropriate prompt based on the action\n        let prompt = '';\n        switch (action) {\n            case 'review':\n                prompt = \"Please review my G-code for best practices, potential issues, and optimization opportunities. Use the /ai:analyze command to examine the code.\";\n                break;\n            case 'optimize':\n                prompt = \"Please optimize my G-code to improve efficiency, reduce machining time, and maintain accuracy. Use the /ai:analyze command first, then suggest optimizations with /ai:write if needed.\";\n                break;\n            case 'explain':\n                if (selectedText) {\n                    prompt = `Please explain the following G-code section:\n\n${selectedText}\n\nUse the /ai:getlines command to retrieve more context if needed.`;\n                } else {\n                    prompt = \"Please explain how my G-code works and what each section does. Use the /ai:getlines command to examine specific parts of the code.\";\n                }\n                break;\n            case 'analyze':\n                prompt = \"Please analyze my G-code and provide detailed statistics about its structure and complexity. Use the /ai:analyze command to perform the analysis.\";\n                break;\n            case 'debug':\n                prompt = \"Please help me debug my G-code. Look for potential issues, syntax errors, or logical problems. Use the /ai:analyze command to examine the code thoroughly.\";\n                break;\n            case 'convert':\n                prompt = \"Please help me convert or modify my G-code format. Use the /ai:analyze command first to understand the current format, then suggest conversions.\";\n                break;\n            case 'simulate':\n                prompt = \"Please help me understand how this G-code will execute. Use the /ai:analyze command to examine the toolpath and movements.\";\n                break;\n            default:\n                prompt = \"Please help me with my G-code. Feel free to use any of your available commands to interact with the code.\";\n        }\n\n        // Add context to the prompt\n        if (editorContent) {\n            prompt += `\n\nCurrent G-code content (first 500 characters):\n${editorContent.substring(0, 500)}${editorContent.length > 500 ? '...' : ''}`;\n        }\n\n        if (cursorPos) {\n            prompt += `\n\nCursor position: Line ${cursorPos.lineNumber}, Column ${cursorPos.column}`;\n        }\n\n        // Set the prompt in the AI chat input\n        aiInput.value = prompt;\n\n        // Focus the input\n        aiInput.focus();\n\n        // Send the message automatically after a short delay to allow the modal to fully open\n        setTimeout(() => {\n            this.sendMessage();\n        }, 300);\n    }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    /**\n     * Get current editor content\n     * @returns {string} Current editor content\n     */\n    getCurrentEditorContent() {\n        if (window.editorManager) {\n            return window.editorManager.getInputValue();\n        }\n        if (window.editor) {\n            return window.editor.getValue();\n        }\n        return '';\n    }\n\n    /**\n     * Get selected text from editor\n     * @returns {string} Selected text\n     */\n    getSelectedText() {\n        if (window.editor) {\n            const selection = window.editor.getSelection();\n            if (selection && !selection.isEmpty()) {\n                return window.editor.getModel().getValueInRange(selection);\n            }\n        }\n        return '';\n    }\n\n    /**\n     * Get cursor position from editor\n     * @returns {Object|null} Cursor position\n     */\n    getCursorPosition() {\n        if (window.editor) {\n            return window.editor.getPosition();\n        }\n        return null;\n    }\n\n    /**\n     * Test function for AI commands\n     */\n    testAICommands() {\n        console.log('=== TESTING AI COMMANDS EXECUTION ===');\n\n        // Test 1: Basic command parsing\n        console.log('\\n1. Testing AI command parsing...');\n        const testResponse = 'I will analyze your code now. /ai:analyze';\n        console.log('Test response:', testResponse);\n        const result = this.parseAICommands(testResponse);\n        console.log('Parse result:', result);\n\n        // Test 2: Multiple commands\n        console.log('\\n2. Testing multiple AI commands...');\n        const multiCommandResponse = 'Let me help you. /ai:analyze and then /ai:insert[\"Hello World\"]';\n        console.log('Multi-command response:', multiCommandResponse);\n        const multiResult = this.parseAICommands(multiCommandResponse);\n        console.log('Multi-command parse result:', multiResult);\n\n        // Test 3: Direct command execution\n        console.log('\\n3. Testing direct command execution...');\n        try {\n            console.log('Executing /ai:analyze command directly...');\n            aiCommands.executePendingCommand('analyze', '');\n            console.log('✅ Direct command execution successful');\n        } catch (error) {\n            console.error('❌ Direct command execution failed:', error);\n        }\n\n        console.log('\\n=== AI COMMANDS TEST COMPLETE ===');\n    }\n\n    /**\n     * Test editor functionality\n     */\n    testEditor() {\n        console.log('=== EDITOR DEBUG TEST ===');\n        console.log('window.editor exists:', !!window.editor);\n        console.log('window.editorManager exists:', !!window.editorManager);\n\n        if (window.editor) {\n            console.log('Editor value (first 200 chars):', window.editor.getValue().substring(0, 200));\n            console.log('Editor position:', window.editor.getPosition());\n            console.log('Editor model exists:', !!window.editor.getModel());\n\n            // Test inserting text at cursor\n            try {\n                const pos = window.editor.getPosition();\n                console.log('Testing insert at cursor position:', pos);\n\n                const result = window.editor.executeEdits('test', [{\n                    range: {\n                        startLineNumber: pos.lineNumber,\n                        startColumn: pos.column,\n                        endLineNumber: pos.lineNumber,\n                        endColumn: pos.column\n                    },\n                    text: '// EDITOR TEST - This should appear!'\n                }]);\n\n                console.log('Test insert result:', result);\n                console.log('New editor content (first 200 chars):', window.editor.getValue().substring(0, 200));\n\n            } catch (error) {\n                console.error('Test insert failed:', error);\n            }\n        } else {\n            console.error('Editor not available for testing');\n        }\n\n        console.log('=== END EDITOR DEBUG TEST ===');\n    }\n\n    /**\n     * Test function to verify AI agent integration\n     */\n    testAIIntegration() {\n        console.log('Testing AI Agent Integration...');\n\n        // Test getting GGcode content\n        const content = this.getCurrentEditorContent();\n        console.log('Current GGcode content:', content.substring(0, 100) + '...');\n\n        // Test getting cursor position\n        const cursorPos = this.getCursorPosition();\n        console.log('Cursor position:', cursorPos);\n\n        // Test getting selected text\n        const selectedText = this.getSelectedText();\n        console.log('Selected text:', selectedText);\n\n        // Test analysis\n        const analysis = this.analyzeCode ? this.analyzeCode() : {};\n        console.log('GGcode analysis:', analysis);\n\n        console.log('AI Agent integration test completed successfully.');\n    }\n\n\n    /**\n     * Test AI command parsing and execution\n     */\n    testAICommandParsing() {\n        console.log('=== TESTING AI COMMAND PARSING ===');\n\n        const testCases = [\n            'I will analyze your code now. /ai:analyze',\n            'Let me help you with /ai:analyze[]',\n            'Please use /ai:find[\"variable\"] to search',\n            'Try this command: /ai:getlines[1,10]',\n            'Multiple commands: /ai:analyze and /ai:find[\"test\"]',\n            'No commands here, just regular text.',\n            '/ai:unknowncommand should be unknown',\n            '/ai:analyze[\"some param\"] with parameters'\n        ];\n\n        testCases.forEach((testCase, index) => {\n            console.log(`\\n📝 Test Case ${index + 1}: \"${testCase}\"`);\n            console.log('🔍 Parsing result:');\n            const result = this.parseAICommands(testCase);\n            console.log('📝 Clean result:', `\"${result}\"`);\n        });\n\n        console.log('\\n=== AI COMMAND PARSING TEST COMPLETE ===');\n    }\n\n    /**\n     * Direct test of command execution\n     */\n    testDirectCommandExecution() {\n        console.log('=== TESTING DIRECT COMMAND EXECUTION ===');\n\n        const testCommands = [\n            { command: 'analyze', params: '' },\n            { command: 'help', params: '' },\n            { command: 'status', params: '' },\n            { command: 'find', params: '\"variable\"' },\n            { command: 'getlines', params: '1,5' }\n        ];\n\n        testCommands.forEach((cmd, index) => {\n            console.log(`\\n🔧 Test Command ${index + 1}: /ai:${cmd.command}[${cmd.params}]`);\n\n            try {\n                console.log('🚀 Executing command...');\n                aiCommands.executePendingCommand(cmd.command, cmd.params);\n                console.log('✅ Command executed successfully');\n\n                // Add a small delay between commands\n                if (index < testCommands.length - 1) {\n                    setTimeout(() => { }, 100);\n                }\n            } catch (error) {\n                console.error('❌ Command execution failed:', error);\n            }\n        });\n\n        console.log('\\n=== DIRECT COMMAND EXECUTION TEST COMPLETE ===');\n    }\n\n\n\n\n\n\n\n\n\n\n\n\n\n    /**\n     * Initialize the AI Manager\n     * Called when the application starts\n     */\n    initialize() {\n        //console.log('🤖 AI Manager initializing...');\n\n        try {\n            // Load saved settings\n            this.loadSettings();\n\n            // Setup event listeners\n            this.setupEventListeners();\n\n\n            //console.log('✅ AI Manager initialized successfully');\n            return true;\n        } catch (error) {\n            console.error('❌ AI Manager initialization failed:', error);\n            return false;\n        }\n    }\n\n\n\n\n\n    /**\n     * Load saved settings from storage\n     */\n    loadSettings() {\n\n        try {\n            // Load AI mode\n            const savedMode = storageManager.getAiMode();\n            if (savedMode) {\n                this.currentMode = savedMode;\n            }\n\n            // Load auto-approve setting\n            const savedAutoApprove = storageManager.getAiAutoApprove();\n            if (savedAutoApprove !== null) {\n                this.isAutoApprove = savedAutoApprove;\n            }\n\n            // Update UI elements\n            this.updateModeSelector();\n            this.updateAutoApproveToggle();\n\n            // Button state is now managed by DropdownManager\n\n            // console.log('⚙️ AI settings loaded:', {\n            //     mode: this.currentMode,\n            //     autoApprove: this.isAutoApprove\n            // });\n\n\n\n        } catch (error) {\n            console.warn('⚠️ Failed to load AI settings:', error);\n        }\n    }\n\n\n\n\n\n    /**\n     * Setup event listeners\n     */\n    setupEventListeners() {\n        // AI chat input keydown\n\n        const aiChatInput = document.getElementById('aiChatInput');\n        if (aiChatInput) {\n            aiChatInput.addEventListener('keydown', (event) => {\n                this.handleChatKeydown(event);\n            });\n        }\n\n        // Auto-approve toggle\n        const autoApproveToggle = document.getElementById('autoApproveToggle');\n        if (autoApproveToggle) {\n            autoApproveToggle.addEventListener('change', () => {\n                this.toggleAutoApprove();\n            });\n        }\n\n        // Execute AI command button\n        const executeAiCommandBtn = document.getElementById('executeAiCommandBtn');\n        if (executeAiCommandBtn) {\n            executeAiCommandBtn.addEventListener('click', () => {\n                this.executePendingCommandFromUI();\n            });\n        }\n\n        //console.log('🎧 AI event listeners setup complete');\n    }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n}\n\n// Create and export singleton instance\nconst aiManager = new AIManager();\nexport default aiManager;\n","/**\n * Example Manager Module\n * Handles loading and managing example files\n */\n\nimport storageManager from '../utils/storageManager.js';\n\nclass ExampleManager {\n    constructor(apiManager, editorManager) {\n        this.apiManager = apiManager;\n        this.editorManager = editorManager;\n        this.lastOpenedFilename = '';\n\n        // Ensure loadExample is globally available\n        this.ensureGlobalFunction();\n    }\n\n    /**\n     * Show examples modal\n     */\n    showExamples() {\n        if (window.showModal) {\n            window.showModal('examplesModal');\n        }\n        this.loadExamples();\n        // Setup examples search after examples are loaded\n        setTimeout(() => this.setupExamplesSearch(), 100);\n        // Focus search input\n        setTimeout(() => {\n            const searchInput = document.getElementById('examplesSearchInput');\n            if (searchInput) {\n                searchInput.focus();\n            }\n        }, 200);\n    }\n\n    /**\n     * Load examples list\n     */\n    async loadExamples() {\n        const examplesList = document.getElementById('examplesList');\n        if (!examplesList) return;\n\n        try {\n            const examples = await this.apiManager.examples.getList();\n\n            if (examples && examples.length > 0) {\n                examplesList.innerHTML = examples\n                    .map(\n                        (file) => `\n                    <div class=\"example-item\" onclick=\"loadExample('${file.name}')\">\n                        <div class=\"example-title\">${file.name}</div>\n                        <div class=\"example-description\">${file.description || 'Click to load this example'}</div>\n                        <div class=\"example-preview\">${file.preview || ''}</div>\n                    </div>\n                `\n                    )\n                    .join('');\n            } else {\n                examplesList.innerHTML =\n                    '<p style=\"color: #cccccc;\">Failed to load examples</p>';\n            }\n        } catch (error) {\n            examplesList.innerHTML =\n                '<p style=\"color: #cccccc;\">Error loading examples: ' +\n                error.message +\n                '</p>';\n        }\n    }\n\n    /**\n     * Load specific example\n     */\n    async loadExample(filename) {\n        try {\n            const result = await this.apiManager.examples.getContent(filename);\n\n            if (result && result.content) {\n                // Set the correct editor based on file type\n                if (filename.endsWith('.ggcode')) {\n                    if (this.editorManager) {\n                        this.editorManager.setInputValue(result.content);\n                        this.editorManager.setLastOpenedFilename(filename);\n                    }\n                } else if (filename.endsWith('.gcode')) {\n                    if (this.editorManager) {\n                        this.editorManager.setOutputValue(result.content);\n                    }\n                }\n                // Remember filename\n                this.lastOpenedFilename = filename;\n                storageManager.setLastFilename(this.lastOpenedFilename);\n                // Direct compilation after file load\n                if (window.submitGGcode) {\n                    window.submitGGcode(new Event('submit'));\n                }\n                if (window.closeModal) {\n                    window.closeModal('examplesModal');\n                }\n            } else {\n                alert('Failed to load example: No content available');\n            }\n        } catch (error) {\n            alert('Error loading example: ' + error.message);\n        }\n    }\n\n    /**\n     * Setup examples search\n     */\n    setupExamplesSearch() {\n        // TODO: Implement examples search functionality\n        console.log('Examples search setup - TODO');\n    }\n\n    /**\n     * Fallback loadExample function for direct HTML onclick calls\n     * This ensures loadExample is always available globally\n     */\n    ensureGlobalFunction() {\n        if (typeof window !== 'undefined') {\n            window.loadExample = window.loadExample || ((filename) => {\n                if (window.applicationManager) {\n                    window.applicationManager.getExampleManager().loadExample(filename);\n                }\n            });\n        }\n    }\n\n    /**\n     * Get last opened filename\n     */\n    getLastOpenedFilename() {\n        return this.lastOpenedFilename;\n    }\n\n    /**\n     * Set last opened filename\n     */\n    setLastOpenedFilename(filename) {\n        this.lastOpenedFilename = filename;\n    }\n}\n\nexport default ExampleManager;","/**\n * File Operations Module\n * Handles file-related operations like copy, save, clear\n */\n\nimport { FileOperations } from './fileOps.js';\n\nclass FileOperationsManager {\n    constructor(editorManager) {\n        this.editorManager = editorManager;\n        this.fileOperations = new FileOperations();\n    }\n\n    /**\n     * Copy output to clipboard\n     */\n    copyOutput() {\n        if (this.fileOperations) {\n            this.fileOperations.copyOutput();\n        } else {\n            console.error('FileOperations module not available');\n        }\n    }\n\n    /**\n     * Save output to file\n     */\n    saveOutput() {\n        if (this.fileOperations) {\n            this.fileOperations.saveOutput();\n        } else {\n            console.error('FileOperations module not available');\n        }\n    }\n\n    /**\n     * Save GGcode to file\n     */\n    saveGGcode() {\n        if (this.fileOperations) {\n            this.fileOperations.saveGGcode();\n        } else {\n            console.error('FileOperations module not available');\n        }\n    }\n\n    /**\n     * Clear saved content and settings\n     */\n    clearMemory() {\n        if (this.fileOperations) {\n            this.fileOperations.clearMemory();\n        } else {\n            console.error('FileOperations module not available');\n        }\n    }\n\n    /**\n     * Save current content (legacy function for backward compatibility)\n     */\n    saveContent() {\n        if (this.editorManager) {\n            this.editorManager.saveContent();\n        }\n    }\n\n    /**\n     * Sync editors (legacy function for backward compatibility)\n     */\n    syncEditors() {\n        if (this.editorManager) {\n            const ggcodeElement = document.getElementById('ggcode');\n            if (ggcodeElement) {\n                ggcodeElement.value = this.editorManager.getInputValue();\n            }\n        }\n    }\n}\n\nexport default FileOperationsManager;","/**\n * File Operations Module\n *\n * Provides advanced file handling capabilities including:\n * - File validation and type detection\n * - Content processing and transformation\n * - Error handling and recovery\n * - File format conversion utilities\n */\n\nclass FileOperations {\n  constructor() {\n    this.supportedExtensions = {\n      input: ['.ggcode', '.txt'],\n      output: ['.gcode', '.nc', '.cnc'],\n      all: ['.ggcode', '.txt', '.gcode', '.nc', '.cnc'],\n    };\n\n    this.maxFileSize = 10 * 1024 * 1024; // 10MB limit\n  }\n\n  /**\n   * Validate file before processing\n   * @param {File} file - The file to validate\n   * @returns {Object} Validation result with success flag and message\n   */\n  validateFile(file) {\n    if (!file) {\n      return { success: false, message: 'No file provided' };\n    }\n\n    // Check file size\n    if (file.size > this.maxFileSize) {\n      return {\n        success: false,\n        message: `File too large. Maximum size is ${this.maxFileSize / (1024 * 1024)}MB`,\n      };\n    }\n\n    // Check if file is empty\n    if (file.size === 0) {\n      return { success: false, message: 'File is empty' };\n    }\n\n    // Check file extension\n    const extension = this.getFileExtension(file.name);\n    if (!this.supportedExtensions.all.includes(extension)) {\n      return {\n        success: false,\n        message: `Unsupported file type. Supported: ${this.supportedExtensions.all.join(', ')}`,\n      };\n    }\n\n    return { success: true, message: 'File is valid' };\n  }\n\n  /**\n   * Get file extension from filename\n   * @param {string} filename - The filename\n   * @returns {string} The file extension (including dot)\n   */\n  getFileExtension(filename) {\n    const lastDot = filename.lastIndexOf('.');\n    return lastDot > 0 ? filename.slice(lastDot).toLowerCase() : '';\n  }\n\n  /**\n   * Determine file type based on extension and content\n   * @param {string} filename - The filename\n   * @param {string} content - The file content\n   * @returns {string} File type ('ggcode', 'gcode', 'unknown')\n   */\n  determineFileType(filename, content) {\n    const extension = this.getFileExtension(filename);\n\n    // Check by extension first\n    if (this.supportedExtensions.input.includes(extension)) {\n      return 'ggcode';\n    }\n\n    if (this.supportedExtensions.output.includes(extension)) {\n      return 'gcode';\n    }\n\n    // Check by content patterns\n    if (this.isGGcodeContent(content)) {\n      return 'ggcode';\n    }\n\n    if (this.isGcodeContent(content)) {\n      return 'gcode';\n    }\n\n    return 'unknown';\n  }\n\n  /**\n   * Check if content appears to be GGcode\n   * @param {string} content - The file content\n   * @returns {boolean} True if content appears to be GGcode\n   */\n  isGGcodeContent(content) {\n    // Look for GGcode-specific patterns\n    const ggcodePatterns = [\n      /\\blet\\s+\\w+\\s*=/, // Variable declarations\n      /\\bfor\\s*\\(/, // For loops\n      /\\bif\\s*\\(/, // If statements\n      /\\bfunction\\s+\\w+/, // Function definitions\n      /\\/\\/\\/\\s*@/, // Configurator comments\n      /\\b(sin|cos|tan|sqrt|abs)\\s*\\(/, // Math functions\n    ];\n\n    return ggcodePatterns.some((pattern) => pattern.test(content));\n  }\n\n  /**\n   * Check if content appears to be G-code\n   * @param {string} content - The file content\n   * @returns {boolean} True if content appears to be G-code\n   */\n  isGcodeContent(content) {\n    // Look for G-code patterns\n    const gcodePatterns = [\n      /^[GM]\\d+/m, // G or M commands at line start\n      /[XYZ]-?\\d+\\.?\\d*/, // Coordinate values\n      /^N\\d+/m, // Line numbers\n      /F\\d+/, // Feed rates\n      /S\\d+/, // Spindle speeds\n    ];\n\n    return gcodePatterns.some((pattern) => pattern.test(content));\n  }\n\n  /**\n   * Process file content based on type\n   * @param {string} content - The file content\n   * @param {string} type - The file type\n   * @returns {Object} Processed content with metadata\n   */\n  processContent(content, type) {\n    const result = {\n      content: content,\n      type: type,\n      lineCount: 0,\n      hasErrors: false,\n      errors: [],\n      warnings: [],\n    };\n\n    // Count lines\n    result.lineCount = content.split('\\n').length;\n\n    // Type-specific processing\n    if (type === 'ggcode') {\n      this.processGGcodeContent(result);\n    } else if (type === 'gcode') {\n      this.processGcodeContent(result);\n    }\n\n    return result;\n  }\n\n  /**\n   * Process GGcode content for validation and analysis\n   * @param {Object} result - The result object to update\n   */\n  processGGcodeContent(result) {\n    const lines = result.content.split('\\n');\n\n    lines.forEach((line, index) => {\n      const lineNum = index + 1;\n      const trimmed = line.trim();\n\n      if (!trimmed || trimmed.startsWith('//')) return;\n\n      // Check for common syntax issues\n      if (trimmed.includes('let ') && !trimmed.includes('=')) {\n        result.warnings.push(\n          `Line ${lineNum}: Variable declaration without assignment`\n        );\n      }\n\n      // Check for unmatched brackets\n      const openBrackets = (trimmed.match(/\\(/g) || []).length;\n      const closeBrackets = (trimmed.match(/\\)/g) || []).length;\n      if (openBrackets !== closeBrackets) {\n        result.warnings.push(`Line ${lineNum}: Unmatched parentheses`);\n      }\n    });\n  }\n\n  /**\n   * Process G-code content for validation and analysis\n   * @param {Object} result - The result object to update\n   */\n  processGcodeContent(result) {\n    const lines = result.content.split('\\n');\n    let hasMotionCommands = false;\n\n    lines.forEach((line) => {\n      const trimmed = line.trim().toUpperCase();\n\n      if (!trimmed || trimmed.startsWith('(') || trimmed.startsWith(';'))\n        return;\n\n      // Check for motion commands\n      if (/G[0123]/.test(trimmed)) {\n        hasMotionCommands = true;\n      }\n\n      // Check for coordinates without motion commands\n      if (/[XYZ]-?\\d/.test(trimmed) && !/G[0123]/.test(trimmed)) {\n        // This might be modal G-code, which is normal\n      }\n    });\n\n    if (!hasMotionCommands) {\n      result.warnings.push('No motion commands (G0, G1, G2, G3) found');\n    }\n  }\n\n  /**\n   * Read file with progress tracking\n   * @param {File} file - The file to read\n   * @param {Function} onProgress - Progress callback (optional)\n   * @returns {Promise<Object>} Promise resolving to file data\n   */\n  async readFileWithProgress(file, onProgress = null) {\n    return new Promise((resolve, reject) => {\n      const validation = this.validateFile(file);\n      if (!validation.success) {\n        reject(new Error(validation.message));\n        return;\n      }\n\n      const reader = new FileReader();\n\n      reader.onprogress = (e) => {\n        if (onProgress && e.lengthComputable) {\n          const progress = (e.loaded / e.total) * 100;\n          onProgress(progress);\n        }\n      };\n\n      reader.onload = (e) => {\n        try {\n          const content = e.target.result;\n          const type = this.determineFileType(file.name, content);\n          const processed = this.processContent(content, type);\n\n          resolve({\n            filename: file.name,\n            size: file.size,\n            lastModified: new Date(file.lastModified),\n            ...processed,\n          });\n        } catch (error) {\n          reject(error);\n        }\n      };\n\n      reader.onerror = () => {\n        reject(new Error('Failed to read file'));\n      };\n\n      reader.readAsText(file);\n    });\n  }\n\n  /**\n   * Create a downloadable file from content\n   * @param {string} content - The file content\n   * @param {string} filename - The filename\n   * @param {string} mimeType - The MIME type (optional)\n   * @returns {Object} Download information\n   */\n  createDownload(content, filename, mimeType = 'text/plain') {\n    try {\n      const blob = new Blob([content], { type: mimeType });\n      const url = URL.createObjectURL(blob);\n\n      return {\n        success: true,\n        blob: blob,\n        url: url,\n        filename: filename,\n        size: blob.size,\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: error.message,\n      };\n    }\n  }\n\n  /**\n   * Convert content between formats\n   * @param {string} content - The content to convert\n   * @param {string} fromType - Source format\n   * @param {string} toType - Target format\n   * @returns {Object} Conversion result\n   */\n  convertFormat(content, fromType, toType) {\n    if (fromType === toType) {\n      return { success: true, content: content };\n    }\n\n    // Currently no format conversion is implemented\n    // This is a placeholder for future format conversion features\n    return {\n      success: false,\n      error: `Conversion from ${fromType} to ${toType} not supported`,\n    };\n  }\n\n  /**\n   * Get file statistics\n   * @param {string} content - The file content\n   * @param {string} type - The file type\n   * @returns {Object} File statistics\n   */\n  getFileStats(content, type) {\n    const lines = content.split('\\n');\n    const stats = {\n      totalLines: lines.length,\n      nonEmptyLines: lines.filter((line) => line.trim()).length,\n      commentLines: 0,\n      codeLines: 0,\n      size: new Blob([content]).size,\n    };\n\n    if (type === 'ggcode') {\n      stats.commentLines = lines.filter((line) =>\n        line.trim().startsWith('//')\n      ).length;\n      stats.codeLines = stats.nonEmptyLines - stats.commentLines;\n    } else if (type === 'gcode') {\n      stats.commentLines = lines.filter((line) => {\n        const trimmed = line.trim();\n        return trimmed.startsWith('(') || trimmed.startsWith(';');\n      }).length;\n      stats.codeLines = stats.nonEmptyLines - stats.commentLines;\n    }\n\n    return stats;\n  }\n\n  /**\n   * Copy output G-code to clipboard\n   */\n  copyOutput() {\n    // Find the copy button for visual feedback\n    const copyButton = document.querySelector('button[onclick*=\"copyOutput\"], button[title*=\"Copy output\"]');\n\n    if (\n      !window.outputEditor ||\n      typeof window.outputEditor.getValue !== 'function'\n    ) {\n      alert('No output content available to copy');\n      return;\n    }\n\n    const content = window.outputEditor.getValue();\n    if (!content.trim()) {\n      alert('No output content to copy');\n      return;\n    }\n\n    navigator.clipboard\n      .writeText(content)\n      .then(() => {\n        //console.log('Output copied to clipboard');\n\n        // Show success feedback on the button\n        if (copyButton) {\n          copyButton.classList.add('copy-success');\n          setTimeout(() => {\n            copyButton.classList.remove('copy-success');\n          }, 800);\n        }\n      })\n      .catch((err) => {\n        console.error('Failed to copy output:', err);\n        alert('Failed to copy: ' + err.message);\n      });\n  }\n\n  /**\n   * Save output G-code to file\n   */\n  saveOutput() {\n    // Find the export/save button to show loading on it\n    const exportButton = document.querySelector('button[onclick*=\"saveOutput\"], button[title*=\"Save output\"]');\n\n    if (\n      !window.outputEditor ||\n      typeof window.outputEditor.getValue !== 'function'\n    ) {\n      alert('No output content available to save');\n      return;\n    }\n\n    const text = window.outputEditor.getValue();\n    if (!text.trim()) {\n      alert('No output content to save');\n      return;\n    }\n\n    // Show loading on the export button\n    let restoreButton = null;\n    if (exportButton && window.navigationManager) {\n      restoreButton = window.navigationManager.showButtonLoading(exportButton, \"Exporting...\");\n    }\n\n    // Get last opened filename for suggestion\n    let lastFilename = '';\n    try {\n      lastFilename = localStorage.getItem('ggcode_last_filename') || '';\n    } catch (error) {\n      console.warn('Failed to get filename from storage:', error);\n    }\n\n    // Generate suggested filename\n    let suggestedFilename = '';\n    if (lastFilename) {\n      let base = lastFilename;\n      if (base.endsWith('.gcode') || base.endsWith('.ggcode')) {\n        base = base.replace(/\\.(gcode|ggcode)$/i, '');\n      } else if (base.lastIndexOf('.') > 0) {\n        base = base.slice(0, base.lastIndexOf('.'));\n      }\n      suggestedFilename = base + '.g.gcode';\n    }\n    if (!suggestedFilename) suggestedFilename = 'output.g.gcode';\n\n    // Prompt user for filename\n    const userFilename = window.prompt('Save G-code as:', suggestedFilename);\n    if (!userFilename) {\n      if (restoreButton) restoreButton();\n      return; // User cancelled\n    }\n\n    try {\n      // Create and download file\n      const utf8Bytes = new TextEncoder().encode(text);\n      const blob = new Blob([utf8Bytes], { type: 'application/octet-stream' });\n      const a = document.createElement('a');\n      a.href = URL.createObjectURL(blob);\n      a.download = userFilename;\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      URL.revokeObjectURL(a.href);\n\n      console.log('Output saved as:', userFilename);\n    } catch (error) {\n      console.error('Failed to save output:', error);\n      alert('Failed to save file: ' + error.message);\n    } finally {\n      // Always restore the button state\n      if (restoreButton) restoreButton();\n    }\n  }\n\n  /**\n   * Save GGcode input to file\n   */\n  saveGGcode() {\n    // Find the save button to show loading on it\n    const saveButton = document.querySelector('button[onclick*=\"saveGGcode\"], button[title*=\"Save GGcode input\"]');\n\n    if (!window.editor || typeof window.editor.getValue !== 'function') {\n      alert('No input content available to save');\n      return;\n    }\n\n    const content = window.editor.getValue();\n    if (!content.trim()) {\n      alert('No input content to save');\n      return;\n    }\n\n    // Show loading on the save button\n    let restoreButton = null;\n    if (saveButton && window.navigationManager) {\n      restoreButton = window.navigationManager.showButtonLoading(saveButton, \"Saving...\");\n    }\n\n    try {\n      // Get last opened filename for suggestion\n      let lastFilename = '';\n      try {\n        lastFilename = localStorage.getItem('ggcode_last_filename') || '';\n      } catch (error) {\n        console.warn('Failed to get filename from storage:', error);\n      }\n\n      // Generate suggested filename\n      let suggestedFilename =\n        lastFilename && lastFilename.endsWith('.ggcode') ? lastFilename : '';\n      if (!suggestedFilename && lastFilename) {\n        const dot = lastFilename.lastIndexOf('.');\n        suggestedFilename =\n          (dot > 0 ? lastFilename.slice(0, dot) : lastFilename) + '.ggcode';\n      }\n      if (!suggestedFilename) suggestedFilename = 'input.ggcode';\n\n      // Prompt user for filename\n      const userFilename = window.prompt('Save GGcode as:', suggestedFilename);\n      if (!userFilename) {\n        if (restoreButton) restoreButton();\n        return; // User cancelled\n      }\n\n      // Create and download file\n      const blob = new Blob([content], { type: 'text/plain' });\n      const a = document.createElement('a');\n      a.href = URL.createObjectURL(blob);\n      a.download = userFilename;\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      URL.revokeObjectURL(a.href);\n\n      console.log('GGcode saved as:', userFilename);\n    } catch (error) {\n      console.error('Failed to save GGcode:', error);\n      alert('Failed to save file: ' + error.message);\n    } finally {\n      // Always restore the button state\n      if (restoreButton) restoreButton();\n    }\n  }\n\n  /**\n   * Clear all saved content and settings\n   */\n  clearMemory() {\n    if (\n      !confirm('This will clear all saved content and settings. Are you sure?')\n    ) {\n      return;\n    }\n\n    try {\n      // Clear localStorage\n      localStorage.removeItem('ggcode_input_content');\n      localStorage.removeItem('ggcode_output_content');\n      localStorage.removeItem('ggcode_last_filename');\n      localStorage.removeItem('ggcode_auto_compile');\n\n      // Reset editors if available\n      if (window.editor && typeof window.editor.setValue === 'function') {\n        window.editor.setValue('');\n      }\n      if (\n        window.outputEditor &&\n        typeof window.outputEditor.setValue === 'function'\n      ) {\n        window.outputEditor.setValue('');\n      }\n\n      // Reset auto-compile checkbox\n      const autoCheckbox = document.getElementById('autoCompileCheckbox');\n      if (autoCheckbox) {\n        autoCheckbox.checked = false;\n      }\n\n      console.log('Memory cleared successfully');\n      alert('Memory cleared successfully!');\n    } catch (error) {\n      console.error('Failed to clear memory:', error);\n      alert('Failed to clear memory: ' + error.message);\n    }\n  }\n}\n\n// Create global instance\nconst fileOperations = new FileOperations();\n\n// Export for module use\nexport { FileOperations, fileOperations };\n\n// Export global instance\nwindow.fileOperations = fileOperations;\n","/**\n * FileTreeViewer - GitHub-style file tree for MD documents\n * Integrates with the GGcode help system to show markdown files in a tree structure\n */\nclass FileTreeViewer {\n    constructor(container) {\n        this.container = container;\n        this.currentFile = null;\n        this.treeData = {};\n        this.markdownContent = {};\n\n        this.initializeAsync();\n    }\n\n    /**\n     * Initialize asynchronously to avoid timing issues\n     */\n    async initializeAsync() {\n        await this.initialize();\n    }\n\n    /**\n     * Initialize the file tree viewer\n     */\n    async initialize() {\n        console.log('FileTreeViewer: Starting initialization');\n        await this.scanMarkdownFiles();\n        this.createTreeStructure();\n        this.render();\n        this.bindEvents();\n        console.log('FileTreeViewer: Initialization complete');\n    }\n\n    /**\n     * Scan for available Markdown files\n     */\n    async scanMarkdownFiles() {\n        try {\n            // Get markdown files from the help content directory\n            const response = await fetch('/api/help/markdown-files');\n            const data = await response.json();\n\n            if (data.success && data.files) {\n                this.markdownFiles = data.files;\n                await this.loadMarkdownContent();\n            }\n        } catch (error) {\n            console.error('Error scanning for markdown files:', error);\n            // Fallback: use static file list\n            this.markdownFiles = [\n                { path: 'README.md', name: 'README.md', type: 'file' },\n                { path: 'MULTILANGUAGE_GUIDE.md', name: 'MULTILANGUAGE_GUIDE.md', type: 'file' }\n            ];\n            await this.loadMarkdownContent();\n        }\n    }\n\n    /**\n     * Load markdown content for all files\n     */\n    async loadMarkdownContent() {\n        for (const file of this.markdownFiles) {\n            if (file.type === 'file') {\n                try {\n                    const response = await fetch(`/api/help/markdown-content?file=${encodeURIComponent(file.path)}`);\n                    const data = await response.json();\n                    if (data.success) {\n                        this.markdownContent[file.path] = data.content;\n                    }\n                } catch (error) {\n                    console.error(`Error loading content for ${file.path}:`, error);\n                }\n            }\n        }\n    }\n\n    /**\n     * Create file tree data structure\n     */\n    createTreeStructure() {\n        const tree = {};\n\n        this.markdownFiles.forEach(file => {\n            if (file.type === 'file') {\n                const pathParts = file.path.split('/');\n                let current = tree;\n\n                pathParts.forEach((part, index) => {\n                    if (!current[part]) {\n                        current[part] = {\n                            type: index === pathParts.length - 1 ? 'file' : 'folder',\n                            path: pathParts.slice(0, index + 1).join('/'),\n                            children: index === pathParts.length - 1 ? null : {}\n                        };\n                    }\n                    if (current[part].type === 'folder') {\n                        current = current[part].children;\n                    }\n                });\n            }\n        });\n\n        this.treeData = tree;\n    }\n\n    /**\n     * Render the file tree\n     */\n    render() {\n        const html = `\n        <div class=\"file-tree-content\">\n          ${this.renderTreeNode(this.treeData, '', 0)}\n        </div>\n      </div>\n    `;\n\n        this.container.innerHTML = html;\n    }\n\n    /**\n     * Render a single tree node recursively\n     */\n    renderTreeNode(node, path, level) {\n        if (!node || typeof node !== 'object') return '';\n\n        let html = '<ul class=\"tree-node-list\">';\n\n        Object.keys(node).forEach(key => {\n            const item = node[key];\n            const itemPath = path ? `${path}/${key}` : key;\n            const indentation = level * 16;\n\n            if (item.type === 'file') {\n                html += `\n          <li class=\"tree-node file-node ${this.currentFile === itemPath ? 'active' : ''}\"\n              data-path=\"${itemPath}\"\n              data-type=\"file\"\n              style=\"padding-left: ${indentation}px;\">\n            <div class=\"node-content\">\n              <span class=\"file-icon\">📄</span>\n              <span class=\"file-name\">${key}</span>\n            </div>\n          </li>\n        `;\n            } else if (item.type === 'folder') {\n                const isExpanded = this.isExpanded(itemPath);\n                html += `\n          <li class=\"tree-node folder-node\"\n              data-path=\"${itemPath}\"\n              data-type=\"folder\"\n              style=\"padding-left: ${indentation}px;\">\n            <div class=\"node-content\">\n              <span class=\"expand-icon ${isExpanded ? 'expanded' : ''}\">\n                ${isExpanded ? '📂' : '📁'}\n              </span>\n              <span class=\"folder-name\">${key}</span>\n            </div>\n            ${isExpanded ? this.renderTreeNode(item.children, itemPath, level + 1) : ''}\n          </li>\n        `;\n            }\n        });\n\n        html += '</ul>';\n        return html;\n    }\n\n    /**\n     * Check if a folder is expanded\n     */\n    isExpanded(path) {\n        return this.expandedFolders && this.expandedFolders.has(path);\n    }\n\n    /**\n     * Toggle folder expansion\n     */\n    toggleFolder(path) {\n        if (!this.expandedFolders) {\n            this.expandedFolders = new Set();\n        }\n\n        if (this.expandedFolders.has(path)) {\n            this.expandedFolders.delete(path);\n        } else {\n            this.expandedFolders.add(path);\n        }\n\n        this.render();\n    }\n\n    /**\n     * Select a file for viewing\n     */\n    selectFile(path) {\n        this.currentFile = path;\n\n        // Update the displayed file\n        this.updateDisplayedFile(path);\n\n        // Update the UI\n        this.render();\n    }\n\n    /**\n     * Bind event listeners\n     */\n    bindEvents() {\n        this.container.addEventListener('click', (e) => {\n            const node = e.target.closest('.tree-node');\n            if (!node) return;\n\n            const path = node.dataset.path;\n            const type = node.dataset.type;\n\n            if (type === 'folder') {\n                this.toggleFolder(path);\n            } else if (type === 'file') {\n                this.selectFile(path);\n            }\n        });\n\n        // Refresh button\n        this.container.addEventListener('click', (e) => {\n            if (e.target.closest('.refresh-btn')) {\n                this.refresh();\n            }\n        });\n    }\n\n    /**\n     * Copy file content to clipboard\n     */\n    async copyFileContent() {\n        if (!this.currentFile || !this.markdownContent[this.currentFile]) return;\n\n        try {\n            await navigator.clipboard.writeText(this.markdownContent[this.currentFile]);\n            // Could add a toast notification here\n        } catch (error) {\n            console.error('Error copying content:', error);\n        }\n    }\n\n    /**\n     * Refresh the file tree\n     */\n    async refresh() {\n        this.treeData = {};\n        this.markdownContent = {};\n        this.currentFile = null;\n        await this.scanMarkdownFiles();\n        this.createTreeStructure();\n        this.render();\n    }\n\n    /**\n     * Load a file and display it in the content area\n     */\n    async loadAndDisplayFile(filePath) {\n        try {\n            console.log('FileTreeViewer: Loading file:', filePath);\n\n            // Fetch file content from API\n            const response = await fetch(`/api/help/markdown-content?file=${encodeURIComponent(filePath)}`);\n            const data = await response.json();\n\n            if (data.success && data.content) {\n                // Display the file content\n                this.displayFileContent(filePath, data.content);\n\n                // Switch to MD file view mode\n                this.triggerViewModeChange('file');\n            } else {\n                console.error('Failed to load file content:', data.error);\n                this.displayFileContent(filePath, 'Failed to load file content.');\n            }\n        } catch (error) {\n            console.error('Error loading file:', error);\n            this.displayFileContent(filePath, 'Error loading file.');\n        }\n    }\n\n    /**\n     * Display file content in the appropriate area\n     */\n    displayFileContent(filePath, content) {\n        const titleElement = document.getElementById('currentFileTitle');\n        const contentElement = document.getElementById('mdContentBody');\n\n        if (titleElement) {\n            // Extract just the filename from the path\n            const fileName = filePath.split('/').pop();\n            titleElement.textContent = fileName;\n        }\n\n        if (contentElement) {\n            // Simple markdown-like rendering (basic)\n            const renderedHtml = this.renderMarkdownContent(content);\n            contentElement.innerHTML = renderedHtml;\n        } else {\n            console.warn('FileTreeViewer: mdContentBody not found');\n        }\n    }\n\n    /**\n     * Basic markdown rendering\n     */\n    renderMarkdownContent(content) {\n        if (!content) return '<p>No content available.</p>';\n\n        return content\n            .split('\\n')\n            .map(line => {\n                // Headers\n                if (line.startsWith('# ')) {\n                    return `<h1>${line.substring(2)}</h1>`;\n                } else if (line.startsWith('## ')) {\n                    return `<h2>${line.substring(3)}</h2>`;\n                } else if (line.startsWith('### ')) {\n                    return `<h3>${line.substring(4)}</h3>`;\n                }\n                // Empty lines\n                else if (line.trim() === '') {\n                    return '<br>';\n                }\n                // Regular paragraphs\n                else {\n                    return `<p>${line}</p>`;\n                }\n            })\n            .join('');\n    }\n\n    /**\n     * Update displayed file in the content area\n     */\n    async updateDisplayedFile(filePath) {\n        try {\n            // Fetch file content\n            const response = await fetch(`/api/help/markdown-content?file=${encodeURIComponent(filePath)}`);\n            const data = await response.json();\n\n            if (data.success && data.content) {\n                // Use HelpSystem to update the display\n                if (window.applicationManager && window.applicationManager.helpSystem) {\n                    window.applicationManager.helpSystem.showMarkdownFile(filePath, data.content);\n                } else {\n                    // Fallback: update directly\n                    const mdContentBody = document.getElementById('mdContentBody');\n                    const fileNameSpan = document.getElementById('fileName');\n\n                    if (fileNameSpan) {\n                        fileNameSpan.textContent = filePath.split('/').pop();\n                    }\n\n                    if (mdContentBody) {\n                        mdContentBody.textContent = data.content;\n                    }\n                }\n            } else {\n                console.error('Failed to load file:', filePath);\n            }\n        } catch (error) {\n            console.error('Error loading file:', error);\n        }\n    }\n}\n\nexport default FileTreeViewer;","/**\n * Help System Module\n * Manages help content, search, and language selection\n */\n\nimport storageManager from '../utils/storageManager.js';\nimport FileTreeViewer from './fileTreeViewer.js';\n\nclass HelpSystem {\n    constructor(apiManager) {\n        this.apiManager = apiManager;\n        this.dictionaryCache = null;\n        this.annotationsCache = null;\n        this.fileTreeViewer = null;\n    }\n\n    /**\n     * Show help modal\n     */\n    async showHelp() {\n        if (window.showModal) {\n            window.showModal('helpModal');\n        }\n\n        // Get saved language preference or default to English\n        const savedLanguage = storageManager.getSelectedLanguage();\n\n        // Load help content when modal opens\n        this.loadHelpContent(savedLanguage);\n        // Setup language selector\n        await this.setupLanguageSelector();\n\n        // Initialize language dropdown display from saved preference\n        this.initializeLanguageSelectorDisplay();\n\n        // Add copy buttons after modal is shown\n        setTimeout(() => this.addCopyButtons(), 200);\n        // Setup help search\n        this.setupHelpSearch();\n\n        // Load dictionary data for integration\n        this.loadMillDictionaryData();\n\n        // Initialize file tree viewer\n        this.initializeFileTreeViewer();\n\n        // Initialize documentation controls\n        this.initializeDocumentationControls();\n\n        // Focus search input\n        setTimeout(() => {\n            const searchInput = document.getElementById('helpSearchInput');\n            if (searchInput) {\n                searchInput.focus();\n            }\n        }, 200);\n    }\n\n    /**\n     * Load help content\n     */\n    async loadHelpContent(language = 'en') {\n        const helpContent = document.getElementById('helpContent');\n        if (!helpContent) return;\n\n        try {\n            // Show loading indicator\n            helpContent.innerHTML =\n                '<div class=\"loading-indicator\"><p>Loading help content...</p></div>';\n\n            const result = await this.apiManager.help.getContent(language);\n\n            if (result && result.data) {\n                this.renderHelpContent(result.data);\n            } else {\n                helpContent.innerHTML =\n                    '<div class=\"error-message\"><p>Failed to load help content</p></div>';\n            }\n        } catch (error) {\n            helpContent.innerHTML =\n                '<div class=\"error-message\"><p>Error loading help content: ' +\n                error.message +\n                '</p></div>';\n        }\n    }\n\n    /**\n     * Render help content\n     */\n    renderHelpContent(data) {\n        const helpContent = document.getElementById('helpContent');\n        if (!helpContent || !data || !data.sections) {\n            console.error('Invalid help content data or missing container');\n            return;\n        }\n\n        let html = '';\n\n        // Render each section\n        Object.values(data.sections).forEach((section) => {\n            html += `<div class=\"help-section-card\" data-section=\"${section.id}\">`;\n            html += `<h3 class=\"help-section-title\">${section.title}</h3>`;\n            html += `<div class=\"help-section-content\">`;\n\n            // Render section content\n            if (section.content && Array.isArray(section.content)) {\n                section.content.forEach((item) => {\n                    switch (item.type) {\n                        case 'paragraph':\n                            html += `<p>${item.text}</p>`;\n                            break;\n\n                        case 'subsection':\n                            html += `<h4>${item.title}</h4>`;\n                            if (item.description) {\n                                html += `<p>${item.description}</p>`;\n                            }\n                            if (item.additionalInfo) {\n                                html += `<p>${item.additionalInfo}</p>`;\n                            }\n                            if (item.code) {\n                                html += `<pre><code>${item.code}</code></pre>`;\n                            }\n                            if (item.list) {\n                                html += `<ul>`;\n                                item.list.forEach((listItem) => {\n                                    html += `<li>${listItem}</li>`;\n                                });\n                                html += `</ul>`;\n                            }\n                            break;\n\n                        case 'list':\n                            if (item.title) {\n                                html += `<h4>${item.title}</h4>`;\n                            }\n                            if (item.description) {\n                                html += `<p>${item.description}</p>`;\n                            }\n                            html += `<ul>`;\n                            item.items.forEach((listItem) => {\n                                html += `<li>${listItem}</li>`;\n                            });\n                            html += `</ul>`;\n                            break;\n\n                        case 'code':\n                            html += `<pre><code>${item.code}</code></pre>`;\n                            break;\n\n                        default:\n                            console.warn('Unknown help content type:', item.type);\n                    }\n                });\n            }\n\n            html += `</div>`;\n            html += `</div>`;\n        });\n\n        helpContent.innerHTML = html;\n\n        // Add copy buttons to code blocks after rendering\n        setTimeout(() => this.addCopyButtons(), 100);\n    }\n\n    /**\n     * Setup language selector - dropdown logic handled by main dropdown system\n     */\n    async setupLanguageSelector() {\n        // Language dropdown is handled by the centralized dropdown system in main.js\n        // This method is kept for backward compatibility\n        console.log('Language selector setup delegated to centralized dropdown system');\n    }\n\n    /**\n     * Initialize language selector display with saved preference\n     */\n    initializeLanguageSelectorDisplay() {\n        const savedLanguage = storageManager.getSelectedLanguage();\n        const selectSelected = document.getElementById('selectSelected');\n\n        if (!selectSelected || !savedLanguage || savedLanguage === 'en') {\n            return; // Already shows English (default)\n        }\n\n        // Find the corresponding language option to get its display information\n        const languageMap = {\n            'es': { flag: '🇪🇸', name: 'Español' },\n            'fr': { flag: '🇫🇷', name: 'Français' },\n            'de': { flag: '🇩🇪', name: 'Deutsch' },\n            'it': { flag: '🇮🇹', name: 'Italiano' },\n            'pt': { flag: '🇵🇹', name: 'Português' },\n            'ru': { flag: '🇷🇺', name: 'Русский' },\n            'zh': { flag: '🇨🇳', name: '中文' },\n            'ja': { flag: '🇯🇵', name: '日本語' },\n            'ko': { flag: '🇰🇷', name: '한국어' },\n            'ar': { flag: '🇸🇦', name: 'العربية' },\n            'he': { flag: '🇮🇱', name: 'עברית' },\n            'tr': { flag: '🇹🇷', name: 'Türkçe' },\n            'pl': { flag: '🇵🇱', name: 'Polski' },\n            'nl': { flag: '🇳🇱', name: 'Nederlands' }\n        };\n\n        const selectedLanguageInfo = languageMap[savedLanguage];\n        if (selectedLanguageInfo) {\n            selectSelected.innerHTML = `\n                <span class=\"flag-icon flag-${savedLanguage}\">${selectedLanguageInfo.flag}</span>\n                <span class=\"language-name\">${selectedLanguageInfo.name}</span>\n                <svg width=\"12\" height=\"12\" viewBox=\"0 0 16 16\" fill=\"#10a37f\">\n                    <path d=\"M4.427 6.427L8 10l3.573-3.573L10.354 5 8 7.354 5.646 5z\" />\n                </svg>\n            `;\n            console.log(`HelpSystem: Language selector updated to show ${selectedLanguageInfo.name} (${savedLanguage})`);\n        }\n    }\n\n    /**\n     * Load mill dictionary and annotations data for enhanced G-code completion\n     */\n    async loadMillDictionaryData() {\n        try {\n            // Load dictionary data\n            if (!this.dictionaryCache) {\n                const dictionaryResponse = await fetch('/mill-dictionary.json');\n                if (dictionaryResponse.ok) {\n                    this.dictionaryCache = await dictionaryResponse.json();\n                    console.log('HelpSystem: Mill dictionary loaded with', Object.keys(this.dictionaryCache).length, 'commands');\n                } else {\n                    console.warn('HelpSystem: Could not load mill-dictionary.json');\n                }\n            }\n\n            // Load annotations data\n            if (!this.annotationsCache) {\n                const annotationsResponse = await fetch('/mill-annotations.json');\n                if (annotationsResponse.ok) {\n                    const annotationsJson = await annotationsResponse.json();\n                    this.annotationsCache = annotationsJson;\n                    console.log('HelpSystem: Mill annotations loaded with', Object.keys(this.annotationsCache).length, 'entries');\n                } else {\n                    console.warn('HelpSystem: Could not load mill-annotations.json');\n                }\n            }\n\n            // Integrate dictionary data with Monaco completion\n            this.integrateMillDictionaryWithMonaco();\n\n        } catch (error) {\n            console.warn('HelpSystem: Failed to load mill dictionary data:', error.message);\n        }\n    }\n\n    /**\n     * Integrate mill dictionary data with Monaco auto-completion\n     */\n    integrateMillDictionaryWithMonaco() {\n        if (!this.dictionaryCache) {\n            console.warn('HelpSystem: No dictionary cache available for Monaco integration');\n            return;\n        }\n\n        // Get Monaco editor instance\n        const editor = window.editorManager?.getEditors?.()?.input;\n        if (!editor) {\n            console.warn('HelpSystem: Monaco editor not available for dictionary integration');\n            return;\n        }\n\n        // Create comprehensive G-code completions from dictionary data\n        const millCompletions = this.convertDictionaryToCompletions(this.dictionaryCache);\n\n        // Update existing completion provider with mill data\n        console.log(`HelpSystem: Enhanced Monaco completion with ${millCompletions.length} official G-code definitions`);\n\n        // Note: The actual integration happens in MonacoEditorManager,\n        // we can signal it to refresh its completions or use the existing system\n        this.signalCompletionRefresh();\n    }\n\n    /**\n     * Convert dictionary JSON to Monaco completion items\n     */\n    convertDictionaryToCompletions(dictionary) {\n        const completions = [];\n\n        for (const [gcode, definition] of Object.entries(dictionary)) {\n            let description = definition.desc || 'G-code command';\n            let detail = gcode;\n            let usage = '';\n\n            // Handle different dictionary formats\n            if (definition.sub) {\n                // Create usage string from parameters\n                const params = Object.keys(definition.sub).join(' ');\n                usage = `${gcode} ${params}`;\n                detail = usage;\n            } else if (typeof definition === 'string') {\n                description = definition;\n            }\n\n            completions.push({\n                label: gcode,\n                kind: monaco.languages.CompletionItemKind.Keyword,\n                detail: detail,\n                documentation: {\n                    value: `**${gcode}** - ${description}\\n\\nUsage: \\`${usage || gcode}\\``\n                },\n                insertText: gcode,\n                sortText: gcode.startsWith('G') ? `01${gcode}` : `02${gcode}`\n            });\n        }\n\n        return completions;\n    }\n\n    /**\n     * Signal that completions should be refreshed with mill dictionary data\n     */\n    signalCompletionRefresh() {\n        console.log('HelpSystem: Signaling completion refresh with mill dictionary integration');\n\n        // The MonacoEditorManager completion provider will automatically use the dictionary data\n        // since it checks for this.helpSystem?.dictionaryCache and this.helpSystem?.annotationsCache\n        // in _getMillDictionaryCompletions and _getMillAnnotationsCompletions methods\n        console.log('HelpSystem: Mill dictionary data loaded and available for completion provider');\n        console.log(`Dictionary entries: ${Object.keys(this.dictionaryCache || {}).length}`);\n        console.log(`Annotations entries: ${Object.keys(this.annotationsCache || {}).length}`);\n    }\n\n    /**\n     * Add copy buttons to code blocks\n     */\n    addCopyButtons() {\n        const preElements = document.querySelectorAll(\n            '.help-content pre, #helpContent pre'\n        );\n        preElements.forEach((pre) => {\n            // Check if copy button already exists\n            if (pre.querySelector('.copy-button')) return;\n\n            const copyButton = document.createElement('button');\n            copyButton.className = 'copy-button';\n            copyButton.textContent = 'Copy';\n            copyButton.style.cssText = `\n                position: absolute;\n                top: 8px;\n                right: 8px;\n                background: #007acc;\n                color: white;\n                border: none;\n                padding: 4px 8px;\n                border-radius: 3px;\n                font-size: 12px;\n                cursor: pointer;\n                z-index: 1;\n            `;\n\n            // Make pre element relative for absolute positioning\n            pre.style.position = 'relative';\n\n            copyButton.onclick = () => {\n                const code = pre.textContent.replace('Copy', '').trim();\n                navigator.clipboard\n                    .writeText(code)\n                    .then(() => {\n                        copyButton.textContent = 'Copied!';\n                        copyButton.style.background = '#28a745';\n                        setTimeout(() => {\n                            copyButton.textContent = 'Copy';\n                            copyButton.style.background = '#007acc';\n                        }, 2000);\n                    })\n                    .catch((err) => {\n                        console.error('Failed to copy: ', err);\n                        copyButton.textContent = 'Error';\n                        copyButton.style.background = '#dc3545';\n                        setTimeout(() => {\n                            copyButton.textContent = 'Copy';\n                            copyButton.style.background = '#007acc';\n                        }, 2000);\n                    });\n            };\n\n            pre.appendChild(copyButton);\n        });\n    }\n\n    /**\n     * Setup help search\n     */\n    setupHelpSearch() {\n        const searchInput = document.getElementById('helpSearchInput');\n        if (!searchInput) {\n            console.warn('Help search input not found');\n            return;\n        }\n\n        // Store original content for search reset\n        this.originalSections = this.originalSections || Array.from(document.querySelectorAll('.help-section-card'));\n\n        searchInput.addEventListener('input', (e) => {\n            const searchTerm = e.target.value.toLowerCase().trim();\n\n            if (searchTerm === '') {\n                // Reset to show all sections\n                this.showAllSections();\n                this.removeAllHighlights();\n            } else {\n                // Perform search\n                this.performSearch(searchTerm);\n            }\n        });\n\n        console.log('Help search functionality initialized');\n\n        // Add clear search button\n        this.addClearSearchButton(searchInput);\n\n        // Add CSS for search highlights\n        this.addSearchHighlightStyles();\n    }\n\n    /**\n     * Add clear search button\n     */\n    addClearSearchButton(searchInput) {\n        // Create clear button\n        const clearButton = document.createElement('button');\n        clearButton.type = 'button';\n        clearButton.textContent = '✕';\n        clearButton.title = 'Clear search';\n        clearButton.style.cssText = `\n            position: absolute;\n            right: 10px;\n            top: 50%;\n            transform: translateY(-50%);\n            background: none;\n            border: none;\n            color: #666;\n            cursor: pointer;\n            font-size: 14px;\n            padding: 2px;\n            display: none;\n        `;\n\n        // Style on hover\n        clearButton.addEventListener('mouseenter', () => {\n            clearButton.style.color = '#ff4444';\n        });\n        clearButton.addEventListener('mouseleave', () => {\n            clearButton.style.color = '#666';\n        });\n\n        // Add click handler\n        clearButton.addEventListener('click', () => {\n            searchInput.value = '';\n            searchInput.dispatchEvent(new Event('input'));\n            searchInput.focus();\n        });\n\n        // Position the search input as relative for absolute positioning\n        searchInput.style.position = 'relative';\n        searchInput.parentNode.appendChild(clearButton);\n\n        // Show/hide clear button based on input value\n        searchInput.addEventListener('input', () => {\n            clearButton.style.display = searchInput.value.trim() ? 'block' : 'none';\n        });\n    }\n\n    /**\n     * Add CSS styles for search highlights\n     */\n    addSearchHighlightStyles() {\n        if (document.getElementById('help-search-styles')) return;\n\n        const style = document.createElement('style');\n        style.id = 'help-search-styles';\n        style.textContent = `\n            .search-highlight {\n                background-color: #ffeb3b !important;\n                color: #000 !important;\n                padding: 2px 1px;\n                border-radius: 2px;\n                font-weight: bold;\n                box-shadow: 0 0 0 1px rgba(255, 193, 7, 0.3);\n            }\n\n            #help-no-results {\n                background: #f8f9fa;\n                border: 1px solid #dee2e6;\n                border-radius: 4px;\n                margin: 20px 0;\n            }\n\n            .help-section-card {\n                transition: opacity 0.3s ease;\n            }\n\n            .help-section-card[style*=\"display: none\"] {\n                opacity: 0.3;\n            }\n        `;\n\n        document.head.appendChild(style);\n    }\n\n    /**\n     * Perform search across help sections with intelligent matching\n     */\n    performSearch(searchTerm) {\n        const helpSections = document.querySelectorAll('.help-section-card');\n        let hasVisibleResults = false;\n\n        // Split search term into keywords for better matching\n        const keywords = searchTerm.toLowerCase().trim().split(/\\s+/).filter(k => k.length > 0);\n        const originalSearchTerm = searchTerm.toLowerCase().trim();\n\n        console.log('Searching for:', originalSearchTerm, 'Keywords:', keywords);\n\n        helpSections.forEach((section) => {\n            const sectionText = section.textContent.toLowerCase();\n            const titleElement = section.querySelector('.help-section-title');\n            const title = titleElement ? titleElement.textContent.toLowerCase() : '';\n\n            // Calculate relevance score\n            let relevanceScore = 0;\n            let matchesAnyKeyword = false;\n\n            // Check each keyword - highlight ALL characters including single ones\n            keywords.forEach(keyword => {\n                // Exact matches get higher score\n                if (title.includes(keyword)) {\n                    relevanceScore += 10; // Title matches are very important\n                    matchesAnyKeyword = true;\n                    console.log('Title match for:', keyword);\n                }\n                if (sectionText.includes(keyword)) {\n                    relevanceScore += 5; // Content matches\n                    matchesAnyKeyword = true;\n                    console.log('Content match for:', keyword);\n                }\n\n                // Word boundary matches (whole words) for all terms\n                const wordBoundaryRegex = new RegExp('\\\\b' + this.escapeRegExp(keyword) + '\\\\b', 'gi');\n                if (wordBoundaryRegex.test(title)) {\n                    relevanceScore += 8; // Whole word in title\n                    matchesAnyKeyword = true;\n                    console.log('Word boundary title match for:', keyword);\n                }\n                if (wordBoundaryRegex.test(sectionText)) {\n                    relevanceScore += 4; // Whole word in content\n                    matchesAnyKeyword = true;\n                    console.log('Word boundary content match for:', keyword);\n                }\n\n                // Partial matching for all keywords\n                const partialRegex = new RegExp(this.escapeRegExp(keyword), 'gi');\n                if (partialRegex.test(title)) {\n                    relevanceScore += 6;\n                    matchesAnyKeyword = true;\n                    console.log('Partial title match for:', keyword);\n                }\n                if (partialRegex.test(sectionText)) {\n                    relevanceScore += 3;\n                    matchesAnyKeyword = true;\n                    console.log('Partial content match for:', keyword);\n                }\n            });\n\n            // Check for exact phrase match (highest priority)\n            if (originalSearchTerm.length >= 2) {\n                if (title.includes(originalSearchTerm)) {\n                    relevanceScore += 20;\n                    matchesAnyKeyword = true;\n                    console.log('Exact phrase title match for:', originalSearchTerm);\n                }\n                if (sectionText.includes(originalSearchTerm)) {\n                    relevanceScore += 15;\n                    matchesAnyKeyword = true;\n                    console.log('Exact phrase content match for:', originalSearchTerm);\n                }\n            }\n\n            console.log('Section:', title, 'Relevance:', relevanceScore, 'Matches:', matchesAnyKeyword);\n\n            if (matchesAnyKeyword && relevanceScore > 0) {\n                section.style.display = 'block';\n                hasVisibleResults = true;\n\n                // Store relevance score for potential sorting\n                section.dataset.relevanceScore = relevanceScore;\n\n                // Clear existing highlights first\n                this.removeHighlights(section);\n\n                // Highlight ALL keywords including single characters\n                keywords.forEach(keyword => {\n                    console.log('Highlighting keyword:', keyword);\n                    this.highlightSearchTerm(section, keyword);\n                });\n\n                // Also highlight the original search term if it's different\n                if (originalSearchTerm !== keywords.join(' ')) {\n                    console.log('Highlighting original term:', originalSearchTerm);\n                    this.highlightSearchTerm(section, originalSearchTerm);\n                }\n            } else {\n                section.style.display = 'none';\n                delete section.dataset.relevanceScore;\n            }\n        });\n\n        console.log('Search complete. Has results:', hasVisibleResults);\n\n        // Show \"no results\" message if needed\n        this.showNoResultsMessage(!hasVisibleResults && searchTerm.trim().length > 0);\n    }\n\n    /**\n     * Show all help sections\n     */\n    showAllSections() {\n        const helpSections = document.querySelectorAll('.help-section-card');\n        helpSections.forEach((section) => {\n            section.style.display = 'block';\n        });\n    }\n\n    /**\n     * Show or hide \"no results\" message\n     */\n    showNoResultsMessage(show) {\n        let noResultsMsg = document.getElementById('help-no-results');\n\n        if (show && !noResultsMsg) {\n            // Create no results message\n            noResultsMsg = document.createElement('div');\n            noResultsMsg.id = 'help-no-results';\n            noResultsMsg.style.cssText = `\n                text-align: center;\n                padding: 20px;\n                color: #666;\n                font-style: italic;\n            `;\n            noResultsMsg.textContent = 'No matching help topics found. Try different keywords.';\n\n            const helpContent = document.getElementById('helpContent');\n            if (helpContent) {\n                helpContent.appendChild(noResultsMsg);\n            }\n        } else if (!show && noResultsMsg) {\n            // Remove no results message\n            if (noResultsMsg.parentNode) {\n                noResultsMsg.parentNode.removeChild(noResultsMsg);\n            }\n        }\n    }\n\n    /**\n     * Remove all highlights from all sections\n     */\n    removeAllHighlights() {\n        const helpSections = document.querySelectorAll('.help-section-card');\n        helpSections.forEach((section) => {\n            this.removeHighlights(section);\n        });\n    }\n\n    /**\n     * Highlight search terms with better handling for multi-character keywords\n     */\n    highlightSearchTerm(element, term) {\n        // Remove existing highlights first\n        this.removeHighlights(element);\n\n        if (!term || term.trim().length === 0) return;\n\n        const searchTerm = term.toLowerCase().trim();\n\n        // Use TreeWalker for better text node traversal\n        const walker = document.createTreeWalker(element, NodeFilter.SHOW_TEXT, null, false);\n        const textNodes = [];\n\n        let node;\n        while ((node = walker.nextNode())) {\n            textNodes.push(node);\n        }\n\n        textNodes.forEach(textNode => {\n            const text = textNode.textContent;\n            const lowerText = text.toLowerCase();\n\n            // Find all matches in this text node\n            const matches = [];\n            let searchIndex = 0;\n\n            while ((searchIndex = lowerText.indexOf(searchTerm, searchIndex)) !== -1) {\n                matches.push({\n                    start: searchIndex,\n                    end: searchIndex + searchTerm.length\n                });\n                searchIndex += searchTerm.length;\n            }\n\n            // Look for word boundary matches for ALL search terms\n            const wordBoundaryRegex = new RegExp('\\\\b' + this.escapeRegExp(searchTerm) + '\\\\b', 'gi');\n            let match;\n            while ((match = wordBoundaryRegex.exec(lowerText)) !== null) {\n                const matchStart = match.index;\n                const matchEnd = matchStart + match[0].length;\n                // Only add if it doesn't overlap with existing matches\n                const overlaps = matches.some(m => (matchStart < m.end && matchEnd > m.start));\n                if (!overlaps) {\n                    matches.push({ start: matchStart, end: matchEnd });\n                }\n            }\n\n            if (matches.length > 0) {\n                // Sort matches by position and remove overlaps\n                matches.sort((a, b) => a.start - b.start);\n\n                // Build new content with highlights\n                let result = '';\n                let lastIndex = 0;\n\n                matches.forEach(match => {\n                    result += text.substring(lastIndex, match.start);\n                    const highlightedText = text.substring(match.start, match.end);\n                    result += `<mark class=\"search-highlight\">${highlightedText}</mark>`;\n                    lastIndex = match.end;\n                });\n\n                result += text.substring(lastIndex);\n\n                // Replace the text node with highlighted version\n                const tempDiv = document.createElement('div');\n                tempDiv.innerHTML = result;\n                const fragment = document.createDocumentFragment();\n                while (tempDiv.firstChild) {\n                    fragment.appendChild(tempDiv.firstChild);\n                }\n                textNode.parentNode.replaceChild(fragment, textNode);\n            }\n        });\n    }\n\n    /**\n     * Escape special regex characters\n     */\n    escapeRegExp(string) {\n        return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n    }\n\n    /**\n     * Remove highlights\n     */\n    removeHighlights(element) {\n        const marks = element.querySelectorAll('mark');\n        marks.forEach((mark) => {\n            mark.outerHTML = mark.innerHTML;\n        });\n    }\n\n    /**\n     * Initialize file tree viewer for markdown documents\n     */\n    async initializeFileTreeViewer() {\n        try {\n            // Get the file tree panel container\n            const treePanel = document.getElementById('helpFileTreePanel');\n            if (!treePanel) {\n                console.warn('HelpSystem: File tree panel not found in DOM');\n                return;\n            }\n\n            // Clean up existing viewer if present\n            if (this.fileTreeViewer) {\n                // Reset the container\n                treePanel.innerHTML = '';\n            }\n\n            // Create new file tree viewer\n            this.fileTreeViewer = new FileTreeViewer(treePanel);\n\n            console.log('HelpSystem: File tree viewer initialized successfully');\n\n        } catch (error) {\n            console.error('HelpSystem: Failed to initialize file tree viewer:', error.message);\n        }\n    }\n\n    /**\n     * Initialize documentation controls\n     */\n    initializeDocumentationControls() {\n        const toggleTreeBtn = document.getElementById('toggleTreeBtn');\n        const backToHelpBtn = document.getElementById('backToHelpBtn');\n        const panel = document.getElementById('fileTreeOverlay');\n        const closeTreeBtn = document.getElementById('closeTreeBtn');\n\n        // Toggle tree panel\n        if (toggleTreeBtn && panel) {\n            toggleTreeBtn.addEventListener('click', () => {\n                if (panel.classList.contains('open')) {\n                    this.hideTreeView();\n                } else {\n                    this.showTreeView();\n                }\n            });\n        }\n\n        // Close tree panel\n        if (closeTreeBtn && panel) {\n            closeTreeBtn.addEventListener('click', () => {\n                const contentPanel = document.getElementById('helpModal')?.querySelector('.help-content-panel');\n                if (contentPanel?.classList.contains('md-mode')) {\n                    this.showHelpView();\n                } else {\n                    this.hideTreeView();\n                }\n            });\n        }\n\n        // Back to help button\n        if (backToHelpBtn) {\n            backToHelpBtn.addEventListener('click', () => {\n                this.showHelpView();\n            });\n        }\n\n        // Copy button\n        const copyBtn = document.getElementById('mdCopyBtn');\n        if (copyBtn) {\n            copyBtn.addEventListener('click', () => {\n                this.copyMarkdownContent();\n            });\n        }\n\n        // Hide tree button (new - keep file displayed)\n        const hideTreeBtn = document.getElementById('hideTreeBtn');\n        if (hideTreeBtn) {\n            hideTreeBtn.addEventListener('click', () => {\n                this.hideTreeView();\n            });\n        }\n\n        console.log('HelpSystem: Documentation controls initialized');\n    }\n\n    /**\n     * Show tree overlay and MD content\n     */\n    showTreeView() {\n        const overlay = document.getElementById('fileTreeOverlay');\n        const contentPanel = document.getElementById('helpModal')?.querySelector('.help-content-panel');\n        const toggleBtn = document.getElementById('toggleTreeBtn');\n        const backBtn = document.getElementById('backToHelpBtn');\n\n        // Show tree overlay with animation\n        if (overlay) {\n            overlay.classList.add('open');\n        }\n\n        // Switch to MD mode\n        if (contentPanel) {\n            contentPanel.classList.add('md-mode');\n        }\n\n        // Update buttons\n        if (toggleBtn) {\n            toggleBtn.textContent = '📁 Hide Files';\n        }\n        if (backBtn) {\n            backBtn.style.display = 'inline-block';\n        }\n    }\n\n    /**\n     * Hide tree panel only (keep current file displayed)\n     */\n    hideTreeView() {\n        const panel = document.getElementById('fileTreeOverlay');\n        const toggleBtn = document.getElementById('toggleTreeBtn');\n\n        // Hide tree panel\n        if (panel) {\n            panel.classList.remove('open');\n        }\n\n        // Update button\n        if (toggleBtn) {\n            toggleBtn.textContent = '📁 Show Files';\n        }\n    }\n\n    /**\n     * Show help content view\n     */\n    showHelpView() {\n        const contentPanel = document.getElementById('helpModal')?.querySelector('.help-content-panel');\n        const overlay = document.getElementById('fileTreeOverlay');\n        const backBtn = document.getElementById('backToHelpBtn');\n        const toggleBtn = document.getElementById('toggleTreeBtn');\n\n        // Switch to help content (remove MD mode)\n        if (contentPanel) {\n            contentPanel.classList.remove('md-mode');\n        }\n\n        // Keep tree visible but remove MD mode\n        if (overlay && overlay.classList.contains('open')) {\n            overlay.classList.remove('open');\n        }\n\n        // Update buttons\n        if (backBtn) {\n            backBtn.style.display = 'none';\n        }\n        if (toggleBtn) {\n            toggleBtn.textContent = '📁 Show Files';\n        }\n\n        // Clear current file title\n        const fileNameSpan = document.getElementById('fileName');\n        if (fileNameSpan) {\n            fileNameSpan.textContent = 'None Selected';\n        }\n    }\n\n    /**\n     * Update MD file display\n     */\n    async showMarkdownFile(filePath, fileContent) {\n        const fileNameSpan = document.getElementById('fileName');\n        const mdContentBody = document.getElementById('mdContentBody');\n        const contentPanel = document.getElementById('helpModal')?.querySelector('.help-content-panel');\n\n        // Update file name\n        if (fileNameSpan) {\n            const fileName = filePath.split('/').pop();\n            fileNameSpan.textContent = fileName;\n        }\n\n        // Switch to MD viewer mode\n        if (contentPanel && !contentPanel.classList.contains('md-mode')) {\n            contentPanel.classList.add('md-mode');\n        }\n\n        // Update content\n        if (mdContentBody && fileContent) {\n            // Simple markdown-like rendering\n            const renderedContent = this.renderMarkdownText(fileContent);\n            mdContentBody.innerHTML = renderedContent;\n        }\n    }\n\n    /**\n     * Simple markdown rendering\n     */\n    renderMarkdownText(content) {\n        if (!content) return '<p>No content available</p>';\n\n        return content\n            .split('\\n')\n            .map(line => {\n                if (line.startsWith('# ')) {\n                    return `<h2 style=\"color: #007acc; margin-top: 20px; margin-bottom: 10px;\">${line.substring(2)}</h2>`;\n                } else if (line.startsWith('## ')) {\n                    return `<h3 style=\"color: #258ed4; margin-top: 16px; margin-bottom: 8px;\">${line.substring(3)}</h3>`;\n                } else if (line.trim() === '') {\n                    return '<br>';\n                } else {\n                    return `<p style=\"margin-bottom: 8px;\">${line}</p>`;\n                }\n            })\n            .join('');\n    }\n\n    /**\n     * Copy markdown content to clipboard\n     */\n    async copyMarkdownContent() {\n        const mdContentBody = document.getElementById('mdContentBody');\n        if (mdContentBody && mdContentBody.textContent.trim()) {\n            try {\n                await navigator.clipboard.writeText(mdContentBody.textContent);\n                // Provide visual feedback\n                const copyBtn = document.getElementById('mdCopyBtn');\n                if (copyBtn) {\n                    const originalText = copyBtn.textContent;\n                    copyBtn.textContent = '✅ Copied!';\n                    copyBtn.style.background = '#28a745';\n                    setTimeout(() => {\n                        copyBtn.textContent = originalText;\n                        copyBtn.style.background = '#007acc';\n                    }, 1500);\n                }\n            } catch (error) {\n                console.error('Failed to copy:', error);\n            }\n        }\n    }\n}\n\nexport default HelpSystem;","/**\n * Modal Manager Module\n * Handles modal dialogs and overlays\n */\n\nimport { ModalManager } from './modals.js';\n\nclass ModalManagerWrapper {\n    constructor() {\n        this.modalManager = new ModalManager();\n    }\n\n    /**\n     * Show modal by ID\n     */\n    showModal(modalId) {\n        if (this.modalManager) {\n            this.modalManager.showModal(modalId);\n        } else {\n            console.error('ModalManager module not available');\n        }\n    }\n\n    /**\n     * Close modal by ID\n     */\n    closeModal(modalId) {\n        if (this.modalManager) {\n            this.modalManager.closeModal(modalId);\n        } else {\n            console.error('ModalManager module not available');\n        }\n    }\n\n    /**\n     * Close configurator modal\n     */\n    closeConfigurator() {\n        const modal = document.getElementById('configuratorModal');\n        if (modal) {\n            modal.style.display = 'none';\n        }\n        // Additional configurator cleanup would go here\n    }\n\n    /**\n     * Close G-code viewer modal\n     */\n    closeGcodeViewer() {\n        const modal = document.getElementById('gcodeViewerModal');\n        if (modal) {\n            modal.style.display = 'none';\n        }\n\n        // Clean up Three.js renderer\n        try {\n            const gcode3d = document.getElementById('gcode3d');\n            if (gcode3d) {\n                gcode3d.innerHTML = '';\n            }\n\n            // Stop any running animation\n            if (window.gcodeSimAnimationId) {\n                clearTimeout(window.gcodeSimAnimationId);\n                window.gcodeSimAnimationId = null;\n            }\n\n            // Reset global variables to prevent memory leaks\n            window.gcodeToolpathPoints = null;\n            window.gcodeToolpathSegments = null;\n            window.gcodeToolpathModes = null;\n            window.gcodeLineMap = null;\n            window.gcodeLines = null;\n            window.gcodeSegmentCounts = null;\n            window.gcodeScene = null;\n            window.gcodeCamera = null;\n            window.gcodeToolMesh = null;\n            window.gcodeRender = null;\n        } catch (error) {\n            console.error('Error closing G-code viewer:', error);\n        }\n    }\n}\n\nexport default ModalManagerWrapper;","/**\n * Modal Management Module\n *\n * Provides a centralized system for managing modal dialogs with:\n * - Show/hide functionality\n * - Backdrop click handling\n * - Keyboard navigation (ESC key)\n * - Event management\n * - Reusable modal component system\n */\n\nclass ModalManager {\n  constructor() {\n    this.activeModals = new Set();\n    this.eventListeners = new Map();\n    this.setupGlobalEventListeners();\n  }\n\n  /**\n   * Setup global event listeners for keyboard navigation\n   */\n  setupGlobalEventListeners() {\n    // ESC key to close topmost modal\n    document.addEventListener('keydown', (e) => {\n      if (e.key === 'Escape' && this.activeModals.size > 0) {\n        const modals = Array.from(this.activeModals);\n        const topModal = modals[modals.length - 1];\n        this.closeModal(topModal);\n      }\n    });\n  }\n\n  /**\n   * Show a modal by ID\n   * @param {string} modalId - The ID of the modal element\n   * @param {Object} options - Configuration options\n   * @param {boolean} options.closeOnBackdrop - Whether to close on backdrop click (default: true)\n   * @param {Function} options.onShow - Callback when modal is shown\n   * @param {Function} options.onClose - Callback when modal is closed\n   */\n  showModal(modalId, options = {}) {\n    const modal = document.getElementById(modalId);\n    if (!modal) {\n      console.error(`Modal with ID '${modalId}' not found`);\n      return false;\n    }\n\n    const config = {\n      closeOnBackdrop: true,\n      onShow: null,\n      onClose: null,\n      ...options,\n    };\n\n    // Store configuration for this modal\n    this.eventListeners.set(modalId, config);\n\n    // Show the modal\n    modal.style.display = 'flex';\n    this.activeModals.add(modalId);\n\n    // Setup backdrop click handler\n    if (config.closeOnBackdrop) {\n      const backdropHandler = (e) => {\n        if (e.target === modal) {\n          this.closeModal(modalId);\n        }\n      };\n      modal.addEventListener('click', backdropHandler);\n\n      // Store handler for cleanup\n      if (!modal._modalBackdropHandler) {\n        modal._modalBackdropHandler = backdropHandler;\n      }\n    }\n\n    // Focus management - focus first focusable element\n    this.focusFirstElement(modal);\n\n    // Call onShow callback\n    if (config.onShow && typeof config.onShow === 'function') {\n      config.onShow(modalId);\n    }\n\n    return true;\n  }\n\n  /**\n   * Close a modal by ID\n   * @param {string} modalId - The ID of the modal element\n   */\n  closeModal(modalId) {\n    const modal = document.getElementById(modalId);\n    if (!modal) {\n      console.error(`Modal with ID '${modalId}' not found`);\n      return false;\n    }\n\n    // Hide the modal\n    modal.style.display = 'none';\n    this.activeModals.delete(modalId);\n\n    // Get configuration\n    const config = this.eventListeners.get(modalId);\n\n    // Cleanup backdrop handler\n    if (modal._modalBackdropHandler) {\n      modal.removeEventListener('click', modal._modalBackdropHandler);\n      delete modal._modalBackdropHandler;\n    }\n\n    // Call onClose callback\n    if (config && config.onClose && typeof config.onClose === 'function') {\n      config.onClose(modalId);\n    }\n\n    // Clean up configuration\n    this.eventListeners.delete(modalId);\n\n    return true;\n  }\n\n  /**\n   * Check if a modal is currently open\n   * @param {string} modalId - The ID of the modal element\n   * @returns {boolean}\n   */\n  isModalOpen(modalId) {\n    return this.activeModals.has(modalId);\n  }\n\n  /**\n   * Close all open modals\n   */\n  closeAllModals() {\n    const modals = Array.from(this.activeModals);\n    modals.forEach((modalId) => this.closeModal(modalId));\n  }\n\n  /**\n   * Focus the first focusable element in the modal\n   * @param {HTMLElement} modal - The modal element\n   */\n  focusFirstElement(modal) {\n    const focusableElements = modal.querySelectorAll(\n      'button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])'\n    );\n\n    if (focusableElements.length > 0) {\n      // Skip close button, focus first interactive element\n      const firstElement =\n        Array.from(focusableElements).find(\n          (el) => !el.classList.contains('modal-close')\n        ) || focusableElements[0];\n\n      setTimeout(() => firstElement.focus(), 100);\n    }\n  }\n\n  /**\n   * Create a reusable modal component\n   * @param {Object} config - Modal configuration\n   * @param {string} config.id - Modal ID\n   * @param {string} config.title - Modal title\n   * @param {string} config.content - Modal content HTML\n   * @param {Array} config.buttons - Array of button configurations\n   * @param {string} config.size - Modal size ('small', 'medium', 'large')\n   * @returns {HTMLElement} The created modal element\n   */\n  createModal(config) {\n    const {\n      id,\n      title = '',\n      content = '',\n      buttons = [],\n      size = 'medium',\n    } = config;\n\n    // Create modal structure\n    const modal = document.createElement('div');\n    modal.id = id;\n    modal.className = `modal-overlay modal-${size}`;\n    modal.style.display = 'none';\n\n    const modalContent = document.createElement('div');\n    modalContent.className = 'modal-content';\n\n    // Header\n    const header = document.createElement('div');\n    header.className = 'modal-header';\n\n    const titleElement = document.createElement('h2');\n    titleElement.className = 'modal-title';\n    titleElement.textContent = title;\n\n    const closeButton = document.createElement('button');\n    closeButton.className = 'modal-close';\n    closeButton.innerHTML = '&times;';\n    closeButton.onclick = () => this.closeModal(id);\n\n    header.appendChild(titleElement);\n    header.appendChild(closeButton);\n\n    // Body\n    const body = document.createElement('div');\n    body.className = 'modal-body';\n    body.innerHTML = content;\n\n    // Footer (if buttons provided)\n    let footer = null;\n    if (buttons.length > 0) {\n      footer = document.createElement('div');\n      footer.className = 'modal-footer';\n\n      buttons.forEach((buttonConfig) => {\n        const button = document.createElement('button');\n        button.textContent = buttonConfig.text || 'Button';\n        button.className = buttonConfig.className || 'modal-button';\n\n        if (buttonConfig.onClick) {\n          button.onclick = (e) => buttonConfig.onClick(e, id);\n        }\n\n        footer.appendChild(button);\n      });\n    }\n\n    // Assemble modal\n    modalContent.appendChild(header);\n    modalContent.appendChild(body);\n    if (footer) {\n      modalContent.appendChild(footer);\n    }\n\n    modal.appendChild(modalContent);\n    document.body.appendChild(modal);\n\n    return modal;\n  }\n\n  /**\n   * Update modal content\n   * @param {string} modalId - The ID of the modal element\n   * @param {string} content - New content HTML\n   */\n  updateModalContent(modalId, content) {\n    const modal = document.getElementById(modalId);\n    if (!modal) {\n      console.error(`Modal with ID '${modalId}' not found`);\n      return false;\n    }\n\n    const body = modal.querySelector('.modal-body');\n    if (body) {\n      body.innerHTML = content;\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Update modal title\n   * @param {string} modalId - The ID of the modal element\n   * @param {string} title - New title text\n   */\n  updateModalTitle(modalId, title) {\n    const modal = document.getElementById(modalId);\n    if (!modal) {\n      console.error(`Modal with ID '${modalId}' not found`);\n      return false;\n    }\n\n    const titleElement = modal.querySelector('.modal-title');\n    if (titleElement) {\n      titleElement.textContent = title;\n      return true;\n    }\n\n    return false;\n  }\n}\n\n// Create global instance\nconst modalManager = new ModalManager();\n\n// Export for module use\nexport { ModalManager, modalManager };\n\n// Global functions for backward compatibility\nwindow.showModal = (modalId, options) =>\n  modalManager.showModal(modalId, options);\nwindow.closeModal = (modalId) => modalManager.closeModal(modalId);\n\n// Export global functions for legacy code\nwindow.modalManager = modalManager;\n","/**\n * Navigation Loading States Manager\n * Handles loading indicators for page navigation and actions\n * Uses pre-existing HTML elements for better performance and maintainability\n */\n\nclass NavigationManager {\n  constructor() {\n    this.loadingStates = new Map();\n    this.globalLoader = null;\n    this.init();\n  }\n\n  init() {\n    this.setupElements();\n    this.setupEventListeners();\n  }\n\n  setupElements() {\n    // Get existing HTML elements instead of creating them dynamically\n    this.globalLoader = document.getElementById('globalLoader');\n    if (!this.globalLoader) {\n      console.warn('Global loader element not found. Navigation loading may not work properly.');\n    }\n  }\n\n  setupEventListeners() {\n    // Intercept all link clicks for SPA-like loading\n    document.addEventListener('click', (_e) => {\n      const link = _e.target.closest('a[href]');\n      if (link && !link.hasAttribute('data-no-loading')) {\n        // Don't intercept blob URLs (file downloads) or external links\n        const href = link.href;\n        if (href.startsWith('blob:') || href.startsWith('http://') || href.startsWith('https://')) {\n          return; // Let the browser handle these normally\n        }\n        _e.preventDefault();\n        this.navigateTo(href, link.textContent);\n      }\n    });\n\n    // Handle browser back/forward buttons\n    window.addEventListener('popstate', (_e) => {\n      this.showLoading('Loading page...');\n      setTimeout(() => this.hideLoading(), 1000);\n    });\n\n    // Handle form submissions\n    document.addEventListener('submit', (e) => {\n      const form = e.target;\n      if (!form.hasAttribute('data-no-loading')) {\n        this.showLoading('Processing...');\n      }\n    });\n  }\n\n  showLoading(message = 'Loading...', element = null) {\n    if (element) {\n      // Show loading on specific element\n      this.showElementLoader(element, message);\n    } else {\n      // Show global loader\n      this.showGlobalLoader(message);\n    }\n  }\n\n  hideLoading(element = null) {\n    if (element) {\n      this.hideElementLoader(element);\n    } else {\n      this.hideGlobalLoader();\n    }\n  }\n\n  showGlobalLoader(message) {\n    if (this.globalLoader) {\n      const textElement = this.globalLoader.querySelector('.navigation-text');\n      if (textElement) {\n        textElement.textContent = message;\n      }\n      this.globalLoader.style.display = 'flex';\n    }\n  }\n\n  hideGlobalLoader() {\n    if (this.globalLoader) {\n      this.globalLoader.style.display = 'none';\n    }\n  }\n\n  showElementLoader(element, message) {\n    const rect = element.getBoundingClientRect();\n    const loader = document.createElement('div');\n    loader.className = 'element-loader';\n\n    // Set position and size using CSS classes and inline positioning only\n    Object.assign(loader.style, {\n      top: `${rect.top}px`,\n      left: `${rect.left}px`,\n      width: `${rect.width}px`,\n      height: `${rect.height}px`\n    });\n\n    loader.innerHTML = `\n      <div class=\"navigation-spinner\"></div>\n      <span>${message}</span>\n    `;\n\n    document.body.appendChild(loader);\n    this.loadingStates.set(element, loader);\n  }\n\n  hideElementLoader(element) {\n    const loader = this.loadingStates.get(element);\n    if (loader) {\n      loader.remove();\n      this.loadingStates.delete(element);\n    }\n  }\n\n  navigateTo(url, title = '') {\n    this.showLoading(`Loading ${title}...`);\n\n    // Simulate navigation delay\n    setTimeout(() => {\n      window.location.href = url;\n    }, 500);\n  }\n\n  // Utility methods for common actions\n  showButtonLoading(button, message = 'Loading...') {\n    const originalHTML = button.innerHTML;\n    button.disabled = true;\n    button.classList.add('button-loading');\n\n    button.innerHTML = `\n      <span class=\"navigation-spinner\"></span>\n      ${message}\n    `;\n\n    return () => {\n      button.disabled = false;\n      button.classList.remove('button-loading');\n      button.innerHTML = originalHTML;\n    };\n  }\n\n  showFormLoading(form, message = 'Submitting...') {\n    const submitButtons = form.querySelectorAll(\n      'button[type=\"submit\"], input[type=\"submit\"]'\n    );\n    const restoreFunctions = [];\n\n    submitButtons.forEach((button) => {\n      restoreFunctions.push(this.showButtonLoading(button, message));\n    });\n\n    // Disable all form inputs\n    const inputs = form.querySelectorAll('input, textarea, select');\n    inputs.forEach((input) => {\n      input.disabled = true;\n    });\n\n    return () => {\n      restoreFunctions.forEach((restore) => restore());\n      inputs.forEach((input) => {\n        input.disabled = false;\n      });\n    };\n  }\n}\n\n// Initialize navigation manager\nconst navigationManager = new NavigationManager();\n\n// Export for global access\nwindow.NavigationManager = NavigationManager;\nwindow.navigationManager = navigationManager;\n\n// Convenience functions\nwindow.showLoading = (message, element) =>\n  navigationManager.showLoading(message, element);\nwindow.hideLoading = (element) => navigationManager.hideLoading(element);\n\nexport default NavigationManager;\n","/**\n * Chunk Loader Module\n *\n * Handles progressive loading of G-code files to prevent UI blocking\n */\n\nimport { parseGcodeOptimized } from './parser.js';\n\n/**\n * Chunk loader class for progressive G-code loading\n */\nexport class ChunkLoader {\n  constructor(visualizer) {\n    this.visualizer = visualizer;\n    this.isCancelled = false;\n    this.isRunning = false;\n  }\n\n  /**\n   * Load G-code progressively\n   * @param {string} gcode - G-code content\n   * @param {Object} options - Loading options\n   * @returns {Promise<Object>} Loading result\n   */\n  async loadGcodeProgressive(gcode, options = {}) {\n    const {\n      chunkSize = 1000,\n      onProgress = null,\n      onChunkProcessed = null,\n      onCancel = null,\n    } = options;\n\n    this.isCancelled = false;\n    this.isRunning = true;\n    this.loadingProgress = 0;\n\n    try {\n      // Split G-code into chunks\n      const lines = gcode.split(/\\r?\\n/);\n      const totalChunks = Math.ceil(lines.length / chunkSize);\n      let processedChunks = 0;\n      let accumulatedSegments = [];\n      let accumulatedModes = [];\n      let accumulatedPoints = [];\n      let accumulatedLineMap = []; // MISSING: Accumulate line maps!\n\n      // console.log(\n      //   `[CHUNK] Loading ${lines.length} lines in ${totalChunks} chunks`\n      // );\n\n      // Process chunks progressively\n      // Initialize with proper G-code defaults - this ensures first chunk has valid starting state\n      // G-code standard: starts at origin (0,0,0) with G1 (linear interpolation) as default\n      let currentState = {\n        x: 0,\n        y: 0,\n        z: 0,\n        currentMotionMode: 'G1', // Default to linear interpolation (G-code standard)\n        anyDrawn: false,\n      };\n\n      let chunkMetaData = []; // Track metadata for debugging\n\n      for (let i = 0; i < totalChunks && !this.isCancelled; i++) {\n        const chunkIndex = i;\n        const startLine = chunkIndex * chunkSize;\n        const endLine = Math.min((chunkIndex + 1) * chunkSize, lines.length);\n        const chunkLines = lines.slice(startLine, endLine);\n\n        //console.log(`[CHUNK] Processing chunk ${chunkIndex} with ${chunkLines.length} lines`);\n\n        // Process chunk sequentially to maintain proper state\n        const chunkResult = await this.processChunk(\n          chunkLines,\n          chunkIndex,\n          currentState\n        );\n\n        // Accumulate result\n        if (chunkResult) {\n          //console.log(`[CHUNK] Chunk ${chunkResult.chunkIndex} produced ${chunkResult.segments ? chunkResult.segments.length : 0} segments, ends at ${chunkResult.finalState.currentMotionMode} (${chunkResult.finalState.x.toFixed(1)}, ${chunkResult.finalState.y.toFixed(1)}, ${chunkResult.finalState.z.toFixed(1)})`);\n\n          // Debug: Check if last point of previous accumulated segments matches first point of new segments\n          // if (chunkResult.segments && chunkResult.segments.length > 0 && accumulatedPoints.length > 0) {\n          //     const lastAccumulatedPoint = accumulatedPoints[accumulatedPoints.length - 1];\n          //     const firstNewPoint = chunkResult.points && chunkResult.points.length > 0 ? chunkResult.points[0] : null;\n\n          //     // if (firstNewPoint) {\n          //     //     const pointMatch = (\n          //     //         Math.abs(lastAccumulatedPoint.x - firstNewPoint.x) < 0.001 &&\n          //     //         Math.abs(lastAccumulatedPoint.y - firstNewPoint.y) < 0.001 &&\n          //     //         Math.abs(lastAccumulatedPoint.z - firstNewPoint.z) < 0.001\n          //     //     );\n          //     //     //console.log(`[CHUNK] Point continuity: Last point (${lastAccumulatedPoint.x.toFixed(3)}, ${lastAccumulatedPoint.y.toFixed(3)}, ${lastAccumulatedPoint.z.toFixed(3)}) ${pointMatch ? 'MATCHES' : 'DIFFERS FROM'} first new point (${firstNewPoint.x.toFixed(3)}, ${firstNewPoint.y.toFixed(3)}, ${firstNewPoint.z.toFixed(3)})`);\n          //     // }\n          // }\n\n          // Always add segments if they exist (even if empty array)\n          if (chunkResult.segments) {\n            accumulatedSegments.push(...chunkResult.segments);\n            accumulatedModes.push(...chunkResult.modes);\n            accumulatedPoints.push(...chunkResult.points);\n\n            // MISSING: Accumulate line maps with proper offset!\n            if (chunkResult.lineMap) {\n              // For multi-chunk files, we need to offset line numbers by the chunk's starting line\n              const chunkStartLine = chunkIndex * chunkSize;\n              const offsetLineMap = chunkResult.lineMap.map(lineNum =>\n                lineNum >= 0 ? lineNum + chunkStartLine : lineNum\n              );\n              accumulatedLineMap.push(...offsetLineMap);\n\n            }\n          }\n\n          // Track chunk metadata for debugging - always track, even for empty chunks\n          chunkMetaData.push({\n            chunkIndex: chunkResult.chunkIndex,\n            segmentCount: chunkResult.segments\n              ? chunkResult.segments.length\n              : 0,\n            initialState: currentState,\n            finalState: chunkResult.finalState || currentState,\n          });\n        }\n\n        processedChunks++;\n        this.loadingProgress = (processedChunks / totalChunks) * 100;\n\n        if (onProgress) {\n          onProgress({\n            progress: this.loadingProgress,\n            processedChunks,\n            totalChunks,\n            segmentCount: accumulatedSegments.length,\n          });\n        }\n\n        if (onChunkProcessed) {\n          onChunkProcessed({\n            segments: accumulatedSegments,\n            modes: accumulatedModes,\n            points: accumulatedPoints,\n            progress: this.loadingProgress,\n            // Include metadata for debugging\n            chunkMetaData: chunkMetaData,\n          });\n        }\n\n        // Update state for next chunk (use final state from this chunk)\n        if (chunkResult && chunkResult.finalState) {\n          currentState = chunkResult.finalState;\n\n\n          // // Only log state changes if they actually change (reduce noise)\n          // if (processedChunks % totalChunks === 0) {\n          //   // Log only on final batch\n          //   console.log(\n          //     `[CHUNK] Final state: ${currentState.currentMotionMode} at (${currentState.x.toFixed(1)}, ${currentState.y.toFixed(1)}, ${currentState.z.toFixed(1)})`\n          //   );\n          // }\n\n\n\n        } else {\n          console.warn(\n            `[CHUNK] No final state from chunk ${chunkResult?.chunkIndex || 'unknown'}`\n          );\n        }\n\n        // Yield to main thread to keep UI responsive\n        await this.yieldToMainThread();\n      }\n\n      if (this.isCancelled) {\n        if (onCancel) onCancel();\n        return { success: false, cancelled: true };\n      }\n\n      // Final setup after all chunks loaded\n      const result = {\n        success: true,\n        segments: accumulatedSegments,\n        modes: accumulatedModes,\n        points: accumulatedPoints,\n        lineMap: accumulatedLineMap, // MISSING: Include accumulated line map!\n        lineCount: lines.length,\n        chunkCount: totalChunks,\n      };\n\n      //console.log(`[DEBUG CHUNK] Final result: ${accumulatedSegments.length} segments, ${accumulatedLineMap.length} line mappings`);\n\n      // console.log(\n      //   `[CHUNK] Completed: ${accumulatedSegments.length} segments from ${totalChunks} chunks`\n      // );\n\n\n\n\n      return result;\n    } catch (error) {\n      console.error('[CHUNK] Loading failed:', error.message);\n      return { success: false, error: error.message };\n    } finally {\n      this.isRunning = false;\n      this.loadingProgress = 100;\n    }\n  }\n\n  /**\n   * Process a chunk of G-code lines\n   * @param {Array<string>} chunkLines - Lines in this chunk\n   * @param {number} chunkIndex - Index of this chunk\n   * @param {Object} initialState - Initial state for parsing (optional)\n   * @returns {Promise<Object>} Processing result\n   */\n  async processChunk(chunkLines, chunkIndex, initialState = {}) {\n    return new Promise((resolve) => {\n      try {\n        // Use Web Worker for heavy processing if available\n        if (this.visualizer.useWebWorkers && window.Worker) {\n          this.processChunkWithWorker(chunkLines, chunkIndex, resolve);\n        } else {\n          // Process in main thread\n          const result = this.parseGcodeChunk(\n            chunkLines,\n            chunkIndex,\n            initialState\n          );\n          resolve(result);\n        }\n      } catch (error) {\n        resolve({\n          success: false,\n          error: error.message,\n          chunkIndex,\n        });\n      }\n    });\n  }\n\n  /**\\n     * Process chunk using Web Worker\\n     * @param {Array<string>} chunkLines - Lines in this chunk\\n     * @param {number} chunkIndex - Index of this chunk\\n     * @param {Object} initialState - Initial state for parsing (optional)\\n     * @param {Function} resolve - Promise resolve function\\n     */\n  processChunkWithWorker(chunkLines, chunkIndex, initialState, resolve) {\n    // This would be implemented when we add Web Worker support\n    // For now, fallback to main thread processing\n    const result = this.parseGcodeChunk(chunkLines, chunkIndex, initialState);\n    resolve(result);\n  }\n\n  /**\n   * Parse a chunk of G-code lines\n   * @param {Array<string>} chunkLines - Lines in this chunk\n   * @param {number} chunkIndex - Index of this chunk\n   * @param {Object} initialState - Initial state for parsing (optional)\n   * @returns {Object} Parsing result\n   */\n  parseGcodeChunk(chunkLines, chunkIndex, initialState = {}) {\n    // Use the imported parser function directly\n    const parser = parseGcodeOptimized;\n    // Join lines back together for parsing\n    const chunkGcode = chunkLines.join('\\n');\n\n    // Parse the chunk with initial state to maintain G-code continuity\n    const parseResult = parser(chunkGcode, initialState);\n\n    //console.log(`[DEBUG CHUNK] Chunk ${chunkIndex} parser returned lineMap:`, parseResult.lineMap ? parseResult.lineMap.slice(0, 10) : 'MISSING');\n\n    return {\n      success: true,\n      chunkIndex,\n      segments: parseResult.toolpathSegments || [],\n      modes: parseResult.toolpathModes || [],\n      points: parseResult.toolpathPoints || [],\n      lineMap: parseResult.lineMap || [], // MISSING: Include the line map from parser!\n      segmentCounts: parseResult.segmentCounts || {\n        G0: 0,\n        G1: 0,\n        G2: 0,\n        G3: 0,\n      },\n      finalState: parseResult.finalState || {},\n      // Include metadata for proper chunk connection\n      metaData: {\n        startIndex: parseResult.lineMap ? Math.min(...parseResult.lineMap.filter(idx => idx >= 0)) : 0,\n        endIndex: parseResult.lineMap ? Math.max(...parseResult.lineMap.filter(idx => idx >= 0)) : 0,\n        initialState: initialState,\n        finalState: parseResult.finalState || {},\n      },\n    };\n  }\n\n  /**\n   * Yield to main thread to keep UI responsive\n   * @returns {Promise<void>}\n   */\n  yieldToMainThread() {\n    return new Promise((resolve) => {\n      // Use requestAnimationFrame for better performance\n      requestAnimationFrame(() => {\n        // Additional setTimeout(0) if needed for longer tasks\n        setTimeout(resolve, 0);\n      });\n    });\n  }\n\n  /**\n   * Cancel the current loading process\n   */\n  cancel() {\n    this.isCancelled = true;\n    //console.log('[CHUNK] Loading cancelled');\n  }\n\n  /**\n   * Check if loader is currently running\n   * @returns {boolean} True if running\n   */\n  isRunning() {\n    return this.isRunning;\n  }\n\n  /**\n   * Get current loading progress\n   * @returns {number} Progress percentage\n   */\n  getProgress() {\n    return this.loadingProgress;\n  }\n\n  /**\n   * Validate state continuity between chunks\n   * @param {Array} chunkResults - Results from processed chunks\n   * @returns {Object} Validation report\n   */\n  validateStateContinuity(chunkResults) {\n    const report = {\n      isValid: true,\n      issues: [],\n      stateTransitions: [],\n    };\n\n    for (let i = 0; i < chunkResults.length - 1; i++) {\n      const current = chunkResults[i];\n      const next = chunkResults[i + 1];\n\n      if (current.finalState && next.metaData) {\n        const transition = {\n          fromChunk: current.chunkIndex,\n          toChunk: next.chunkIndex,\n          expectedState: current.finalState,\n          actualInitialState: next.metaData.initialState,\n        };\n\n        report.stateTransitions.push(transition);\n\n        // Check for state continuity issues\n        const positionMismatch =\n          Math.abs(current.finalState.x - next.metaData.initialState.x) >\n          0.001 ||\n          Math.abs(current.finalState.y - next.metaData.initialState.y) >\n          0.001 ||\n          Math.abs(current.finalState.z - next.metaData.initialState.z) > 0.001;\n\n        const modeMismatch =\n          current.finalState.currentMotionMode !==\n          next.metaData.initialState.currentMotionMode;\n\n        if (positionMismatch) {\n          report.isValid = false;\n          report.issues.push({\n            type: 'position_mismatch',\n            chunk: next.chunkIndex,\n            expected: {\n              x: current.finalState.x,\n              y: current.finalState.y,\n              z: current.finalState.z,\n            },\n            actual: {\n              x: next.metaData.initialState.x,\n              y: next.metaData.initialState.y,\n              z: next.metaData.initialState.z,\n            },\n          });\n        }\n\n        if (modeMismatch) {\n          report.isValid = false;\n          report.issues.push({\n            type: 'mode_mismatch',\n            chunk: next.chunkIndex,\n            expected: current.finalState.currentMotionMode,\n            actual: next.metaData.initialState.currentMotionMode,\n          });\n        }\n      }\n    }\n\n    return report;\n  }\n}\n","/**\n * 3D Viewer Controls Module\n *\n * Handles simulation controls and playback for the 3D G-code viewer:\n * - Play/pause/stop simulation\n * - Speed control and progress tracking\n * - Tool position animation\n * - User interface controls\n * - SINGLE SOURCE OF TRUTH for current line display logic\n */\n\n// Global simulation state for external access\nlet globalSimState = { playing: false, paused: false, stopped: true, idx: 0 };\nlet globalSimGeneration = 1;\n\n// Global state for incremental segment counting (performance optimization)\nlet segmentCountState = {\n  lastIndex: -1,\n  counts: { G0: 0, G1: 0, G2: 0, G3: 0 },\n  needsFullRecalc: true\n};\n\n// Performance monitoring for animation loop\nlet performanceMonitor = {\n  frameCount: 0,\n  lastFrameTime: 0,\n  frameTimeHistory: [],\n  maxHistoryLength: 60,\n  averageFrameTime: 0,\n  enabled: true\n};\n\n// Adaptive rendering for large files\nlet adaptiveRendering = {\n  enabled: false,\n  targetFPS: 30,\n  skipFrames: 0,\n  frameSkipCounter: 0,\n  lastDrawRangeUpdate: 0\n};\n\n// Debounce state for progress bar seeking optimization\nlet seekDebounceState = {\n  seekTimeout: null,\n  lastSeekPosition: -1,\n  isRapidSeeking: false,\n  seekStartTime: 0,\n  lastInputTime: 0,\n  rapidSeekThreshold: 30, // OPTIMIZATION: Reduced from 50ms to 30ms for more aggressive rapid seeking detection\n  isDragging: false // Track if user is actively dragging\n};\n\n// Render throttling state for seeking optimization\nlet renderThrottleState = {\n  lastRenderTime: 0,\n  renderTimeout: null,\n  maxFPS: 30, // Maximum 30 FPS during seeking\n  minFrameTime: 1000 / 30, // ~33ms between renders\n  pendingRender: false\n};\n\n/**\n * Debounce utility function for progress bar seeking\n * @param {Function} func - Function to debounce\n * @param {number} delay - Delay in milliseconds\n * @returns {Function} Debounced function\n */\nfunction debounce(func, delay) {\n  let timeoutId;\n  return function (...args) {\n    clearTimeout(timeoutId);\n    timeoutId = setTimeout(() => func.apply(this, args), delay);\n    return timeoutId;\n  };\n}\n\n/**\n * Detect if user is rapidly seeking based on input frequency and dragging state\n * @param {number} currentTime - Current timestamp\n * @returns {boolean} True if rapid seeking is detected\n */\nfunction detectRapidSeeking(currentTime) {\n  const timeSinceLastInput = currentTime - seekDebounceState.lastInputTime;\n  seekDebounceState.lastInputTime = currentTime;\n\n  // OPTIMIZATION: Consider dragging state for better rapid seeking detection\n  const isInputFrequent = timeSinceLastInput < seekDebounceState.rapidSeekThreshold;\n  const isDragging = seekDebounceState.isDragging;\n\n  if (isInputFrequent || isDragging) {\n    if (!seekDebounceState.isRapidSeeking) {\n      seekDebounceState.isRapidSeeking = true;\n      seekDebounceState.seekStartTime = currentTime;\n    }\n    return true;\n  } else {\n    // OPTIMIZATION: Clear rapid seeking flag more quickly for better responsiveness\n    if (seekDebounceState.isRapidSeeking && !isDragging && timeSinceLastInput > seekDebounceState.rapidSeekThreshold * 1.5) {\n      seekDebounceState.isRapidSeeking = false;\n    }\n    return seekDebounceState.isRapidSeeking;\n  }\n}\n\n/**\n * Throttled render function that limits render calls to maximum 30 FPS during seeking\n * @param {boolean} isSeekingOperation - Whether this render is part of a seeking operation\n */\nfunction throttledRender(isSeekingOperation = false) {\n  if (!window.gcodeRender) return;\n\n  const currentTime = performance.now();\n\n  if (isSeekingOperation && seekDebounceState.isRapidSeeking) {\n    // During rapid seeking, throttle renders to max 30 FPS\n    const timeSinceLastRender = currentTime - renderThrottleState.lastRenderTime;\n\n    if (timeSinceLastRender < renderThrottleState.minFrameTime) {\n      // Too soon since last render, schedule a throttled render\n      if (!renderThrottleState.pendingRender) {\n        renderThrottleState.pendingRender = true;\n        const delay = renderThrottleState.minFrameTime - timeSinceLastRender;\n\n        renderThrottleState.renderTimeout = setTimeout(() => {\n          renderThrottleState.lastRenderTime = performance.now();\n          renderThrottleState.pendingRender = false;\n          window.gcodeRender();\n        }, delay);\n      }\n      return; // Skip this render call\n    }\n  }\n\n  // Clear any pending throttled render since we're rendering now\n  if (renderThrottleState.renderTimeout) {\n    clearTimeout(renderThrottleState.renderTimeout);\n    renderThrottleState.renderTimeout = null;\n    renderThrottleState.pendingRender = false;\n  }\n\n  renderThrottleState.lastRenderTime = currentTime;\n  window.gcodeRender();\n}\n\n/**\n * Setup simulation controls for toolpath animation (working version from index.js)\n */\nfunction setupSimulationControls(domElements, parseResult) {\n  let simState = globalSimState; // Use global state\n  let simGeneration = globalSimGeneration;\n\n  // Setup progress bar\n  if (domElements.progressBar && parseResult.toolpathSegments) {\n    domElements.progressBar.max = parseResult.toolpathSegments.length;\n    domElements.progressBar.value = parseResult.toolpathSegments.length; // Start at end\n\n    // Create debounced update function for ALL expensive operations\n    const debouncedSeekUpdate = debounce((newIdx, maxSegments) => {\n      // OPTIMIZATION: Update simulation state here instead of on every input\n      if (simState.playing) {\n        simState.playing = false;\n        simState.paused = true;\n        simState.stopped = false;\n      } else {\n        // Update state based on position\n        simState.stopped = (newIdx >= maxSegments);\n        simState.paused = !simState.stopped && (newIdx > 0);\n      }\n\n      // Update play/pause icon (moved from immediate handler)\n      updatePlayPauseIcon(domElements, simState);\n\n      // Update visualization\n      updateVisualizationToIndex(newIdx, parseResult);\n\n      // Use throttled render for seeking operations\n      throttledRender(true);\n\n      // Update current line display\n      if (newIdx >= 0 && window.gcodeLines && window.gcodeLineMap) {\n        updateCurrentLineDisplay(newIdx);\n      }\n\n      // Clear rapid seeking flag after debounced update completes\n      seekDebounceState.isRapidSeeking = false;\n    }, 50); // OPTIMIZATION: Reduced debounce delay from 100ms to 50ms for better responsiveness\n\n    // Handle progress bar input (while dragging)\n    domElements.progressBar.oninput = function () {\n      const newIdx = Number(domElements.progressBar.value);\n      const maxSegments = parseResult.toolpathSegments.length;\n      const currentTime = performance.now();\n\n      // Detect if user is rapidly seeking\n      const isRapidSeeking = detectRapidSeeking(currentTime);\n\n      // OPTIMIZATION: Only update essential state immediately\n      simState.idx = newIdx;\n      window.gcodeCurrentLineIdx = newIdx;\n\n      // Clear any existing debounced update\n      if (seekDebounceState.seekTimeout) {\n        clearTimeout(seekDebounceState.seekTimeout);\n      }\n\n      // Store the seek position for comparison\n      seekDebounceState.lastSeekPosition = newIdx;\n\n      // MAJOR OPTIMIZATION: Skip ALL expensive operations during rapid seeking\n      if (isRapidSeeking) {\n        // Only store the position - no visualization updates during rapid seeking\n        return;\n      }\n\n      // OPTIMIZATION: Batch all expensive operations in debounced update\n      // This includes: state updates, icon updates, visualization, and rendering\n      seekDebounceState.seekTimeout = debouncedSeekUpdate(newIdx, maxSegments);\n    };\n\n    // Handle progress bar change (when drag is released or clicked)\n    domElements.progressBar.onchange = function () {\n      const newIdx = Number(domElements.progressBar.value);\n      const maxSegments = parseResult.toolpathSegments.length;\n\n      // Clear any pending debounced update since we want immediate update on release\n      if (seekDebounceState.seekTimeout) {\n        clearTimeout(seekDebounceState.seekTimeout);\n        seekDebounceState.seekTimeout = null;\n      }\n\n      // Force immediate update when user releases drag or clicks\n      // Update simulation state\n      if (simState.playing) {\n        simState.playing = false;\n        simState.paused = true;\n        simState.stopped = false;\n      } else {\n        simState.stopped = (newIdx >= maxSegments);\n        simState.paused = !simState.stopped && (newIdx > 0);\n      }\n\n      // Update essential state\n      simState.idx = newIdx;\n      window.gcodeCurrentLineIdx = newIdx;\n\n      // Update play/pause icon\n      updatePlayPauseIcon(domElements, simState);\n\n      // Update visualization immediately\n      updateVisualizationToIndex(newIdx, parseResult);\n\n      // Render immediately\n      throttledRender(true);\n\n      // Update current line display\n      if (newIdx >= 0 && window.gcodeLines && window.gcodeLineMap) {\n        updateCurrentLineDisplay(newIdx);\n      }\n\n      // Clear rapid seeking flag\n      seekDebounceState.isRapidSeeking = false;\n      seekDebounceState.isDragging = false;\n      seekDebounceState.lastSeekPosition = newIdx;\n    };\n\n    // Add mouse event handlers for better drag detection\n    domElements.progressBar.onmousedown = function () {\n      seekDebounceState.isDragging = true;\n    };\n\n    domElements.progressBar.onmouseup = function () {\n      seekDebounceState.isDragging = false;\n      // The onchange event will be triggered automatically by the browser\n    };\n\n    // Handle touch events for mobile devices\n    domElements.progressBar.ontouchstart = function () {\n      seekDebounceState.isDragging = true;\n    };\n\n    domElements.progressBar.ontouchend = function () {\n      seekDebounceState.isDragging = false;\n      // The onchange event will be triggered automatically by the browser\n    };\n  }\n\n  // Setup speed slider with proper range for fast animation\n  if (domElements.speedSlider && domElements.speedValue) {\n    // Keep original speed range and default\n    domElements.speedSlider.min = '0.001';\n    domElements.speedSlider.max = '10';\n    domElements.speedSlider.step = '0.1';\n    domElements.speedSlider.value = '10'; // Original default\n\n    let speed = Math.max(0.001, Number(domElements.speedSlider.value || 10));\n\n    const updateSpeedLabel = () => {\n      if (domElements.speedValue && domElements.speedUnit) {\n        if (speed > 1) {\n          domElements.speedValue.textContent = Math.round(speed);\n          domElements.speedUnit.textContent = 'ms/step';\n        } else {\n          const segsPerTick = Math.max(1, Math.round(1 / speed));\n          domElements.speedValue.textContent = segsPerTick;\n          domElements.speedUnit.textContent = 'seg/tick';\n        }\n      }\n    };\n\n    updateSpeedLabel();\n\n    domElements.speedSlider.oninput = function () {\n      speed = Math.max(0.001, Number(domElements.speedSlider.value));\n      updateSpeedLabel();\n    };\n  }\n\n  // Setup play/pause button with smart restart logic\n  if (domElements.playBtn) {\n    domElements.playBtn.onclick = function () {\n      const maxSegments = parseResult.toolpathSegments ? parseResult.toolpathSegments.length : 0;\n      const isAtEnd = simState.idx >= maxSegments;\n      const isCompleted = simState.stopped && isAtEnd;\n\n      if (simState.playing) {\n        // Currently playing - pause it\n        simState.playing = false;\n        simState.paused = true;\n        simState.stopped = false;\n        updatePlayPauseIcon(domElements, simState);\n\n      } else if (isCompleted) {\n        // Simulation completed - restart from beginning\n\n        simState.idx = 0;\n        simState.playing = true;\n        simState.paused = false;\n        simState.stopped = false;\n\n        // Reset visualization to beginning\n        updateVisualizationToIndex(0, parseResult);\n        if (domElements.progressBar) domElements.progressBar.value = 0;\n\n        // Reset command tracking and segment counting\n        resetCommandTracking();\n        resetSegmentCountState();\n        updateCurrentLineDisplay(0);\n\n        updatePlayPauseIcon(domElements, simState);\n        runSimulation(0, domElements, parseResult, simState, simGeneration++);\n      } else {\n        // Paused or stopped (but not at end) - resume from current position\n        const startIdx = simState.paused ? simState.idx : 0;\n\n\n        simState.playing = true;\n        simState.paused = false;\n        simState.stopped = false;\n\n        // Reset command tracking and segment counting when starting playback\n        resetCommandTracking();\n        resetSegmentCountState();\n        resetSeekDebounceState();\n        resetSeekDebounceState();\n        updatePlayPauseIcon(domElements, simState);\n        runSimulation(startIdx, domElements, parseResult, simState, simGeneration++);\n      }\n    };\n  }\n\n  // Setup rewind button\n  if (domElements.rewindBtn) {\n    domElements.rewindBtn.onclick = function () {\n      simState.idx = 0;\n      simState.playing = false;\n      simState.paused = false;\n      simState.stopped = true;\n      // Reset command tracking and segment counting when rewinding\n      resetCommandTracking();\n      resetSegmentCountState();\n      resetSeekDebounceState();\n      updateVisualizationToIndex(0, parseResult);\n      if (domElements.progressBar) domElements.progressBar.value = 0;\n      updatePlayPauseIcon(domElements, simState);\n      throttledRender(false);\n\n      // Update current line display\n      updateCurrentLineDisplay(0);\n    };\n  }\n\n  // Setup forward button (go to end)\n  if (domElements.forwardBtn) {\n    domElements.forwardBtn.onclick = function () {\n      const endIdx = parseResult.toolpathSegments.length;\n      simState.idx = endIdx;\n      simState.playing = false;\n      simState.paused = false;\n      simState.stopped = true;\n      updateVisualizationToIndex(endIdx, parseResult);\n      if (domElements.progressBar) domElements.progressBar.value = endIdx;\n      updatePlayPauseIcon(domElements, simState);\n      throttledRender(false);\n\n      // Update current line display\n      updateCurrentLineDisplay(endIdx - 1); // Use endIdx - 1 to get the last valid segment\n    };\n  }\n\n  // Initialize visualization to show full path\n  updateVisualizationToIndex(parseResult.toolpathSegments.length, parseResult);\n\n  // Set initial state - start at end (showing full path) but ready to play from beginning\n  simState.idx = parseResult.toolpathSegments.length;\n  simState.stopped = true;\n  simState.playing = false;\n  simState.paused = false;\n\n  updatePlayPauseIcon(domElements, simState);\n\n}\n\n/**\n * Update play/pause button icon with smart state detection\n */\nfunction updatePlayPauseIcon(domElements, simState) {\n  if (!domElements.playBtn || !domElements.runSimulationIcon) return;\n\n  const playIcon = '<polygon points=\"4,2 14,8 4,14\" fill=\"#fff\"/>';\n  const pauseIcon = '<rect x=\"3\" y=\"2\" width=\"3\" height=\"12\" fill=\"#fff\"/><rect x=\"10\" y=\"2\" width=\"3\" height=\"12\" fill=\"#fff\"/>';\n  const restartIcon = '<polygon points=\"4,2 14,8 4,14\" fill=\"#fff\"/><circle cx=\"12\" cy=\"4\" r=\"1.5\" fill=\"#fff\"/>';\n\n  // Determine if simulation is completed\n  const maxSegments = window.gcodeToolpathSegments ? window.gcodeToolpathSegments.length : 0;\n  const isAtEnd = simState.idx >= maxSegments;\n  const isCompleted = simState.stopped && isAtEnd;\n\n  // Update button appearance and tooltip\n  if (simState.playing) {\n    // Currently playing - show pause\n    domElements.playBtn.classList.remove('sim-play', 'sim-restart');\n    domElements.playBtn.classList.add('sim-pause');\n    domElements.runSimulationIcon.innerHTML = pauseIcon;\n    domElements.playBtn.title = 'Pause simulation';\n  } else if (isCompleted) {\n    // Completed - show restart\n    domElements.playBtn.classList.remove('sim-pause', 'sim-play');\n    domElements.playBtn.classList.add('sim-restart');\n    domElements.runSimulationIcon.innerHTML = restartIcon;\n    domElements.playBtn.title = 'Restart simulation from beginning';\n  } else {\n    // Paused or stopped - show play\n    domElements.playBtn.classList.remove('sim-pause', 'sim-restart');\n    domElements.playBtn.classList.add('sim-play');\n    domElements.runSimulationIcon.innerHTML = playIcon;\n    domElements.playBtn.title = simState.paused ? 'Resume simulation' : 'Start simulation';\n  }\n}\n\n/**\n * Track which G-code command is currently being executed\n */\nlet currentCommandIndex = -1;\n\n/**\n * CONSOLIDATED FUNCTION: Update both G-code line info display and editor selection\n * This is the single source of truth for current line display logic\n * @param {number} segmentIndex - Current segment index from simulation\n */\nfunction updateCurrentLineDisplay(segmentIndex) {\n  try {\n    // Check if we have valid segment index\n    if (typeof segmentIndex !== 'number' || segmentIndex < 0) {\n      return;\n    }\n\n    // Check if we have required data\n    if (!window.gcodeLineMap || !Array.isArray(window.gcodeLineMap)) {\n      return;\n    }\n\n    if (!window.gcodeLines || !Array.isArray(window.gcodeLines)) {\n      return;\n    }\n\n    // Find which command this segment belongs to using the line map\n    let commandLineNumber = -1;\n\n    if (segmentIndex >= 0 && segmentIndex < window.gcodeLineMap.length) {\n      // Use the direct mapping from the line map\n      commandLineNumber = window.gcodeLineMap[segmentIndex];\n\n      // If the direct mapping is -1 (continuation segment), look for the previous non-negative value\n      // This handles arc commands where multiple segments belong to the same G-code line\n      if (commandLineNumber === -1) {\n        for (let i = segmentIndex; i >= 0; i--) {\n          if (window.gcodeLineMap[i] >= 0) {\n            commandLineNumber = window.gcodeLineMap[i];\n            break;\n          }\n        }\n      }\n    }\n\n    // Validate the command line number is within bounds\n    if (commandLineNumber >= window.gcodeLines.length) {\n      commandLineNumber = window.gcodeLines.length - 1; // Use last valid line\n    }\n\n    // Update the G-code line info display\n    updateLineInfoDisplay(commandLineNumber, segmentIndex);\n\n    // Update editor selection (only if we're moving to a different G-code command)\n    // This prevents jumping to next line for each segment within the same G2/G3 command\n    if (commandLineNumber !== -1 && commandLineNumber !== currentCommandIndex) {\n      currentCommandIndex = commandLineNumber;\n      updateEditorSelection(commandLineNumber);\n    }\n  } catch (error) {\n    console.warn('Error updating current line display:', error);\n  }\n}\n\n// Cache for line info display to avoid repeated DOM updates\nlet lastDisplayedLineNumber = -1;\n\n/**\n * Update the G-code line info display box\n * @param {number} commandLineNumber - The G-code command line number (0-based)\n * @param {number} segmentIndex - The current segment index\n */\nfunction updateLineInfoDisplay(commandLineNumber, segmentIndex) {\n  const infoContainer = document.getElementById('gcodeLineInfo');\n  if (!infoContainer) {\n    return;\n  }\n\n  // Display the command line number, not the segment index\n  const displayLineNumber = commandLineNumber >= 0 ? commandLineNumber : Math.max(0, Math.min(segmentIndex, window.gcodeLines.length - 1));\n\n  // PERFORMANCE OPTIMIZATION: Only update DOM if line number actually changed\n  if (displayLineNumber === lastDisplayedLineNumber) {\n    return; // Skip DOM update if showing same line\n  }\n\n  lastDisplayedLineNumber = displayLineNumber;\n\n  let infoHtml = '';\n  if (displayLineNumber >= 0 && displayLineNumber < window.gcodeLines.length) {\n    const line = window.gcodeLines[displayLineNumber];\n    infoHtml += `<br>#${displayLineNumber + 1} ${line}`;\n  }\n\n  infoContainer.style.display = 'block';\n  infoContainer.innerHTML = infoHtml;\n}\n\n/**\n * Update the editor selection\n * @param {number} commandLineNumber - The G-code command line number (0-based)\n */\nfunction updateEditorSelection(commandLineNumber) {\n  // Check if output editor is available\n  if (!window.outputEditor) {\n    return;\n  }\n\n  const actualLineNumber = commandLineNumber + 1; // Convert to 1-based\n\n  // PERFORMANCE OPTIMIZATION: Skip expensive editor operations during animation\n  // Only update editor if simulation is not playing (to avoid 170ms frame times)\n  if (globalSimState.playing) {\n    return; // Skip editor updates during animation for better performance\n  }\n\n  // Update the editor selection\n  window.outputEditor.revealLineInCenter(actualLineNumber);\n  window.outputEditor.setPosition({ lineNumber: actualLineNumber, column: 1 });\n  window.outputEditor.focus();\n}\n\n// Legacy selectEditorLine function removed - use updateCurrentLineDisplay() instead\n\n/**\n * Reset the command tracking when simulation starts\n */\nfunction resetCommandTracking() {\n  currentCommandIndex = -1;\n  lastDisplayedLineNumber = -1; // Reset line display cache\n}\n\n/**\n * Reset segment count state for incremental counting\n */\nfunction resetSegmentCountState() {\n  segmentCountState.lastIndex = -1;\n  segmentCountState.counts = { G0: 0, G1: 0, G2: 0, G3: 0 };\n  segmentCountState.needsFullRecalc = true;\n\n  // Reset draw range cache to force updates\n  lastDrawRanges = { G0: -1, G1: -1, G2: -1, G3: -1 };\n\n  // Reset visualization index cache\n  lastVisualizationIndex = -1;\n}\n\n/**\n * Reset seek debounce state\n */\nfunction resetSeekDebounceState() {\n  if (seekDebounceState.seekTimeout) {\n    clearTimeout(seekDebounceState.seekTimeout);\n  }\n  seekDebounceState.seekTimeout = null;\n  seekDebounceState.lastSeekPosition = -1;\n  seekDebounceState.isRapidSeeking = false;\n  seekDebounceState.isDragging = false;\n  seekDebounceState.seekStartTime = 0;\n  seekDebounceState.lastInputTime = 0;\n\n  // Reset render throttle state\n  if (renderThrottleState.renderTimeout) {\n    clearTimeout(renderThrottleState.renderTimeout);\n  }\n  renderThrottleState.renderTimeout = null;\n  renderThrottleState.pendingRender = false;\n  renderThrottleState.lastRenderTime = 0;\n}\n\n/**\n * Calculate segment counts incrementally for performance optimization\n * @param {number} targetIdx - Target segment index\n * @param {Object} parseResult - Parse result containing toolpath modes\n * @returns {Object} Segment counts { G0, G1, G2, G3 }\n */\nfunction calculateIncrementalSegmentCounts(targetIdx, parseResult) {\n  if (!parseResult.toolpathModes || parseResult.toolpathModes.length === 0) {\n    return { G0: 0, G1: 0, G2: 0, G3: 0 };\n  }\n\n  const maxIdx = Math.min(targetIdx, parseResult.toolpathModes.length);\n\n  // If we need a full recalculation or going backwards, recalculate from scratch\n  if (segmentCountState.needsFullRecalc || targetIdx < segmentCountState.lastIndex) {\n    segmentCountState.counts = { G0: 0, G1: 0, G2: 0, G3: 0 };\n\n    for (let i = 0; i < maxIdx; i++) {\n      const mode = parseResult.toolpathModes[i];\n      if (mode === 'G0') segmentCountState.counts.G0++;\n      else if (mode === 'G1') segmentCountState.counts.G1++;\n      else if (mode === 'G2') segmentCountState.counts.G2++;\n      else if (mode === 'G3') segmentCountState.counts.G3++;\n    }\n\n    segmentCountState.lastIndex = maxIdx;\n    segmentCountState.needsFullRecalc = false;\n  } else {\n    // Incremental update: only count new segments since last update\n    for (let i = segmentCountState.lastIndex; i < maxIdx; i++) {\n      const mode = parseResult.toolpathModes[i];\n      if (mode === 'G0') segmentCountState.counts.G0++;\n      else if (mode === 'G1') segmentCountState.counts.G1++;\n      else if (mode === 'G2') segmentCountState.counts.G2++;\n      else if (mode === 'G3') segmentCountState.counts.G3++;\n    }\n\n    segmentCountState.lastIndex = maxIdx;\n  }\n\n  // Incremental counting is working well - debug logging removed\n\n  return { ...segmentCountState.counts };\n}\n\n// Cache for last draw range values to avoid redundant GPU updates\nlet lastDrawRanges = { G0: -1, G1: -1, G2: -1, G3: -1 };\n\n/**\n * Update draw ranges for all geometries in a single batched operation\n * @param {Object} segmentCounts - Segment counts { G0, G1, G2, G3 }\n */\nfunction updateDrawRangesBatch(segmentCounts) {\n  if (!window.gcodeBatchedGeometries) {\n    return;\n  }\n\n  // Adaptive rendering: skip updates if performance is poor\n  const currentTime = performance.now();\n  if (adaptiveRendering.enabled) {\n    // Skip draw range updates if we're updating too frequently\n    if (currentTime - adaptiveRendering.lastDrawRangeUpdate < 16) { // Max 60fps updates\n      return;\n    }\n    adaptiveRendering.lastDrawRangeUpdate = currentTime;\n  }\n\n  // MAJOR OPTIMIZATION: Only update draw ranges if they actually changed\n  // This prevents expensive GPU state changes for the same values\n  const geometries = window.gcodeBatchedGeometries;\n\n  if (geometries.G0 && segmentCounts.G0 !== undefined) {\n    const newRange = segmentCounts.G0 * 2;\n    if (lastDrawRanges.G0 !== newRange) {\n      geometries.G0.setDrawRange(0, newRange);\n      lastDrawRanges.G0 = newRange;\n    }\n  }\n  if (geometries.G1 && segmentCounts.G1 !== undefined) {\n    const newRange = segmentCounts.G1 * 2;\n    if (lastDrawRanges.G1 !== newRange) {\n      geometries.G1.setDrawRange(0, newRange);\n      lastDrawRanges.G1 = newRange;\n    }\n  }\n  if (geometries.G2 && segmentCounts.G2 !== undefined) {\n    const newRange = segmentCounts.G2 * 2;\n    if (lastDrawRanges.G2 !== newRange) {\n      geometries.G2.setDrawRange(0, newRange);\n      lastDrawRanges.G2 = newRange;\n    }\n  }\n  if (geometries.G3 && segmentCounts.G3 !== undefined) {\n    const newRange = segmentCounts.G3 * 2;\n    if (lastDrawRanges.G3 !== newRange) {\n      geometries.G3.setDrawRange(0, newRange);\n      lastDrawRanges.G3 = newRange;\n    }\n  }\n}\n\n/**\n * Update performance monitoring statistics\n */\nfunction updatePerformanceMonitoring() {\n  if (!performanceMonitor.enabled) return;\n\n  const currentTime = performance.now();\n\n  if (performanceMonitor.lastFrameTime > 0) {\n    const frameTime = currentTime - performanceMonitor.lastFrameTime;\n    performanceMonitor.frameTimeHistory.push(frameTime);\n\n    if (performanceMonitor.frameTimeHistory.length > performanceMonitor.maxHistoryLength) {\n      performanceMonitor.frameTimeHistory.shift();\n    }\n\n    // Calculate average frame time\n    performanceMonitor.averageFrameTime =\n      performanceMonitor.frameTimeHistory.reduce((a, b) => a + b, 0) /\n      performanceMonitor.frameTimeHistory.length;\n  }\n\n  performanceMonitor.lastFrameTime = currentTime;\n  performanceMonitor.frameCount++;\n\n  // Log performance stats every 60 frames (roughly once per second at 60fps)\n  if (performanceMonitor.frameCount % 60 === 0) {\n    const avgFPS = performanceMonitor.averageFrameTime > 0 ? 1000 / performanceMonitor.averageFrameTime : 0;\n\n\n    // Auto-enable adaptive rendering if performance is poor\n    if (avgFPS < 15 && !adaptiveRendering.enabled) {\n      adaptiveRendering.enabled = true;\n      adaptiveRendering.skipFrames = Math.max(1, Math.floor(30 / avgFPS) - 1);\n\n    } else if (avgFPS > 25 && adaptiveRendering.enabled) {\n      adaptiveRendering.enabled = false;\n      adaptiveRendering.skipFrames = 0;\n\n    }\n  }\n}\n\n/**\n * Validate segment count accuracy (for debugging)\n */\nfunction validateSegmentCounts(targetIdx, parseResult) {\n  if (!parseResult.toolpathModes) return true;\n\n  // Calculate counts the old way for comparison\n  let g0Count = 0, g1Count = 0, g2Count = 0, g3Count = 0;\n  const maxIdx = Math.min(targetIdx, parseResult.toolpathModes.length);\n\n  for (let i = 0; i < maxIdx; i++) {\n    const mode = parseResult.toolpathModes[i];\n    if (mode === 'G0') g0Count++;\n    else if (mode === 'G1') g1Count++;\n    else if (mode === 'G2') g2Count++;\n    else if (mode === 'G3') g3Count++;\n  }\n\n  const expected = { G0: g0Count, G1: g1Count, G2: g2Count, G3: g3Count };\n  const actual = segmentCountState.counts;\n\n  const isValid =\n    expected.G0 === actual.G0 &&\n    expected.G1 === actual.G1 &&\n    expected.G2 === actual.G2 &&\n    expected.G3 === actual.G3;\n\n  if (!isValid) {\n    // Validation failed - segment count mismatch\n  }\n\n  return isValid;\n}\n\n// Performance test functions removed - optimizations are working well\n\n// Animation loop performance test removed - optimizations are working well\n\n// Debug optimization status function removed - optimizations are stable\n\n// Adaptive rendering is now handled by the core visualizer\n\n// Animation loop profiling function removed - performance is now optimized\n\n/**\n * Stop the simulation (can be called externally)\n */\nfunction stopSimulation() {\n  if (globalSimState.playing) {\n    globalSimState.playing = false;\n    globalSimState.paused = false;\n    globalSimState.stopped = true;\n\n    // Update the play button icon if it exists\n    const playBtn = document.getElementById('runSimulationBtn');\n    const runSimulationIcon = document.getElementById('runSimulationIcon');\n\n    if (playBtn && runSimulationIcon) {\n      const domElements = { playBtn, runSimulationIcon };\n      updatePlayPauseIcon(domElements, globalSimState);\n    }\n\n    //console.log('Simulation stopped externally');\n  }\n}\n\n\n// Cache for last visualization index to avoid redundant updates\nlet lastVisualizationIndex = -1;\n\n/**\n * Update visualization to show toolpath up to a specific index\n * @param {number} targetIdx - Target segment index\n * @param {Object} parseResult - Parse result containing toolpath data\n */\nfunction updateVisualizationToIndex(targetIdx, parseResult) {\n  // OPTIMIZATION: Skip redundant visualization updates for same index\n  if (targetIdx === lastVisualizationIndex) {\n    return; // No need to update if we're already at this index\n  }\n\n  lastVisualizationIndex = targetIdx;\n\n  // Use incremental segment counting for performance optimization\n  const segmentCounts = calculateIncrementalSegmentCounts(targetIdx, parseResult);\n\n  // Update draw ranges using batched approach\n  updateDrawRangesBatch(segmentCounts);\n}\n\n/**\n * Run toolpath simulation animation\n */\nfunction runSimulation(\n  startIdx,\n  domElements,\n  parseResult,\n  simState,\n  _generation\n) {\n  if (\n    !parseResult.toolpathSegments ||\n    parseResult.toolpathSegments.length === 0\n  )\n    return;\n\n  const segments = parseResult.toolpathSegments;\n  let idx = startIdx;\n\n  function animate() {\n    if (!simState.playing || simState.stopped) return;\n\n    if (idx >= segments.length) {\n      // Simulation completed\n      simState.playing = false;\n      simState.stopped = true;\n      simState.paused = false;\n      simState.idx = segments.length; // Ensure we're at the end\n\n\n      updatePlayPauseIcon(domElements, simState);\n\n      // Update progress bar to show completion\n      if (domElements.progressBar) {\n        domElements.progressBar.value = segments.length;\n      }\n\n      return;\n    }\n\n    // Speed logic: segments per frame\n    const speed = domElements.speedSlider\n      ? Math.max(0.001, Number(domElements.speedSlider.value))\n      : 10;\n    let segmentsThisFrame =\n      speed > 1\n        ? Math.max(1, Math.round(speed))\n        : Math.max(1, Math.round(1 / speed));\n\n    // Batch update segments per frame - OPTIMIZED VERSION\n    let processed = 0;\n    let lastIdx = idx;\n\n    // Process multiple segments but only update visualization once per frame\n    while (processed < segmentsThisFrame && idx < segments.length) {\n      lastIdx = idx;\n      idx++;\n      simState.idx = idx;\n      processed++;\n    }\n\n    // Adaptive rendering: skip frames if performance is poor\n    let shouldRender = true;\n    if (adaptiveRendering.enabled) {\n      adaptiveRendering.frameSkipCounter++;\n      if (adaptiveRendering.frameSkipCounter <= adaptiveRendering.skipFrames) {\n        shouldRender = false;\n      } else {\n        adaptiveRendering.frameSkipCounter = 0;\n      }\n    }\n\n    if (shouldRender) {\n      // Single visualization update per frame (major performance improvement)\n      const finalIdx = idx - 1;\n      updateVisualizationToIndex(finalIdx, parseResult);\n\n      // Single render call per frame (not a seeking operation)\n      throttledRender(false);\n    }\n\n    // Always update progress bar and line display (lightweight operations)\n    if (domElements.progressBar) {\n      domElements.progressBar.value = idx - 1;\n    }\n\n    // Update global current line index and call update functions once per batch\n    window.gcodeCurrentLineIdx = lastIdx;\n\n    // Update current line display once per frame\n    if (lastIdx >= 0 && window.gcodeLines && window.gcodeLineMap) {\n      updateCurrentLineDisplay(lastIdx);\n    }\n\n    // Update performance monitoring\n    updatePerformanceMonitoring();\n\n    // Next frame\n    requestAnimationFrame(animate);\n  }\n\n  animate();\n}\n\n// Keep the old class for backward compatibility but make it simple\nclass ViewerControls {\n  constructor(_viewer3d) {\n    // Simple wrapper - the real work is done by the functions above\n    //console.log('ViewerControls initialized (using function-based approach)');\n  }\n}\n\n// Export functions for use in other modules\nexport {\n  setupSimulationControls,\n  updatePlayPauseIcon,\n  updateVisualizationToIndex,\n  runSimulation,\n  updateCurrentLineDisplay,\n  resetSegmentCountState,\n  resetSeekDebounceState,\n  calculateIncrementalSegmentCounts,\n  updateDrawRangesBatch,\n  updatePerformanceMonitoring,\n  validateSegmentCounts,\n  stopSimulation,\n  throttledRender,\n  ViewerControls,\n};\n\n// Make functions globally available\nwindow.setupSimulationControls = setupSimulationControls;\nwindow.updatePlayPauseIcon = updatePlayPauseIcon;\nwindow.updateVisualizationToIndex = updateVisualizationToIndex;\nwindow.runSimulation = runSimulation;\nwindow.updateCurrentLineDisplay = updateCurrentLineDisplay;\nwindow.resetCommandTracking = resetCommandTracking;\nwindow.resetSegmentCountState = resetSegmentCountState;\nwindow.resetSeekDebounceState = resetSeekDebounceState;\nwindow.calculateIncrementalSegmentCounts = calculateIncrementalSegmentCounts;\nwindow.updateDrawRangesBatch = updateDrawRangesBatch;\nwindow.updatePerformanceMonitoring = updatePerformanceMonitoring;\nwindow.validateSegmentCounts = validateSegmentCounts;\nwindow.stopSimulation = stopSimulation;\nwindow.throttledRender = throttledRender;\nwindow.ViewerControls = ViewerControls;\n","/**\n * Visualizer Core Module\n *\n * Core 3D rendering functionality for G-code visualization\n */\n\nimport { setupSimulationControls } from './controls.js';\nimport { parseGcodeOptimized } from './parser.js';\nimport { GeometryManager } from './geometry-manager.js';\nimport { ChunkLoader } from './chunk-loader.js';\n\n/**\n * Core 3D visualizer class\n */\nexport class GcodeVisualizer {\n  constructor() {\n    this.scene = null;\n    this.camera = null;\n    this.renderer = null;\n    this.controls = null;\n    this.container = null;\n    this.parseResult = null;\n    this.hoverSystem = null;\n    this.geometryManager = new GeometryManager();\n    this.chunkLoader = new ChunkLoader(this);\n\n    // Camera mode properties\n    this.cameraMode = 'perspective'; // 'perspective' or 'orthographic'\n    this.perspectiveCamera = null;\n    this.orthographicCamera = null;\n\n    // Performance monitoring\n    this.performanceMonitor = {\n      enabled: true,\n      frameCount: 0,\n      lastTime: 0,\n      averageFPS: 0,\n      renderTimeHistory: [],\n      maxHistoryLength: 60,\n      lastLogTime: 0,\n      logInterval: 5000, // Log every 5 seconds\n    };\n\n    // Adaptive rendering properties\n    this.adaptiveRendering = false;\n    this.targetFPS = 30;\n    this.frameInterval = 1000 / 30; // Will be updated when targetFPS changes\n    this.lastFrameTime = 0;\n    this.lastCameraPosition = new THREE.Vector3();\n    this.cameraMoveThreshold = 0.1;\n\n    // Frustum culling properties\n    this.frustum = null;\n    this.frustumMatrix = new THREE.Matrix4();\n    this.culledObjects = new Set();\n\n    // Instancing properties\n    this.useInstancing = true; // Enable instancing by default for better performance\n    this.instancedMeshes = new Map(); // Store instanced meshes by mode\n\n    // Progressive loading properties\n    this.progressiveLoading = true; // Always use progressive loading for proper state management\n    this.loadingProgress = 0;\n    this.isLoading = false;\n    this.loadingTimeout = null; // Timeout to force hide loading indicator\n  }\n\n  /**\n   * Set adaptive rendering parameters\n   * @param {boolean} enabled - Whether to enable adaptive rendering\n   * @param {number} targetFPS - Target frames per second (default: 30)\n   */\n  setAdaptiveRendering(enabled, targetFPS = 30) {\n    this.adaptiveRendering = enabled;\n    this.targetFPS = Math.max(1, Math.min(60, targetFPS)); // Clamp between 1-60\n    this.frameInterval = 1000 / this.targetFPS;\n\n    // Store initial camera position for movement detection\n    if (this.camera) {\n      this.lastCameraPosition.copy(this.camera.position);\n    }\n  }\n\n  /**\n   * Check if the scene should be rendered based on adaptive rendering settings\n   * @param {number} currentTime - Current timestamp from performance.now()\n   * @returns {boolean} True if scene should be rendered\n   */\n  shouldRenderFrame(currentTime) {\n    // Always render if adaptive rendering is disabled\n    if (!this.adaptiveRendering) {\n      return true;\n    }\n\n    // Always render if this is the first frame\n    if (this.lastFrameTime === 0) {\n      return true;\n    }\n\n    // Check if enough time has passed for target FPS\n    const timeSinceLastFrame = currentTime - this.lastFrameTime;\n    if (timeSinceLastFrame < this.frameInterval) {\n      return false;\n    }\n\n    // Check if camera has moved significantly\n    if (this.camera) {\n      const cameraMovement = this.lastCameraPosition.distanceTo(\n        this.camera.position\n      );\n      if (cameraMovement > this.cameraMoveThreshold) {\n        return true; // Camera moved, render immediately\n      }\n    }\n\n    // Check if controls are being used (user interaction)\n    if (this.controls && this.controls.isBeingUsed) {\n      return true;\n    }\n\n    return true; // Default to rendering\n  }\n\n  /**\n   * Initialize frustum culling system\n   */\n  initializeFrustumCulling() {\n    this.frustum = new THREE.Frustum();\n    this.frustumMatrix = new THREE.Matrix4();\n  }\n\n  /**\n   * Update the viewing frustum based on current camera position\n   */\n  updateFrustum() {\n    if (!this.camera) return;\n\n    // Update the camera's matrix world\n    this.camera.updateMatrixWorld();\n\n    // Create frustum matrix from camera's projection and world matrices\n    this.frustumMatrix.multiplyMatrices(\n      this.camera.projectionMatrix,\n      this.camera.matrixWorldInverse\n    );\n\n    // Set frustum from the matrix\n    this.frustum.setFromProjectionMatrix(this.frustumMatrix);\n  }\n\n  /**\n   * Update performance monitoring\n   */\n  updatePerformanceMonitor(currentTime, renderStartTime) {\n    if (!this.performanceMonitor.enabled) return;\n\n    this.performanceMonitor.frameCount++;\n    const renderTime = currentTime - renderStartTime;\n\n    // Add render time to history\n    this.performanceMonitor.renderTimeHistory.push(renderTime);\n    if (\n      this.performanceMonitor.renderTimeHistory.length >\n      this.performanceMonitor.maxHistoryLength\n    ) {\n      this.performanceMonitor.renderTimeHistory.shift();\n    }\n\n    // Calculate average FPS every second\n    if (this.performanceMonitor.lastTime === 0) {\n      this.performanceMonitor.lastTime = currentTime;\n    } else {\n      const timeDiff = currentTime - this.performanceMonitor.lastTime;\n      if (timeDiff >= 1000) {\n        this.performanceMonitor.averageFPS = Math.round(\n          (this.performanceMonitor.frameCount * 1000) / timeDiff\n        );\n        this.performanceMonitor.frameCount = 0;\n        this.performanceMonitor.lastTime = currentTime;\n      }\n    }\n\n    // Store performance stats globally for live display (update every second)\n    if (\n      currentTime - this.performanceMonitor.lastLogTime >\n      1000 // Update every 1 second for live display\n    ) {\n      const avgRenderTime =\n        this.performanceMonitor.renderTimeHistory.length > 0\n          ? this.performanceMonitor.renderTimeHistory.reduce(\n            (a, b) => a + b,\n            0\n          ) / this.performanceMonitor.renderTimeHistory.length\n          : 0;\n\n      // Store performance data globally\n      window.performanceData = {\n        averageFPS: this.performanceMonitor.averageFPS,\n        averageRenderTime: avgRenderTime,\n        culledObjects: this.culledObjects.size,\n        totalObjects: this.scene ? this.scene.children.length : 0,\n        adaptiveRendering: this.adaptiveRendering,\n        canvasSize: this.renderer\n          ? {\n            width: this.renderer.domElement.width,\n            height: this.renderer.domElement.height,\n          }\n          : { width: 0, height: 0 },\n        memoryInfo: performance.memory\n          ? {\n            used: Math.round(performance.memory.usedJSHeapSize / 1024 / 1024),\n            total: Math.round(\n              performance.memory.totalJSHeapSize / 1024 / 1024\n            ),\n            limit: Math.round(\n              performance.memory.jsHeapSizeLimit / 1024 / 1024\n            ),\n          }\n          : null,\n        lastUpdate: new Date().toLocaleTimeString(),\n      };\n\n      // Update the HTML stats display immediately\n      if (window.updateGcodeStats) {\n        try {\n          window.updateGcodeStats();\n        } catch (error) {\n          console.warn('Error updating stats display:', error);\n        }\n      }\n\n      // Console log performance data every 5 seconds (less frequent for console spam)\n      if (currentTime - (this.performanceMonitor.lastConsoleLog || 0) > 5000) {\n        //console.log('Performance Monitor:', window.performanceData);\n        this.performanceMonitor.lastConsoleLog = currentTime;\n      }\n\n      this.performanceMonitor.lastLogTime = currentTime;\n    }\n  }\n\n  /**\n   * Check if an object is visible within the viewing frustum\n   * @param {THREE.Object3D} object - The object to check\n   * @returns {boolean} True if object is visible\n   */\n  isObjectVisible(object) {\n    if (!object || !this.frustum) return true;\n\n    // Skip objects without geometry (like lights, cameras, etc.)\n    if (!object.geometry && !object.children.length) return true;\n\n    // Check if object has a geometry and pre-calculated bounding box\n    if (object.geometry) {\n      // Use pre-calculated bounding box from userData if available (performance optimization)\n      if (object.userData && object.userData.boundingBox) {\n        const result = this.frustum.intersectsBox(object.userData.boundingBox);\n        return result;\n      }\n\n      // Fallback to object's own bounding box if available\n      if (object.geometry.boundingBox) {\n        const result = this.frustum.intersectsBox(object.geometry.boundingBox);\n        return result;\n      }\n\n      // Fallback to bounding sphere\n      if (object.geometry.boundingSphere) {\n        const result = this.frustum.intersectsSphere(\n          object.geometry.boundingSphere\n        );\n        return result;\n      }\n    }\n\n    // For objects without geometry, check children recursively\n    if (object.children && object.children.length > 0) {\n      const result = object.children.some((child) =>\n        this.isObjectVisible(child)\n      );\n      return result;\n    }\n\n    // Default to visible if we can't determine\n    return true;\n  }\n\n  /**\n   * Apply frustum culling to all objects in the scene\n   */\n  applyFrustumCulling() {\n    // Temporarily disable frustum culling to avoid issues\n    // TODO: Re-enable once we fix the culling logic\n    return;\n\n    /*\n            if (!this.frustum) return;\n    \n            this.culledObjects.clear();\n    \n            // Only apply culling selectively to avoid over-culling\n            this.scene.traverse((child) => {\n                // Only apply culling to meshes that are likely to be toolpath objects\n                if (child.isMesh && child.geometry && child.userData && child.userData.isToolpathObject) {\n                    const wasVisible = child.visible;\n                    child.visible = this.isObjectVisible(child);\n    \n                    // Track changes for debugging\n                    if (wasVisible !== child.visible) {\n                        if (child.visible) {\n                            this.culledObjects.delete(child);\n                        } else {\n                            this.culledObjects.add(child);\n                            // Log only occasionally to avoid spam\n                        }\n                    }\n                }\n            });\n    \n            // Log culling stats occasionally\n            if (this.culledObjects.size > 0 && Math.random() < 0.001) {\n            }\n            */\n  }\n\n  /**\n   * Initialize the 3D visualizer\n   */\n  initialize(container) {\n    this.container = container;\n\n    // Setup Three.js scene\n    this.scene = new THREE.Scene();\n    // Remove background color to keep it transparent\n    // this.scene.background = new THREE.Color(0x000000);\n\n    // Create perspective camera (default)\n    this.perspectiveCamera = new THREE.PerspectiveCamera(\n      60,\n      container.offsetWidth / container.offsetHeight,\n      0.1,\n      50000\n    );\n    this.perspectiveCamera.position.set(0, -100, 80);\n    this.perspectiveCamera.up.set(0, 0, 1); // Z is up\n\n    // Create orthographic camera (for flat view)\n    const aspect = container.offsetWidth / container.offsetHeight;\n    const frustumSize = 200; // Adjust this value based on your needs\n    this.orthographicCamera = new THREE.OrthographicCamera(\n      -frustumSize * aspect / 2,\n      frustumSize * aspect / 2,\n      frustumSize / 2,\n      -frustumSize / 2,\n      0.1,\n      50000\n    );\n    this.orthographicCamera.position.set(0, -100, 80);\n    this.orthographicCamera.up.set(0, 0, 1); // Z is up\n\n    // Set default camera\n    this.camera = this.perspectiveCamera;\n\n    // Create optimized renderer with transparent background support\n    this.renderer = new THREE.WebGLRenderer({\n      antialias: true,\n      alpha: true, // Enable alpha channel for transparency\n      powerPreference: 'high-performance',\n      precision: 'mediump', // Use medium precision for better performance\n      stencil: false, // Disable stencil buffer if not needed\n      depth: true,\n    });\n\n    // Set transparent background for the canvas\n    this.renderer.setClearColor(0x000000, 0); // Transparent background (alpha = 0)\n    this.renderer.setClearAlpha(0); // Ensure alpha is 0 for full transparency\n    this.renderer.setPixelRatio(Math.min(window.devicePixelRatio, 1.5)); // Limit pixel ratio for performance\n    this.renderer.setSize(container.offsetWidth, container.offsetHeight);\n\n    // Performance optimizations\n    this.renderer.shadowMap.enabled = false; // Disable shadows for CNC visualization\n\n    // Output settings\n    this.renderer.outputColorSpace = THREE.SRGBColorSpace;\n\n    // Disable features not needed for CNC visualization\n    this.renderer.localClippingEnabled = false;\n    this.renderer.debug.checkShaderErrors = false; // Disable in production\n\n    // GPU optimizations if available\n    if (this.renderer.capabilities.isWebGL2) {\n      //console.log('WebGL2 detected - enabling advanced performance features');\n    }\n\n    //console.log('Renderer optimized for CNC visualization performance');\n\n    // Ensure canvas is properly positioned within container\n    this.renderer.domElement.style.position = 'absolute';\n    this.renderer.domElement.style.top = '0';\n    this.renderer.domElement.style.left = '0';\n    this.renderer.domElement.style.width = '100%';\n    this.renderer.domElement.style.height = '100%';\n\n    container.appendChild(this.renderer.domElement);\n\n    //console.log('Renderer canvas added to container, canvas size:', this.renderer.domElement.width, 'x', this.renderer.domElement.height);\n\n    // Add light\n    const light = new THREE.DirectionalLight(0xffffff, 0.7);\n    light.position.set(0, 0, 100);\n    this.scene.add(light);\n    //console.log('Light added to scene');\n\n    // Add axes helper\n    this.scene.add(new THREE.AxesHelper(10));\n    //console.log('Axes helper added to scene');\n\n    this.setupControls();\n    this.setupEventListeners();\n\n    // Enable conservative optimizations by default\n    // Adaptive rendering can cause perceived lag, so start disabled\n    this.setAdaptiveRendering(false, 30);\n\n    // Initialize frustum culling for performance optimization\n    this.initializeFrustumCulling();\n\n    //console.log('Initialization complete');\n    return true;\n  }\n\n  /**\n   * Setup orbit controls\n   */\n  setupControls() {\n    if (typeof THREE.OrbitControls !== 'undefined') {\n      this.controls = new THREE.OrbitControls(\n        this.camera,\n        this.renderer.domElement\n      );\n    } else if (typeof window.OrbitControls !== 'undefined') {\n      this.controls = new window.OrbitControls(\n        this.camera,\n        this.renderer.domElement\n      );\n    }\n\n    if (this.controls) {\n      this.controls.mouseButtons = {\n        LEFT: THREE.MOUSE.PAN,\n        MIDDLE: THREE.MOUSE.ROTATE,\n        RIGHT: THREE.MOUSE.PAN,\n      };\n      this.controls.enablePan = true;\n      this.controls.enableZoom = true;\n      this.controls.enableRotate = true;\n      this.controls.screenSpacePanning = true;\n      this.controls.enableDamping = true;\n      this.controls.dampingFactor = 0.05;\n    }\n  }\n\n  /**\n   * Setup event listeners\n   */\n  setupEventListeners() {\n    const onResize = () => {\n      if (!this.container) return;\n      const w = this.container.offsetWidth;\n      const h = this.container.offsetHeight;\n\n      // Update camera aspect ratio for both cameras\n      this.updateCameraAspect();\n\n      // Update renderer size\n      this.renderer.setSize(w, h);\n    };\n    window.addEventListener('resize', onResize);\n  }\n\n  /**\n   * Render G-code toolpath\n   */\n  async renderGcode(gcode) {\n    if (!gcode || !gcode.trim()) {\n      return { success: false, error: 'No G-code content' };\n    }\n\n    // Track file render time\n    const renderStartTime = performance.now();\n    this.performanceMonitor.fileRenderStartTime = renderStartTime;\n\n    let result;\n    try {\n      // Always use progressive loading for consistency and proper state management\n      if (this.progressiveLoading) {\n        result = await this.renderGcodeProgressive(gcode);\n      } else {\n        // Fallback to original rendering for small files (if progressive loading is disabled)\n        result = this.renderGcodeImmediate(gcode);\n      }\n\n      // Calculate total file render time\n      const renderEndTime = performance.now();\n      const fileRenderTime = renderEndTime - renderStartTime;\n\n      // Store file render time in global performance stats\n      if (window.performanceStats) {\n        window.performanceStats.fileRenderTime = fileRenderTime;\n      }\n\n      // Store in performance data for live display\n      if (window.performanceData) {\n        window.performanceData.fileRenderTime = fileRenderTime;\n        window.performanceData.lastFileRenderTime =\n          new Date().toLocaleTimeString();\n      }\n\n      //console.log(`File render completed in ${fileRenderTime.toFixed(2)}ms`);\n\n      // Force update the HTML stats display immediately after file render\n      if (window.updateGcodeStats) {\n        try {\n          window.updateGcodeStats();\n          //console.log('Stats updated after file render');\n        } catch (error) {\n          console.warn('Error updating stats after file render:', error);\n        }\n      }\n\n      return result;\n    } catch (error) {\n      // Clear render start time on error\n      this.performanceMonitor.fileRenderStartTime = null;\n      throw error;\n    }\n  }\n\n  /**\n   * Render G-code immediately (original method)\n   */\n  renderGcodeImmediate(gcode) {\n    const startTime = performance.now();\n\n    // Parse G-code\n    const parseStartTime = performance.now();\n    this.parseResult = this.parseGcode(gcode);\n    const parseTime = performance.now() - parseStartTime;\n\n    // Set up global variables for stats and info\n    if (typeof gcode === 'string') {\n      window.gcodeLines = gcode.split(/\\r?\\n/);\n    } else {\n      window.gcodeLines = [];\n    }\n\n    // Set segment counts for stats display\n    window.gcodeSegmentCounts = this.parseResult.segmentCounts || {\n      G0: 0,\n      G1: 0,\n      G2: 0,\n      G3: 0,\n    };\n\n    // Set performance stats\n    window.performanceStats = {\n      parseTime: parseTime,\n      renderTime: 0, // Will be updated after rendering\n      lineCount: window.gcodeLines.length,\n      segmentCount: this.parseResult.toolpathSegments\n        ? this.parseResult.toolpathSegments.length\n        : 0,\n    };\n\n    //console.log('[core.js] Performance stats set:', window.performanceStats);\n    //console.log('[core.js] Segment counts set:', window.gcodeSegmentCounts);\n\n    // Check if we have data to draw\n    if (!this.parseResult.anyDrawn) {\n      console.warn('No toolpath found to draw in immediate render');\n      return { success: false, error: 'No toolpath found' };\n    }\n\n    // Create line objects\n    this.createToolpathLines();\n\n    // Set global variables for simulation and other functionality\n    window.gcodeToolpathPoints = this.parseResult.toolpathPoints;\n    window.gcodeToolpathSegments = this.parseResult.toolpathSegments;\n    window.gcodeToolpathModes = this.parseResult.toolpathModes;\n    window.gcodeLineMap = this.parseResult.lineMap;\n\n    // Fit camera to show all points\n    this.fitCameraToToolpath();\n\n    // Setup simulation controls\n    this.setupSimulationControls();\n\n    // Update render time in performance stats\n    const renderTime = performance.now() - startTime;\n    if (window.performanceStats) {\n      window.performanceStats.renderTime = renderTime;\n    }\n\n    // Update stats display\n    if (window.updateGcodeStats) {\n      window.updateGcodeStats();\n    }\n\n    // Start animation loop\n    this.startAnimationLoop();\n\n    return { success: true, parseResult: this.parseResult };\n  }\n\n  /**\n   * Render G-code progressively\n   */\n  async renderGcodeProgressive(gcode) {\n    this.isLoading = true;\n    this.loadingProgress = 0;\n\n    try {\n      // Show loading indicator with timeout\n      this.showLoadingIndicator(true);\n\n      // Set a timeout to force hide the loading indicator after 30 seconds\n      this.loadingTimeout = setTimeout(() => {\n        console.warn(\n          'Loading timeout reached - forcing hide of loading indicator'\n        );\n        try {\n          this.showLoadingIndicator(false);\n        } catch (error) {\n          console.error('Error in timeout hide:', error);\n        }\n      }, 30000); // 30 second timeout\n\n      // Load G-code progressively\n      const result = await this.chunkLoader.loadGcodeProgressive(gcode, {\n        chunkSize: 1000,\n        maxChunksPerFrame: 5,\n        onProgress: (progress) => {\n          this.loadingProgress = progress.progress;\n          this.updateLoadingIndicator(progress);\n        },\n        onChunkProcessed: (data) => {\n          // Update visualization with partial data\n          this.updatePartialToolpath(data);\n        },\n      });\n\n      if (!result.success) {\n        if (result.cancelled) {\n          return { success: false, cancelled: true };\n        }\n        return { success: false, error: result.error };\n      }\n\n      // Store the final result\n      this.parseResult = {\n        toolpathSegments: result.segments || [],\n        toolpathModes: result.modes || [],\n        toolpathPoints: result.points || [],\n        segmentCounts: this.calculateSegmentCounts(\n          result.segments || [],\n          result.modes || []\n        ),\n        lineMap: result.lineMap || [], // Use the correct line map from parser\n        anyDrawn: (result.segments && result.segments.length > 0) || false,\n      };\n\n      // Set up global variables for stats and info\n      if (typeof gcode === 'string') {\n        window.gcodeLines = gcode.split(/\\r?\\n/);\n      } else {\n        window.gcodeLines = [];\n      }\n\n      window.gcodeSegmentCounts = this.parseResult.segmentCounts || {\n        G0: 0,\n        G1: 0,\n        G2: 0,\n        G3: 0,\n      };\n\n      // console.log('[core.js] Global variables set:', {\n      //     gcodeLines: Array.isArray(window.gcodeLines) ? window.gcodeLines.length : 'Not an array',\n      //     gcodeSegmentCounts: window.gcodeSegmentCounts,\n      //     parseResultExists: !!this.parseResult,\n      //     anyDrawn: this.parseResult ? this.parseResult.anyDrawn : 'No parseResult'\n      // });\n\n      // Set performance stats\n      window.performanceStats = {\n        parseTime: 0, // Progressive loading handles timing differently\n        renderTime: 0,\n        lineCount: result.lineCount,\n        segmentCount: result.segments.length,\n      };\n\n      //console.log('Progressive loading completed, creating toolpath lines');\n\n      // Create final line objects\n      this.createToolpathLines();\n      //console.log('Toolpath lines created');\n\n      // Set global variables for simulation and other functionality\n      window.gcodeToolpathPoints = this.parseResult.toolpathPoints;\n      window.gcodeToolpathSegments = this.parseResult.toolpathSegments;\n      window.gcodeToolpathModes = this.parseResult.toolpathModes;\n      window.gcodeLineMap = this.parseResult.lineMap;\n\n      // Fit camera to show all points\n      this.fitCameraToToolpath();\n\n      // Setup simulation controls\n      this.setupSimulationControls();\n\n      // Update stats display\n      if (window.updateGcodeStats) {\n        window.updateGcodeStats();\n      }\n\n      // Start animation loop\n      this.startAnimationLoop();\n\n      return { success: true, parseResult: this.parseResult };\n    } catch (error) {\n      console.error('Progressive rendering failed:', error);\n      // Clear the timeout\n      if (this.loadingTimeout) {\n        clearTimeout(this.loadingTimeout);\n        this.loadingTimeout = null;\n      }\n      // Make sure loading indicator is hidden even on error\n      try {\n        this.showLoadingIndicator(false);\n      } catch (hideError) {\n        console.error('Error hiding loading indicator after error:', hideError);\n      }\n      return { success: false, error: error.message };\n    } finally {\n\n      // console.log(\n      //   'Progressive loading finally block - hiding loading indicator'\n      // );\n\n      // Clear the timeout to prevent it from firing\n      if (this.loadingTimeout) {\n        clearTimeout(this.loadingTimeout);\n        this.loadingTimeout = null;\n      }\n\n      this.isLoading = false;\n      this.loadingProgress = 100;\n      try {\n        this.showLoadingIndicator(false);\n      } catch (error) {\n        console.error('Error hiding loading indicator:', error);\n      }\n    }\n  }\n\n  /**\n   * Create line objects for toolpath visualization\n   */\n  /**\n   * Create toolpath lines from parsed data\n   */\n  createToolpathLines() {\n    try {\n      //console.log('createToolpathLines called');\n\n      // Check if we have data\n      if (!this.parseResult) {\n        console.warn('No parseResult available');\n        return;\n      }\n\n      if (!this.parseResult.toolpathSegments) {\n        console.warn('No toolpathSegments in parseResult');\n        return;\n      }\n\n      //console.log(`Processing ${this.parseResult.toolpathSegments.length} segments`);\n\n      // Group segments by mode for instancing\n      const g0Segments = [],\n        g1Segments = [],\n        g2Segments = [],\n        g3Segments = [];\n      const segments = this.parseResult.toolpathSegments;\n      const modes = this.parseResult.toolpathModes;\n\n      for (let i = 0; i < segments.length; i++) {\n        const seg = segments[i];\n        const mode = modes[i];\n        if (mode === 'G0') g0Segments.push(seg);\n        else if (mode === 'G1') g1Segments.push(seg);\n        else if (mode === 'G2') g2Segments.push(seg);\n        else if (mode === 'G3') g3Segments.push(seg);\n      }\n\n      //console.log('Creating toolpath lines:', {\n      //     G0: g0Segments.length,\n      //     G1: g1Segments.length,\n      //     G2: g2Segments.length,\n      //     G3: g3Segments.length\n      // });\n\n      // Clear any existing toolpath lines\n      this.clearToolpathLines();\n\n      // Use traditional line rendering for better performance and consistent line thickness\n      this.createLineToolpathLines(\n        g0Segments,\n        g1Segments,\n        g2Segments,\n        g3Segments\n      );\n\n      //console.log('Scene children count:', this.scene.children.length);\n\n      // Debug log to verify meshes were added\n    } catch (error) {\n      console.error('Error in createToolpathLines:', error);\n    }\n  }\n\n  /**\n   * Create toolpath lines using instanced rendering for better performance\n   */\n  createInstancedToolpathLines(g0Segments, g1Segments, g2Segments, g3Segments) {\n    // console.log('createInstancedToolpathLines called with segments:', {\n    //     G0: g0Segments.length,\n    //     G1: g1Segments.length,\n    //     G2: g2Segments.length,\n    //     G3: g3Segments.length\n    // });\n\n    // Create instanced meshes for each mode\n    if (g0Segments.length > 0) {\n      const g0Mesh = this.geometryManager.createInstancedLineSystem(\n        g0Segments,\n        'G0'\n      );\n      if (g0Mesh) {\n        //console.log(`Created G0 instanced mesh with ${g0Mesh.count} instances`);\n        //console.log('Adding G0 mesh to scene');\n        this.scene.add(g0Mesh);\n        this.instancedMeshes.set('G0', g0Mesh);\n        //console.log('G0 mesh added to scene');\n        //console.log(`G0 mesh visible: ${g0Mesh.visible}, count: ${g0Mesh.count}`);\n\n        // Calculate and set bounding box for frustum culling\n        this.setInstancedMeshBoundingBox(g0Mesh, g0Segments);\n      }\n    }\n\n    if (g1Segments.length > 0) {\n      const g1Mesh = this.geometryManager.createInstancedLineSystem(\n        g1Segments,\n        'G1'\n      );\n      if (g1Mesh) {\n        //console.log(`Created G1 instanced mesh with ${g1Mesh.count} instances`);\n        //console.log('Adding G1 mesh to scene');\n        this.scene.add(g1Mesh);\n        this.instancedMeshes.set('G1', g1Mesh);\n        //console.log('G1 mesh added to scene');\n        //console.log(`G1 mesh visible: ${g1Mesh.visible}, count: ${g1Mesh.count}`);\n\n        // Calculate and set bounding box for frustum culling\n        this.setInstancedMeshBoundingBox(g1Mesh, g1Segments);\n      }\n    }\n\n    if (g2Segments.length > 0) {\n      const g2Mesh = this.geometryManager.createInstancedLineSystem(\n        g2Segments,\n        'G2'\n      );\n      if (g2Mesh) {\n        //console.log(`Created G2 instanced mesh with ${g2Mesh.count} instances`);\n        //console.log('Adding G2 mesh to scene');\n        this.scene.add(g2Mesh);\n        this.instancedMeshes.set('G2', g2Mesh);\n        //console.log('G2 mesh added to scene');\n        //console.log(`G2 mesh visible: ${g2Mesh.visible}, count: ${g2Mesh.count}`);\n\n        // Calculate and set bounding box for frustum culling\n        this.setInstancedMeshBoundingBox(g2Mesh, g2Segments);\n      }\n    }\n\n    if (g3Segments.length > 0) {\n      const g3Mesh = this.geometryManager.createInstancedLineSystem(\n        g3Segments,\n        'G3'\n      );\n      if (g3Mesh) {\n        //console.log(`Created G3 instanced mesh with ${g3Mesh.count} instances`);\n        //console.log('Adding G3 mesh to scene');\n        this.scene.add(g3Mesh);\n        this.instancedMeshes.set('G3', g3Mesh);\n        //console.log('G3 mesh added to scene');\n        //console.log(`G3 mesh visible: ${g3Mesh.visible}, count: ${g3Mesh.count}`);\n\n        // Calculate and set bounding box for frustum culling\n        this.setInstancedMeshBoundingBox(g3Mesh, g3Segments);\n      }\n    }\n\n    // Store globally for simulation\n    window.gcodeInstancedMeshes = this.instancedMeshes;\n    //console.log('Instanced toolpath lines created');\n  }\n\n  /**\n   * Calculate and set bounding box for instanced mesh for frustum culling\n   * @param {THREE.InstancedMesh} mesh - The instanced mesh\n   * @param {Array} segments - Array of line segments\n   */\n  setInstancedMeshBoundingBox(mesh, segments) {\n    if (!mesh || !segments || segments.length === 0) return;\n\n    try {\n      // Create a bounding box that encompasses all segments\n      const box = new THREE.Box3();\n      const points = [];\n\n      // Collect all points from segments\n      for (const segment of segments) {\n        if (Array.isArray(segment) && segment.length >= 2) {\n          // Handle both array and Vector3 formats\n          const start = Array.isArray(segment[0])\n            ? new THREE.Vector3(segment[0][0], segment[0][1], segment[0][2])\n            : segment[0];\n          const end = Array.isArray(segment[1])\n            ? new THREE.Vector3(segment[1][0], segment[1][1], segment[1][2])\n            : segment[1];\n\n          points.push(start, end);\n        }\n      }\n\n      if (points.length > 0) {\n        box.setFromPoints(points);\n\n        // Expand the box slightly to account for cylinder radius\n        const radius = 0.05; // Match the radius used in GeometryManager\n        box.expandByScalar(radius);\n\n        // Store the bounding box in userData for frustum culling\n        if (!mesh.userData) mesh.userData = {};\n        mesh.userData.boundingBox = box;\n        mesh.userData.isToolpathObject = true; // Mark as toolpath object for selective culling\n\n        // Log occasionally to avoid spam\n        if (Math.random() < 0.01) {\n          //console.log(`Set bounding box for instanced mesh: points=${points.length}`);\n        }\n      }\n    } catch (error) {\n      console.error('Error setting bounding box for instanced mesh:', error);\n    }\n  }\n\n  /**\n   * Create toolpath lines using traditional LineSegments (fallback)\n   */\n  createLineToolpathLines(g0Segments, g1Segments, g2Segments, g3Segments) {\n    // Convert segments to points format for LineSegments\n    const g0Points = [];\n    g0Segments.forEach((seg) => {\n      g0Points.push(seg[0], seg[1]);\n    });\n\n    const g1Points = [];\n    g1Segments.forEach((seg) => {\n      g1Points.push(seg[0], seg[1]);\n    });\n\n    const g2Points = [];\n    g2Segments.forEach((seg) => {\n      g2Points.push(seg[0], seg[1]);\n    });\n\n    const g3Points = [];\n    g3Segments.forEach((seg) => {\n      g3Points.push(seg[0], seg[1]);\n    });\n\n    // Create line objects with CNC-standard colors and appropriate thickness\n    this.createLineObject(g0Points, 0xff8e37, 0.8, 'G0', 1); // Orange (rapid) - higher opacity\n    this.createLineObject(g1Points, 0x00ff99, 1.0, 'G1', 1); // Green (linear) - higher opacity and brightness\n    this.createLineObject(g2Points, 0x0074d9, 1.0, 'G2', 1); // Blue (CW arc) - higher opacity\n    this.createLineObject(g3Points, 0xf012be, 1.0, 'G3', 1); // Magenta (CCW arc) - higher opacity\n  }\n\n  /**\n   * Clear existing toolpath lines from the scene\n   */\n  clearToolpathLines() {\n    //console.log('Clearing toolpath lines');\n    // Remove instanced meshes\n    for (const [, mesh] of this.instancedMeshes) {\n      //console.log('Removing mesh from scene');\n      this.scene.remove(mesh);\n    }\n    this.instancedMeshes.clear();\n\n    // Remove traditional line objects if they exist\n    if (window.gcodeBatchedLines) {\n      for (const mode in window.gcodeBatchedLines) {\n        const line = window.gcodeBatchedLines[mode];\n        if (line && line.parent) {\n          //console.log(`Removing ${mode} line from scene`);\n          line.parent.remove(line);\n        }\n      }\n      window.gcodeBatchedLines = {};\n      window.gcodeBatchedGeometries = {};\n      window.gcodeBatchedCounts = {};\n    }\n    //console.log('Toolpath lines cleared');\n  }\n\n  /**\n   * Create a line object for a specific G-code mode\n   */\n  createLineObject(points, color, opacity, mode, _lineWidth = 1) {\n    if (points.length === 0) return null;\n\n    const geometry = new THREE.BufferGeometry().setFromPoints(points);\n    geometry.setDrawRange(0, points.length);\n\n    // Compute bounding box for frustum culling optimization\n    geometry.computeBoundingBox();\n\n    const material = new THREE.LineBasicMaterial({\n      color,\n      transparent: true,\n      opacity,\n      // linewidth is not supported in most WebGL implementations\n    });\n    const line = new THREE.LineSegments(geometry, material);\n\n    // Store pre-calculated bounding box in userData for performance (fixes frustum culling performance issue)\n    if (geometry.boundingBox) {\n      line.userData = {\n        boundingBox: geometry.boundingBox,\n      };\n    }\n\n    this.scene.add(line);\n\n    // Store globally for simulation\n    if (!window.gcodeBatchedLines) window.gcodeBatchedLines = {};\n    if (!window.gcodeBatchedGeometries) window.gcodeBatchedGeometries = {};\n    if (!window.gcodeBatchedCounts) window.gcodeBatchedCounts = {};\n\n    window.gcodeBatchedLines[mode] = line;\n    window.gcodeBatchedGeometries[mode] = geometry;\n    window.gcodeBatchedCounts[mode] = points.length;\n    // Only update stats box after all modes are set (after createToolpathLines)\n\n    return line;\n  }\n\n  /**\n   * Update partial toolpath during progressive loading\n   */\n  updatePartialToolpath() {\n    // For now, we'll just log the progress\n    // In a more advanced implementation, we could render partial results\n    //console.log(`Partial toolpath update: ${data.segments.length} segments, ${data.progress.toFixed(1)}%`);\n  }\n\n  /**\n   * Show/hide loading indicator\n   */\n  showLoadingIndicator(show) {\n    // Create or find loading indicator element\n    let loadingIndicator = document.getElementById('gcodeLoadingIndicator');\n\n    if (show) {\n      if (!loadingIndicator) {\n        // Create loading indicator if it doesn't exist\n        loadingIndicator = document.createElement('div');\n        loadingIndicator.id = 'gcodeLoadingIndicator';\n        loadingIndicator.style.cssText = `\n                    position: fixed;\n                    top: 50%;\n                    left: 50%;\n                    transform: translate(-50%, -50%);\n                    background: rgba(0, 0, 0, 0.9);\n                    color: white;\n                    padding: 20px 30px;\n                    border-radius: 10px;\n                    font-family: monospace;\n                    font-size: 14px;\n                    text-align: center;\n                    z-index: 10000;\n                    border: 2px solid #007acc;\n                    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.5);\n                `;\n\n        // Add loading animation\n        loadingIndicator.innerHTML = `\n                    <div style=\"margin-bottom: 10px; font-weight: bold;\">Loading G-code...</div>\n                    <div id=\"loadingProgress\" style=\"width: 200px; height: 4px; background: #333; border-radius: 2px; overflow: hidden; margin: 0 auto;\">\n                        <div id=\"loadingProgressBar\" style=\"height: 100%; background: linear-gradient(90deg, #007acc, #00ff99); width: 0%; transition: width 0.3s ease; border-radius: 2px;\"></div>\n                    </div>\n                    <div id=\"loadingText\" style=\"margin-top: 10px; font-size: 12px; color: #ccc;\">Initializing...</div>\n                `;\n\n        document.body.appendChild(loadingIndicator);\n      }\n      loadingIndicator.style.display = 'block';\n      //console.log('Loading G-code file...');\n    } else {\n      if (loadingIndicator) {\n        loadingIndicator.style.display = 'none';\n        // Remove after fade out\n        setTimeout(() => {\n          if (loadingIndicator.parentNode) {\n            loadingIndicator.parentNode.removeChild(loadingIndicator);\n          }\n        }, 300);\n      }\n      //console.log('Loading completed');\n    }\n  }\n\n  /**\n   * Update loading indicator with progress\n   */\n  updateLoadingIndicator(progress) {\n    const loadingProgressBar = document.getElementById('loadingProgressBar');\n    const loadingText = document.getElementById('loadingText');\n\n    if (loadingProgressBar) {\n      loadingProgressBar.style.width = `${progress.progress}%`;\n    }\n\n    if (loadingText) {\n      loadingText.textContent = `Processing: ${Math.round(progress.progress)}% (${progress.processedChunks}/${progress.totalChunks} chunks)`;\n    }\n\n\n\n\n\n\n\n  }\n\n  /**\n   * Calculate segment counts from segments and modes\n   */\n  calculateSegmentCounts(segments, modes) {\n    const counts = { G0: 0, G1: 0, G2: 0, G3: 0 };\n    for (const mode of modes) {\n      if (Object.prototype.hasOwnProperty.call(counts, mode)) {\n        counts[mode]++;\n      }\n    }\n    return counts;\n  }\n\n  // REMOVED: createLineMap function - now using correct line map from parser\n\n  /**\n   * Fit camera to show entire toolpath\n   */\n  fitCameraToToolpath() {\n    if (\n      this.parseResult.toolpathPoints &&\n      this.parseResult.toolpathPoints.length > 0\n    ) {\n      const box = new THREE.Box3().setFromPoints(\n        this.parseResult.toolpathPoints\n      );\n      const center = box.getCenter(new THREE.Vector3());\n      const size = box.getSize(new THREE.Vector3());\n      const maxDim = Math.max(size.x, size.y, size.z);\n      const fov = this.camera.fov * (Math.PI / 180);\n      let cameraZ = Math.abs(maxDim / 2 / Math.tan(fov / 2));\n      cameraZ *= 2.0; // Add more padding for better view\n\n      // Position camera to view the toolpath from a better angle\n      this.camera.position.set(\n        center.x,\n        center.y - cameraZ,\n        center.z + cameraZ * 0.3\n      );\n      this.camera.lookAt(center);\n\n      if (this.controls) {\n        this.controls.target.copy(center);\n        this.controls.update();\n      }\n\n      //console.log('Camera fitted to toolpath:', { center, size, cameraZ });\n    } else {\n      // Default camera position if no points\n      this.camera.position.set(0, -100, 80);\n      this.camera.lookAt(0, 0, 0);\n      if (this.controls) {\n        this.controls.target.set(0, 0, 0);\n        this.controls.update();\n      }\n    }\n  }\n\n  /**\n   * Switch between perspective and orthographic camera modes\n   * @param {string} mode - 'perspective' or 'orthographic'\n   */\n  switchCameraMode(mode) {\n    if (!this.perspectiveCamera || !this.orthographicCamera) {\n      console.warn('Cameras not initialized');\n      return;\n    }\n\n    // Store current camera transform\n    const currentPosition = this.camera.position.clone();\n    const currentQuaternion = this.camera.quaternion.clone();\n    const currentTarget = this.controls ? this.controls.target.clone() : null;\n\n    // Switch camera\n    if (mode === 'orthographic' && this.camera !== this.orthographicCamera) {\n      this.camera = this.orthographicCamera;\n      this.cameraMode = 'orthographic';\n      console.log('Switched to orthographic camera');\n    } else if (mode === 'perspective' && this.camera !== this.perspectiveCamera) {\n      this.camera = this.perspectiveCamera;\n      this.cameraMode = 'perspective';\n      console.log('Switched to perspective camera');\n    } else {\n      return; // Already on the requested mode\n    }\n\n    // Apply stored transform to new camera\n    this.camera.position.copy(currentPosition);\n    this.camera.quaternion.copy(currentQuaternion);\n\n    // Update controls\n    if (this.controls) {\n      this.controls.object = this.camera;\n      if (currentTarget) {\n        this.controls.target.copy(currentTarget);\n      }\n      this.controls.update();\n    }\n\n    // Update camera aspect ratio\n    this.updateCameraAspect();\n\n    // Force a render to update the view\n    this.render();\n  }\n\n  /**\n   * Export current visualization as image\n   */\n  exportImage() {\n    if (!this.renderer || !this.renderer.domElement) {\n      console.warn('Renderer not available for export');\n      return;\n    }\n\n    // Force a render to ensure current frame is captured\n    this.render();\n\n    // Get image data from canvas\n    const imageData = this.renderer.domElement.toDataURL('image/png');\n\n    // Create download link\n    const link = document.createElement('a');\n    link.href = imageData;\n    link.download = `gcode_visualization_${this.cameraMode}_${Date.now()}.png`;\n    link.click();\n\n    console.log('Image exported successfully');\n  }\n\n  /**\n   * Update camera aspect ratio and projection matrix\n   */\n  updateCameraAspect() {\n    if (!this.container || !this.camera) return;\n\n    const aspect = this.container.offsetWidth / this.container.offsetHeight;\n\n    if (this.camera.isPerspectiveCamera) {\n      this.camera.aspect = aspect;\n    } else if (this.camera.isOrthographicCamera) {\n      const frustumSize = 200; // Match the value used in initialization\n      this.camera.left = -frustumSize * aspect / 2;\n      this.camera.right = frustumSize * aspect / 2;\n      this.camera.top = frustumSize / 2;\n      this.camera.bottom = -frustumSize / 2;\n    }\n\n    this.camera.updateProjectionMatrix();\n  }\n\n  /**\n   * Setup simulation controls\n   */\n  setupSimulationControls() {\n    const domElements = {\n      playBtn: document.getElementById('runSimulationBtn'),\n      rewindBtn: document.getElementById('rewindSimulationBtn'),\n      forwardBtn: document.getElementById('forwardSimulationBtn'),\n      runSimulationIcon: document.getElementById('runSimulationIcon'),\n      progressBar: document.getElementById('simProgressBar'),\n      speedSlider: document.getElementById('simSpeedSlider'),\n      speedValue: document.getElementById('simSpeedValue'),\n      speedUnit: document.getElementById('simSpeedUnit'),\n    };\n\n    if (domElements.playBtn && domElements.progressBar) {\n      setupSimulationControls(domElements, this.parseResult);\n    }\n  }\n\n  /**\n   * Start animation loop\n   */\n  startAnimationLoop() {\n    const animate = () => {\n      requestAnimationFrame(animate);\n      if (this.controls) this.controls.update();\n      this.render();\n    };\n\n    // Store render function globally for simulation\n    window.gcodeRender = () => this.render();\n\n    // Start the animation loop\n    animate();\n\n    // Force an initial render to ensure something is displayed\n    setTimeout(() => {\n      this.render();\n      //console.log('Initial render completed');\n    }, 100);\n  }\n\n  /**\n   * Render the scene\n   */\n  render() {\n    try {\n      if (this.renderer && this.scene && this.camera) {\n        const now = performance.now();\n        const shouldRender = this.shouldRenderFrame(now);\n\n        if (!shouldRender) {\n          return; // Skip this frame for adaptive rendering\n        }\n\n        // Update frustum for culling\n        if (this.frustum) {\n          this.updateFrustum();\n        }\n\n        // Apply frustum culling to improve performance (but not too frequently)\n        if (this.frustum && Math.random() < 0.1) {\n          // Only update culling 10% of the time\n          this.applyFrustumCulling();\n        }\n\n        this.renderer.render(this.scene, this.camera);\n\n        // Update performance monitoring\n        this.updatePerformanceMonitor(now, now);\n\n        // Update tracking variables\n        this.lastFrameTime = now;\n        if (this.camera) {\n          this.lastCameraPosition.copy(this.camera.position);\n        }\n      }\n    } catch (error) {\n      console.error('Error during render:', error);\n    }\n  }\n\n  /**\n   * Parse G-code into toolpath data\n   */\n  parseGcode(gcode) {\n    // Use the existing parser from the legacy code\n    return parseGcodeOptimized(gcode);\n  }\n\n  /**\n   * Toggle optimization features for debugging\n   * @param {string} optimization - Name of optimization to toggle\n   * @param {boolean} enabled - Whether to enable/disable\n   */\n  toggleOptimization(optimization, enabled) {\n    switch (optimization) {\n      case 'adaptiveRendering':\n        this.setAdaptiveRendering(enabled, this.targetFPS);\n        //console.log(`Adaptive rendering ${enabled ? 'enabled' : 'disabled'}`);\n        break;\n      case 'frustumCulling':\n        if (enabled && !this.frustum) {\n          this.initializeFrustumCulling();\n        } else if (!enabled && this.frustum) {\n          this.frustum = null;\n        }\n        break;\n      default:\n        console.warn(`Unknown optimization: ${optimization}`);\n    }\n  }\n\n  /**\n   * Get current performance stats\n   */\n  getPerformanceStats() {\n    return {\n      averageFPS: this.performanceMonitor.averageFPS,\n      averageRenderTime:\n        this.performanceMonitor.renderTimeHistory.length > 0\n          ? (\n            this.performanceMonitor.renderTimeHistory.reduce(\n              (a, b) => a + b,\n              0\n            ) / this.performanceMonitor.renderTimeHistory.length\n          ).toFixed(2) + 'ms'\n          : 'N/A',\n      culledObjects: this.culledObjects.size,\n      totalObjects: this.scene ? this.scene.children.length : 0,\n      adaptiveRendering: this.adaptiveRendering,\n      optimizations: {\n        adaptiveRendering: this.adaptiveRendering,\n        frustumCulling: !!this.frustum,\n        rendererOptimized: true, // Always optimized\n      },\n    };\n  }\n\n  /**\n   * Dispose of resources\n   */\n  dispose() {\n    if (this.renderer) {\n      this.renderer.dispose();\n    }\n    if (this.container && this.renderer) {\n      this.container.removeChild(this.renderer.domElement);\n    }\n\n    // Dispose geometry manager\n    if (this.geometryManager) {\n      this.geometryManager.dispose();\n    }\n\n    this.scene = null;\n    this.camera = null;\n    this.renderer = null;\n    this.controls = null;\n    this.container = null;\n  }\n}\n\n// Export for global access\nwindow.GcodeVisualizer = GcodeVisualizer;\n\n// Add global optimization controls for debugging\nwindow.optimizationControls = {\n  toggleAdaptiveRendering: (enabled) => {\n    if (window.gcodeVisualizer) {\n      window.gcodeVisualizer.toggleOptimization('adaptiveRendering', enabled);\n    }\n  },\n  toggleFrustumCulling: (enabled) => {\n    if (window.gcodeVisualizer) {\n      window.gcodeVisualizer.toggleOptimization('frustumCulling', enabled);\n    }\n  },\n  getPerformanceStats: () => {\n    if (window.gcodeVisualizer) {\n      return window.gcodeVisualizer.getPerformanceStats();\n    }\n    return { error: 'Visualizer not initialized' };\n  },\n  enableAllOptimizations: () => {\n    if (window.gcodeVisualizer) {\n      window.gcodeVisualizer.toggleOptimization('adaptiveRendering', true);\n      window.gcodeVisualizer.toggleOptimization('frustumCulling', true);\n      //console.log('All optimizations enabled');\n    }\n  },\n  disableAllOptimizations: () => {\n    if (window.gcodeVisualizer) {\n      window.gcodeVisualizer.toggleOptimization('adaptiveRendering', false);\n      // Frustum culling is always applied, but we can log it\n    }\n  },\n};\n\n// Make optimization controls easily accessible\nwindow.opt = window.optimizationControls;\n","/**\n * Geometry Manager Module\n *\n * Manages optimized geometry creation and instancing for G-code visualization\n */\n\n/**\n * Geometry manager class for creating optimized geometry representations\n */\nexport class GeometryManager {\n  constructor() {\n    this.instancedMeshes = new Map(); // Store instanced meshes by mode\n    this.baseGeometries = new Map(); // Store base geometries\n  }\n\n  /**\n   * Create an instanced line system for efficient rendering\n   * @param {Array} segments - Array of line segments [[start, end], ...]\n   * @param {string} mode - G-code mode (G0, G1, G2, G3)\n   * @returns {THREE.InstancedMesh|null} Instanced mesh or null if no segments\n   */\n  createInstancedLineSystem(segments, mode) {\n    try {\n      const lineCount = segments.length;\n      if (lineCount === 0) return null;\n\n      console.log(\n        `Creating instanced line system for ${lineCount} ${mode} segments`\n      );\n\n      // Create base geometry (cylinder for lines)\n      const radius = 0.05; // Reduced for better visibility\n      const geometry = this.getOrCreateBaseGeometry('cylinder', radius);\n\n      // Create material based on mode\n      const material = new THREE.MeshBasicMaterial({\n        color: this.getModeColor(mode),\n        transparent: true,\n        opacity: this.getModeOpacity(mode),\n      });\n      console.log(\n        `Created material for ${mode} with color ${this.getModeColor(mode).toString(16)} and opacity ${this.getModeOpacity(mode)}`\n      );\n\n      // Create instanced mesh\n      const instancedMesh = new THREE.InstancedMesh(\n        geometry,\n        material,\n        lineCount\n      );\n      console.log(\n        `Created instanced mesh with capacity for ${lineCount} instances`\n      );\n\n      // Calculate matrices for each segment\n      for (let i = 0; i < segments.length; i++) {\n        const segment = segments[i];\n        const matrix = this.calculateCylinderMatrix(segment[0], segment[1]);\n        instancedMesh.setMatrixAt(i, matrix);\n      }\n\n      instancedMesh.instanceMatrix.needsUpdate = true;\n\n      // Store reference for later updates\n      this.instancedMeshes.set(mode, instancedMesh);\n\n      console.log(`Instanced line system created successfully for ${mode}`, {\n        visible: instancedMesh.visible,\n        count: instancedMesh.count,\n        materialColor: material.color,\n        materialOpacity: material.opacity,\n      });\n      return instancedMesh;\n    } catch (error) {\n      console.error(`Error creating instanced line system for ${mode}:`, error);\n      return null;\n    }\n  }\n\n  /**\n   * Get or create a base geometry to reuse\n   * @param {string} type - Geometry type\n   * @param {number} radius - Radius for cylinder geometry\n   * @returns {THREE.BufferGeometry} Base geometry\n   */\n  getOrCreateBaseGeometry(type, radius = 0.05) {\n    const key = `${type}-${radius}`;\n\n    if (this.baseGeometries.has(key)) {\n      return this.baseGeometries.get(key);\n    }\n\n    let geometry;\n    switch (type) {\n      case 'cylinder':\n        // Create a cylinder along Y axis (height = 1, radiusTop = radius, radiusBottom = radius)\n        // Using 8 radial segments for better appearance\n        geometry = new THREE.CylinderGeometry(radius, radius, 1, 8);\n        console.log(\n          `Created cylinder geometry with radius ${radius}, height 1`\n        );\n        break;\n      default:\n        // Fallback to simple box\n        geometry = new THREE.BoxGeometry(radius * 2, 1, radius * 2);\n        console.log(`Created box geometry`);\n    }\n\n    this.baseGeometries.set(key, geometry);\n    return geometry;\n  }\n\n  /**\n   * Calculate transformation matrix for a cylinder between two points\n   * @param {Array|THREE.Vector3} start - Start point [x, y, z]\n   * @param {Array|THREE.Vector3} end - End point [x, y, z]\n   * @returns {THREE.Matrix4} Transformation matrix\n   */\n  calculateCylinderMatrix(start, end) {\n    // Convert array points to Vector3 if needed\n    const startPoint = Array.isArray(start)\n      ? new THREE.Vector3(start[0], start[1], start[2])\n      : start;\n    const endPoint = Array.isArray(end)\n      ? new THREE.Vector3(end[0], end[1], end[2])\n      : end;\n\n    const matrix = new THREE.Matrix4();\n\n    // Calculate direction and length\n    const direction = new THREE.Vector3().subVectors(endPoint, startPoint);\n    const length = direction.length();\n\n    // Handle zero-length segments\n    if (length === 0) {\n      // Create a zero-length segment (just a point)\n      matrix.setPosition(startPoint);\n      // Scale to zero to hide it\n      matrix.scale(new THREE.Vector3(0.001, 0.001, 0.001));\n      console.log(\n        `Zero-length segment at ${startPoint.x}, ${startPoint.y}, ${startPoint.z}`\n      );\n      return matrix;\n    }\n\n    // Position at midpoint\n    const midpoint = new THREE.Vector3()\n      .addVectors(startPoint, endPoint)\n      .multiplyScalar(0.5);\n\n    // Create a quaternion to rotate the cylinder to align with the direction\n    const quaternion = new THREE.Quaternion();\n    const up = new THREE.Vector3(0, 1, 0); // Default cylinder orientation\n    quaternion.setFromUnitVectors(up, direction.clone().normalize());\n\n    // Scale to correct length (cylinder is 1 unit tall, so we scale Y to length)\n    const scale = new THREE.Vector3(1, length, 1);\n\n    // Compose all transformations into one matrix\n    matrix.compose(midpoint, quaternion, scale);\n\n    console.log(\n      `Cylinder: length=${length}, position=(${midpoint.x}, ${midpoint.y}, ${midpoint.z})`\n    );\n\n    return matrix;\n  }\n\n  /**\n   * Get color for a specific G-code mode\n   * @param {string} mode - G-code mode\n   * @returns {number} Color as hex value\n   */\n  getModeColor(mode) {\n    const colors = {\n      G0: 0xff8e37, // Orange (rapid)\n      G1: 0x00ff99, // Green (linear)\n      G2: 0x0074d9, // Blue (CW arc)\n      G3: 0xf012be, // Magenta (CCW arc)\n    };\n    return colors[mode] || 0xffffff;\n  }\n\n  /**\n   * Get opacity for a specific G-code mode\n   * @param {string} mode - G-code mode\n   * @returns {number} Opacity value (0-1)\n   */\n  getModeOpacity(mode) {\n    const opacities = {\n      G0: 0.6, // Rapid moves are less prominent\n      G1: 0.9,\n      G2: 0.9,\n      G3: 0.9,\n    };\n    return opacities[mode] || 0.9;\n  }\n\n  /**\n   * Update an existing instanced mesh with new segments\n   * @param {Array} segments - Array of line segments\n   * @param {string} mode - G-code mode\n   * @returns {boolean} True if updated successfully\n   */\n  updateInstancedLineSystem(segments, mode) {\n    const instancedMesh = this.instancedMeshes.get(mode);\n    if (!instancedMesh) return false;\n\n    // If we need more instances, we have to recreate the mesh\n    if (segments.length > instancedMesh.count) {\n      return false; // Need to recreate\n    }\n\n    // Update existing instances\n    for (let i = 0; i < segments.length; i++) {\n      const segment = segments[i];\n      const matrix = this.calculateCylinderMatrix(segment[0], segment[1]);\n      instancedMesh.setMatrixAt(i, matrix);\n    }\n\n    // Hide unused instances\n    for (let i = segments.length; i < instancedMesh.count; i++) {\n      const matrix = new THREE.Matrix4();\n      matrix.makeScale(0, 0, 0); // Scale to zero to hide\n      instancedMesh.setMatrixAt(i, matrix);\n    }\n\n    instancedMesh.instanceMatrix.needsUpdate = true;\n    return true;\n  }\n\n  /**\n   * Dispose of all geometries and meshes to prevent memory leaks\n   */\n  dispose() {\n    // Dispose base geometries\n    for (const geometry of this.baseGeometries.values()) {\n      if (geometry.dispose) geometry.dispose();\n    }\n    this.baseGeometries.clear();\n\n    // Clear instanced mesh references\n    this.instancedMeshes.clear();\n  }\n}\n\n// Export for global access\nwindow.GeometryManager = GeometryManager;\n","/**\n * Visualizer Module Index\n *\n * Exports all visualizer modules and provides backward compatibility\n */\n\n// Import core modules\nimport { GcodeVisualizer } from './core.js';\nimport { parseGcodeOptimized } from './parser.js';\nimport { showGcodeViewer, closeGcodeViewer } from './modal.js';\nimport { setupSimulationControls, ViewerControls } from './controls.js';\n\n// Export all modules for modern usage\nexport {\n  GcodeVisualizer,\n  parseGcodeOptimized,\n  showGcodeViewer,\n  closeGcodeViewer,\n  setupSimulationControls,\n  ViewerControls,\n};\n\n// Export modern modules to window for debugging/testing\n\n// --- Enhanced G-code Stats Box Update with Live Performance Data ---\nfunction updateGcodeStats() {\n  window.updateGcodeStats = updateGcodeStats;\n  const statsContainer = document.getElementById('gcodeViewerStats');\n  if (!statsContainer) {\n    return;\n  }\n  statsContainer.style.display = 'block';\n  statsContainer.style.opacity = '1';\n  statsContainer.style.visibility = 'visible';\n\n  // Get existing stats\n  const perf = window.performanceStats || {};\n  const segCounts = window.gcodeSegmentCounts || {};\n\n  // Get live performance data (fallback to visualizer instance if available)\n  let performanceData = window.performanceData || {};\n  if (window.gcodeVisualizer && window.gcodeVisualizer.getPerformanceStats) {\n    try {\n      const vizStats = window.gcodeVisualizer.getPerformanceStats();\n      performanceData = { ...performanceData, ...vizStats };\n    } catch (error) {\n      console.warn('Error getting visualizer performance stats:', error);\n    }\n  }\n\n  // Build enhanced stats display\n  let statsHtml = `\n    <div class=\"stats-title\">\n      <div class=\"metric-line\">Lines: ${perf.lineCount || 0}</div>\n      <div class=\"metric-line\">Segments: ${perf.segmentCount || 0}</div>\n      <div class=\"metric-line metric-good\">G0: ${segCounts.G0 || 0}</div>\n      <div class=\"metric-line metric-good\">G1: ${segCounts.G1 || 0}</div>\n      <div class=\"metric-line metric-info\">G2: ${segCounts.G2 || 0}</div>\n      <div class=\"metric-line metric-info\">G3: ${segCounts.G3 || 0}</div>`;\n\n  // Add FPS information\n  if (\n    performanceData.averageFPS !== undefined &&\n    performanceData.averageFPS > 0\n  ) {\n    const fpsClass =\n      performanceData.averageFPS >= 30\n        ? 'metric-good'\n        : performanceData.averageFPS >= 15\n          ? 'metric-warning'\n          : 'metric-error';\n    statsHtml += `<div class=\"metric-line ${fpsClass}\">FPS: ${performanceData.averageFPS}</div>`;\n  } else {\n    statsHtml += `<div class=\"metric-line metric-info\">FPS: Not active</div>`;\n  }\n\n  // Add file render time (show file render time instead of frame render time)\n  if (\n    performanceData.fileRenderTime !== undefined &&\n    performanceData.fileRenderTime > 0\n  ) {\n    const fileRenderTime =\n      typeof performanceData.fileRenderTime === 'number'\n        ? performanceData.fileRenderTime\n        : 0;\n    const renderClass =\n      fileRenderTime <= 1000\n        ? 'metric-good'\n        : fileRenderTime <= 3000\n          ? 'metric-warning'\n          : 'metric-error';\n    statsHtml += `<div class=\"metric-line ${renderClass}\">File Render: ${fileRenderTime.toFixed(1)}ms</div>`;\n  } else if (perf.fileRenderTime !== undefined && perf.fileRenderTime > 0) {\n    const fileRenderTime =\n      typeof perf.fileRenderTime === 'number' ? perf.fileRenderTime : 0;\n    const renderClass =\n      fileRenderTime <= 1000\n        ? 'metric-good'\n        : fileRenderTime <= 3000\n          ? 'metric-warning'\n          : 'metric-error';\n    statsHtml += `<div class=\"metric-line ${renderClass}\">File Render: ${fileRenderTime.toFixed(1)}ms</div>`;\n  } else {\n    statsHtml += `<div class=\"metric-line metric-info\">File Render: No file loaded</div>`;\n  }\n\n  // Add object counts\n  if (performanceData.totalObjects !== undefined) {\n    statsHtml += `<div class=\"metric-line metric-info\">Objects: ${performanceData.totalObjects}</div>`;\n  }\n  if (\n    performanceData.culledObjects !== undefined &&\n    performanceData.culledObjects > 0\n  ) {\n    statsHtml += `<div class=\"metric-line metric-info\">Culled: ${performanceData.culledObjects}</div>`;\n  }\n\n  // Add canvas size\n  if (performanceData.canvasSize) {\n    statsHtml += `<div class=\"metric-line metric-info\">Canvas: ${performanceData.canvasSize.width}×${performanceData.canvasSize.height}</div>`;\n  }\n\n  // Add memory information\n  if (performanceData.memoryInfo) {\n    const memUsage =\n      (performanceData.memoryInfo.used / performanceData.memoryInfo.total) *\n      100;\n    const memClass =\n      memUsage < 70\n        ? 'metric-good'\n        : memUsage < 85\n          ? 'metric-warning'\n          : 'metric-error';\n    statsHtml += `<div class=\"metric-line ${memClass}\">Memory: ${performanceData.memoryInfo.used}/${performanceData.memoryInfo.total}MB</div>`;\n  }\n\n  // Add adaptive rendering status\n  if (performanceData.adaptiveRendering !== undefined) {\n    const adaptClass = performanceData.adaptiveRendering\n      ? 'metric-good'\n      : 'metric-info';\n    statsHtml += `<div class=\"metric-line ${adaptClass}\">Adaptive: ${performanceData.adaptiveRendering ? 'ON' : 'OFF'}</div>`;\n  }\n\n  // Add last update time\n  if (performanceData.lastUpdate) {\n    statsHtml += `<div class=\"timestamp\">Updated: ${performanceData.lastUpdate}</div>`;\n  }\n\n  statsHtml += `</div>`;\n\n  statsContainer.innerHTML = statsHtml;\n}\n\n// Patch: Always call updateGcodeStats after parsing/rendering, not just in gcodeRender\ndocument.addEventListener('DOMContentLoaded', function () {\n  // Show initial stats when visualizer opens\n  updateGcodeStats();\n});\n\n\n\n// Single, unified gcodeRender function with performance optimization\nwindow.gcodeRender = (function (orig) {\n  let lastStatsUpdate = 0;\n  const statsUpdateInterval = 1000; // Update stats only once per second during animation\n\n  return function () {\n    if (typeof orig === 'function') orig();\n\n    // Only update stats if canvas is present and enough time has passed\n    const canvas = document.querySelector('#gcodeViewerContainer canvas');\n    if (canvas) {\n      const now = performance.now();\n      if (now - lastStatsUpdate > statsUpdateInterval) {\n        updateGcodeStats();\n        lastStatsUpdate = now;\n      }\n      // Don't call line display updates here - it's handled by simulation controls\n      // This prevents conflicts and spam updates during animation\n    }\n  };\n})(window.gcodeRender);\ndocument.addEventListener('DOMContentLoaded', function () {\n  // Show initial line info when visualizer opens\n  if (window.updateCurrentLineDisplay) {\n    window.updateCurrentLineDisplay(window.gcodeCurrentLineIdx || 0);\n  }\n});\nwindow.GcodeVisualizer = GcodeVisualizer;\nwindow.ViewerControls = ViewerControls;\n\n// Initialize global batched rendering objects for compatibility\nif (!window.gcodeBatchedLines) {\n  window.gcodeBatchedLines = { G0: null, G1: null, G2: null, G3: null };\n}\nif (!window.gcodeBatchedGeometries) {\n  window.gcodeBatchedGeometries = { G0: null, G1: null, G2: null, G3: null };\n}\nif (!window.gcodeBatchedCounts) {\n  window.gcodeBatchedCounts = { G0: 0, G1: 0, G2: 0, G3: 0 };\n}\n\n// Initialize gcodeLines array to prevent errors\nif (!window.gcodeLines) {\n  window.gcodeLines = [];\n}\n\n// Initialize other gcode-related global variables\nif (!window.gcodeCurrentLineIdx) {\n  window.gcodeCurrentLineIdx = 1; // Line indices should start at 1, not 0\n}\nif (!window.gcodeSegmentCounts) {\n  window.gcodeSegmentCounts = { G0: 0, G1: 0, G2: 0, G3: 0 };\n}\nif (!window.performanceStats) {\n  window.performanceStats = {};\n}\nif (!window.performanceData) {\n  window.performanceData = {};\n}\n\n// Test function to verify line mapping works correctly\nwindow.testLineMappingFix = function () {\n  //console.log('=== Testing G-code Line Mapping Fix ===');\n\n  if (!window.gcodeLineMap || !window.gcodeLines) {\n    //console.log('No G-code data loaded for testing');\n    return;\n  }\n\n  //console.log(`Total G-code lines: ${window.gcodeLines.length}`);\n  //console.log(`Total segments: ${window.gcodeLineMap.length}`);\n\n  // Show mappings for arc commands specifically\n  let arcSegments = [];\n  for (let i = 0; i < window.gcodeLineMap.length; i++) {\n    const lineNum = window.gcodeLineMap[i];\n    if (lineNum >= 0 && lineNum < window.gcodeLines.length) {\n      const gcodeLine = window.gcodeLines[lineNum];\n      if (gcodeLine.includes('G2') || gcodeLine.includes('G3')) {\n        arcSegments.push({ segment: i, line: lineNum, gcode: gcodeLine });\n      }\n    }\n  }\n\n  if (arcSegments.length > 0) {\n    //console.log('Arc command mappings:');\n    arcSegments.forEach(arc => {\n      console.log(`  Segment ${arc.segment} -> Line ${arc.line + 1}: ${arc.gcode}`);\n    });\n  } else {\n    //console.log('No arc commands found in current G-code');\n  }\n\n  //console.log('=== Test Complete ===');\n};\n\n// Global handler for camera mode switching\nwindow.switchCameraMode = function () {\n  if (window.gcodeVisualizer && typeof window.gcodeVisualizer.switchCameraMode === 'function') {\n    const newMode = window.gcodeVisualizer.cameraMode === 'perspective' ? 'orthographic' : 'perspective';\n    window.gcodeVisualizer.switchCameraMode(newMode);\n  } else {\n    console.warn('Visualizer not available or switchCameraMode method not found');\n  }\n};\n\n// Global handler for exporting visualization image\nwindow.exportVisualizerImage = function () {\n  if (window.gcodeVisualizer && typeof window.gcodeVisualizer.exportImage === 'function') {\n    window.gcodeVisualizer.exportImage();\n  } else {\n    console.warn('Visualizer not available or exportImage method not found');\n  }\n};\n\n// Simple debug function to check current line display\nwindow.debugCurrentLine = function () {\n  const currentSeg = window.gcodeCurrentLineIdx || 0;\n  const lineNum = window.gcodeLineMap ? window.gcodeLineMap[currentSeg] : -1;\n  const gcodeLine = (lineNum >= 0 && window.gcodeLines) ? window.gcodeLines[lineNum] : 'N/A';\n  console.log(`Current: Segment ${currentSeg} -> Line ${lineNum + 1}: ${gcodeLine}`);\n};\n","/**\n * Modal Management Module\n *\n * Handles the G-code viewer modal display and lifecycle\n */\n\nimport { GcodeVisualizer } from './core.js';\n\n/**\n * Modal manager for G-code viewer\n */\nexport class GcodeViewerModal {\n  constructor() {\n    this.modal = null;\n    this.container = null;\n    this.visualizer = null;\n    this.isVisible = false;\n  }\n\n  /**\n   * Initialize the modal\n   */\n  initialize() {\n    this.modal = document.getElementById('gcodeViewerModal');\n    this.container = document.getElementById('gcode3d');\n\n    if (!this.modal || !this.container) {\n      console.error('Modal elements not found');\n      return false;\n    }\n\n    this.visualizer = new GcodeVisualizer();\n    // Make visualizer globally accessible for button handlers\n    window.gcodeVisualizer = this.visualizer;\n    return true;\n  }\n\n  /**\n   * Show the modal with G-code content\n   */\n  show(gcode) {\n    if (!this.modal || !this.container) {\n      console.error('Modal not initialized');\n      return;\n    }\n\n    // Get G-code content if not provided\n    let gcodeContent = gcode;\n    if (\n      !gcodeContent &&\n      window.outputEditor &&\n      typeof window.outputEditor.getValue === 'function'\n    ) {\n      gcodeContent = window.outputEditor.getValue();\n    }\n\n    if (!gcodeContent || !gcodeContent.trim()) {\n      this.showError('No G-code content to display');\n      return;\n    }\n\n    // Show modal\n    this.modal.style.display = 'flex';\n    this.isVisible = true;\n\n    // Wait for modal to be visible, then render\n    setTimeout(() => {\n      this.renderGcode(gcodeContent);\n    }, 100);\n  }\n\n  /**\n   * Hide the modal\n   */\n  hide() {\n    // Stop any running simulation before closing\n    this.stopSimulation();\n\n    if (this.modal) {\n      this.modal.style.display = 'none';\n      this.isVisible = false;\n    }\n\n    // Clean up visualizer\n    if (this.visualizer) {\n      this.visualizer.dispose();\n    }\n\n    // Clear container\n    if (this.container) {\n      this.container.innerHTML = '';\n    }\n  }\n\n  /**\n   * Stop any running simulation\n   */\n  stopSimulation() {\n    // Use the global stopSimulation function from controls.js\n    if (window.stopSimulation && typeof window.stopSimulation === 'function') {\n      window.stopSimulation();\n    }\n  }\n\n  /**\n   * Render G-code in the modal\n   */\n  async renderGcode(gcode) {\n    if (!this.container) return;\n\n    // Check container dimensions\n    if (this.container.offsetWidth === 0 || this.container.offsetHeight === 0) {\n      //console.log('Container not ready, retrying...');\n      this.renderGcode(gcode);\n      return;\n    }\n\n    //console.log('Starting G-code rendering...');\n\n    // Initialize visualizer directly - no loading screen\n    try {\n      if (!this.visualizer.initialize(this.container)) {\n        this.showError('Failed to initialize 3D visualizer');\n        return;\n      }\n\n      //console.log('Visualizer initialized, rendering G-code...');\n\n      const result = await this.visualizer.renderGcode(gcode);\n\n      if (!result.success) {\n        this.showError(result.error || 'Failed to render G-code');\n        return;\n      }\n\n      //console.log('G-code rendering completed successfully');\n\n      // Update stats and info boxes after successful render\n\n      if (window.updateGcodeStats) {\n        //console.log('[modal.js] Calling updateGcodeStats after render (delayed)');\n        window.updateGcodeStats();\n      }\n      //else {\n      //   console.log('[modal.js] updateGcodeStats not found (delayed)');\n      // }\n      if (window.updateCurrentLineDisplay) {\n        //  console.log('[modal.js] Calling updateCurrentLineDisplay after render (delayed)');\n        window.updateCurrentLineDisplay(0);\n      }\n      //else {\n      //console.log('[modal.js] updateGcodeLineInfo not found (delayed)');\n      //}\n\n      // console.log(`3D Visualizer: Rendered ${result.parseResult.toolpathPoints?.length || 0} points, ${result.parseResult.toolpathSegments?.length || 0} segments`);\n    } catch (error) {\n      console.error('Error rendering G-code:', error);\n      this.showError(`Failed to render G-code: ${error.message}`);\n    }\n  }\n\n  /**\n   * Show loading message\n   */\n  showLoading() {\n    if (!this.container) return;\n\n    this.container.innerHTML = `\n      <div style=\"\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        height: 100%;\n        color: #fff;\n        font-family: Arial, sans-serif;\n        text-align: center;\n        flex-direction: column;\n        background: transparent;\n      \">\n        <h2>Loading 3D Visualizer...</h2>\n        <p>Parsing G-code and creating 3D scene...</p>\n      </div>\n    `;\n  }\n\n  /**\n   * Show error message\n   */\n  showError(message) {\n    if (!this.container) return;\n\n    this.container.innerHTML = `\n      <div style=\"\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        height: 100%;\n        color: #fff;\n        font-family: Arial, sans-serif;\n        text-align: center;\n        flex-direction: column;\n        background: #1a1a1a;\n      \">\n        <h2>3D Visualizer Error</h2>\n        <p>${message}</p>\n        <button onclick=\"closeGcodeViewer()\" style=\"\n          margin-top: 20px;\n          padding: 10px 20px;\n          background: #007acc;\n          color: white;\n          border: none;\n          border-radius: 4px;\n          cursor: pointer;\n        \">Close</button>\n      </div>\n    `;\n  }\n}\n\n// Global modal instance\nlet modalInstance = null;\n\n/**\n * Show the G-code viewer modal\n */\nexport function showGcodeViewer(gcode) {\n  if (!modalInstance) {\n    modalInstance = new GcodeViewerModal();\n    if (!modalInstance.initialize()) {\n      console.error('Failed to initialize modal');\n      return;\n    }\n  }\n\n  modalInstance.show(gcode);\n}\n\n/**\n * Close the G-code viewer modal\n */\nexport function closeGcodeViewer() {\n  if (modalInstance) {\n    modalInstance.hide();\n  }\n}\n\n// Make functions globally available\nwindow.showGcodeViewer = showGcodeViewer;\nwindow.closeGcodeViewer = closeGcodeViewer;\nwindow.showGcodeViewer = showGcodeViewer;\nwindow.closeGcodeViewer = closeGcodeViewer;\n","/**\n * G-code Parser Module\n *\n * Handles parsing G-code into toolpath data for visualization\n */\n\n// G-code parsing constants\nconst GCODE_REGEX = {\n  G_MODE: /G([0123])/g,\n  X_COORD: /X(-?\\d*\\.?\\d+)/i,\n  Y_COORD: /Y(-?\\d*\\.?\\d+)/i,\n  Z_COORD: /Z(-?\\d*\\.?\\d+)/i,\n  I_OFFSET: /I(-?\\d*\\.?\\d+)/i,\n  J_OFFSET: /J(-?\\d*\\.?\\d+)/i,\n  R_RADIUS: /R(-?\\d*\\.?\\d+)/i,\n  HAS_COORDS: /[XYZIJR]/i,\n  N_LINE: /^N\\d+\\s*/,\n  COMMENT: /\\([^)]*\\)/g, // Match G-code comments in parentheses\n};\n\n/**\n * Interpolate arc points for G2/G3 commands\n */\nfunction interpolateArc(start, end, center, isClockwise, segments = 32) {\n  const points = [];\n  const radius = Math.sqrt(\n    (start.x - center.x) ** 2 + (start.y - center.y) ** 2\n  );\n  const startAngle = Math.atan2(start.y - center.y, start.x - center.x);\n  const endAngle = Math.atan2(end.y - center.y, end.x - center.x);\n  let deltaAngle = endAngle - startAngle;\n\n  if (isClockwise && deltaAngle > 0) deltaAngle -= Math.PI * 2;\n  if (!isClockwise && deltaAngle < 0) deltaAngle += Math.PI * 2;\n\n  for (let i = 0; i <= segments; i++) {\n    const angle = startAngle + (deltaAngle * i) / segments;\n    const zVal =\n      start.z === end.z\n        ? start.z\n        : start.z + ((end.z - start.z) * i) / segments;\n    points.push(\n      new THREE.Vector3(\n        center.x + radius * Math.cos(angle),\n        center.y + radius * Math.sin(angle),\n        zVal\n      )\n    );\n  }\n  return points;\n}\n\n/**\n * Optimized G-code parser\n * @param {string} gcode - G-code content\n * @param {Object} initialState - Initial state for parsing (optional)\n * @returns {Object} Parsed toolpath data\n */\nexport function parseGcodeOptimized(gcode, initialState = {}) {\n  try {\n    const lines = gcode\n      .split(/\\r?\\n/)\n      .map((line) => line.trim().replace(GCODE_REGEX.N_LINE, ''))\n      .filter((line) => line.length > 0);\n\n    // Use initial state or defaults - G-code maintains state between lines\n    let x = initialState.x !== undefined ? initialState.x : 0;\n    let y = initialState.y !== undefined ? initialState.y : 0;\n    let z = initialState.z !== undefined ? initialState.z : 0;\n    let currentMotionMode = initialState.currentMotionMode || null;\n    let anyDrawn = initialState.anyDrawn || false;\n\n    const toolpathPoints = [];\n    const toolpathSegments = [];\n    const toolpathModes = [];\n    const lineMap = [];\n    const segmentCounts = { G0: 0, G1: 0, G2: 0, G3: 0 };\n\n    lines.forEach((line, idx) => {\n      line = line.trim();\n\n      // Remove G-code comments (anything in parentheses) before processing\n      // This prevents comments like \"(Arc Spiral Pattern Example)\" from being processed as G2 commands\n      const lineWithoutComments = line.replace(GCODE_REGEX.COMMENT, '').trim();\n\n      // Debug: Log when comments containing G-codes are filtered\n      if (line !== lineWithoutComments && /G[0-9]/.test(line)) {\n        //console.log(`[PARSER] Filtered G-code comment: \"${line}\" -> \"${lineWithoutComments}\"`);\n      }\n\n      // Skip empty lines after comment removal\n      if (!lineWithoutComments) {\n        return;\n      }\n\n      // Find motion mode - G-code remembers the last G mode\n      // Use the line without comments to avoid false matches\n      const allModes = [...lineWithoutComments.matchAll(GCODE_REGEX.G_MODE)];\n      if (allModes.length > 0) {\n        currentMotionMode = allModes[allModes.length - 1][0];\n      }\n\n      const hasCoords = GCODE_REGEX.HAS_COORDS.test(lineWithoutComments);\n      if (!currentMotionMode && !hasCoords) {\n        // Track lines that don't create segments to maintain proper indexing\n        lineMap.push(idx);\n        return;\n      }\n      if (!currentMotionMode) currentMotionMode = 'G1'; // Default to G1 if no mode specified\n\n      // Parse coordinates - G-code maintains previous values if not specified\n      // Use the line without comments to avoid parsing coordinates from comments\n      const matchX = lineWithoutComments.match(GCODE_REGEX.X_COORD);\n      const matchY = lineWithoutComments.match(GCODE_REGEX.Y_COORD);\n      const matchZ = lineWithoutComments.match(GCODE_REGEX.Z_COORD);\n      const matchI = lineWithoutComments.match(GCODE_REGEX.I_OFFSET);\n      const matchJ = lineWithoutComments.match(GCODE_REGEX.J_OFFSET);\n      const matchR = lineWithoutComments.match(GCODE_REGEX.R_RADIUS);\n\n      // G-code behavior: if coordinate not specified, use previous value\n      const targetX = matchX ? parseFloat(matchX[1]) : x;\n      const targetY = matchY ? parseFloat(matchY[1]) : y;\n      const targetZ = matchZ ? parseFloat(matchZ[1]) : z;\n\n      if (currentMotionMode === 'G2' || currentMotionMode === 'G3') {\n        // Arc processing\n        const arcStart = new THREE.Vector3(x, y, z);\n        const arcEnd = new THREE.Vector3(targetX, targetY, targetZ);\n        const isClockwise = currentMotionMode === 'G2';\n        let arcPoints = [];\n\n        if (matchI && matchJ) {\n          const center = new THREE.Vector3(\n            x + parseFloat(matchI[1]),\n            y + parseFloat(matchJ[1]),\n            z\n          );\n          if (!isNaN(center.x) && !isNaN(center.y)) {\n            arcPoints = interpolateArc(arcStart, arcEnd, center, isClockwise);\n          }\n        } else if (matchR) {\n          const dx = targetX - x;\n          const dy = targetY - y;\n          const d = Math.sqrt(dx * dx + dy * dy);\n          const r = Math.abs(parseFloat(matchR[1]));\n\n          if (d > 0 && !isNaN(r) && r > 0) {\n            const h = Math.sqrt(Math.max(0, r * r - (d / 2) * (d / 2)));\n            const mx = (x + targetX) / 2;\n            const my = (y + targetY) / 2;\n            const sign =\n              (isClockwise ? -1 : 1) * (parseFloat(matchR[1]) >= 0 ? 1 : -1);\n            const cx = mx + sign * h * (dy / d);\n            const cy = my - sign * h * (dx / d);\n\n            if (!isNaN(cx) && !isNaN(cy)) {\n              const center = new THREE.Vector3(cx, cy, z);\n              arcPoints = interpolateArc(arcStart, arcEnd, center, isClockwise);\n            }\n          }\n        }\n\n        if (arcPoints.length > 1) {\n          for (let i = 1; i < arcPoints.length; i++) {\n            toolpathSegments.push([\n              arcPoints[i - 1].clone(),\n              arcPoints[i].clone(),\n            ]);\n            toolpathModes.push(currentMotionMode);\n            // Map all segments of an arc to the same line number\n            // This ensures that all segments of a G2/G3 command are associated with the correct G-code line\n            lineMap.push(idx);\n            segmentCounts[currentMotionMode]++;\n            anyDrawn = true;\n          }\n          const lastPoint = arcPoints[arcPoints.length - 1].clone();\n          x = lastPoint.x;\n          y = lastPoint.y;\n          z = lastPoint.z;\n          toolpathPoints.push(lastPoint.clone());\n        } else {\n          // Track lines that don't create segments to maintain proper indexing\n          lineMap.push(idx);\n        }\n        return; // Important: return early to avoid processing as linear move\n      } else {\n        // Linear move - for chunk boundary continuity, we need to ensure the first point\n        // of a new chunk starts from the initial state position\n        const startPoint = new THREE.Vector3(x, y, z);\n\n        // Update coordinates to target position\n        if (matchX) x = parseFloat(matchX[1]);\n        if (matchY) y = parseFloat(matchY[1]);\n        if (matchZ) z = parseFloat(matchZ[1]);\n\n        const endPoint = new THREE.Vector3(x, y, z);\n\n        // Add the start point (this ensures chunk boundary continuity)\n        toolpathPoints.push(startPoint.clone());\n\n        // Add the end point\n        toolpathPoints.push(endPoint.clone());\n\n        // Create segment between start and end points\n        if (toolpathPoints.length >= 2) {\n          const newSegment = [startPoint.clone(), endPoint.clone()];\n          toolpathSegments.push(newSegment);\n          toolpathModes.push(currentMotionMode);\n          lineMap.push(idx);\n          segmentCounts[currentMotionMode]++;\n          anyDrawn = true;\n        }\n      }\n    });\n\n    // Return final state for continuity with next chunks - G-code state preservation\n    const finalState = {\n      x,\n      y,\n      z,\n      currentMotionMode,\n      anyDrawn,\n    };\n\n    //console.log(`[DEBUG PARSER] Created ${toolpathSegments.length} segments from ${lines.length} G-code lines`);\n    //console.log(`[DEBUG PARSER] LineMap sample:`, lineMap.slice(0, 10), '...');\n    //console.log(`[DEBUG PARSER] Segment counts:`, segmentCounts);\n\n    return {\n      toolpathPoints,\n      toolpathSegments,\n      toolpathModes,\n      lineMap,\n      segmentCounts,\n      anyDrawn,\n      finalState,\n    };\n  } catch (error) {\n    console.error('G-code parsing error:', error);\n    return {\n      toolpathPoints: [],\n      toolpathSegments: [],\n      toolpathModes: [],\n      lineMap: [],\n      segmentCounts: { G0: 0, G1: 0, G2: 0, G3: 0 },\n      anyDrawn: false,\n      finalState: {},\n      error: error.message,\n    };\n  }\n}\n\n// Make available globally for backward compatibility\nwindow.parseGcodeOptimized = parseGcodeOptimized;\n"],"names":["ConfiguratorSystem","configuratorManager","editorManager","_classCallCheck","_createClass","key","value","initialize","options","showConfigurator","ggcode","getInputValue","console","error","handleConfiguratorCompile","result","log","handleConfiguratorSave","configuratorSaveAndCompile","_this","handleSaveAndCompile","code","_this$editorManager","setInputValue","window","submitGGcode","Event","configuratorCompileOnly","handleCompileOnly","closeConfigurator","modal","document","getElementById","style","display","e","t","r","Symbol","n","iterator","o","toStringTag","i","c","prototype","Generator","u","Object","create","_regeneratorDefine2","f","p","y","G","v","a","d","bind","length","l","TypeError","call","done","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","setPrototypeOf","__proto__","displayName","_regenerator","w","m","defineProperty","_regeneratorDefine","_invoke","enumerable","configurable","writable","asyncGeneratorStep","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","_defineProperties","_toPropertyKey","_toPrimitive","_typeof","toPrimitive","String","Number","ConfiguratorParser","ConfiguratorRenderer","ConfiguratorValidator","ConfiguratorManager","configVars","currentValues","modalElement","contentElement","formElement","onCompile","onSave","undefined","_options$modalId","modalId","_options$contentId","contentId","_options$onCompile","_options$onSave","_addStyles","parseConfiguratorVars","getDefaultValues","formHtml","renderConfiguratorForm","innerHTML","setupRealTimeValidation","classList","add","remove","getFormValues","validateForm","isValid","errors","general","values","saveAndUpdateGGcode","originalGGcode","validation","success","updateResult","updateGGcodeWithValues","notFound","warn","foundVars","compileWithCurrentValues","_handleSaveAndCompile","_callee","editorSetValue","compileFunction","_t","_context","_showErrorMessage","_x","_x2","_x3","_handleCompileOnly","_callee2","_t2","_context2","message","_x4","_x5","getConfigVars","getCurrentValues","hasVariables","reset","errorHtml","renderErrorMessage","errorDiv","createElement","insertBefore","firstChild","setTimeout","parentNode","removeChild","styleId","id","textContent","concat","getValidationStyles","getAnimationStyles","head","appendChild","lines","split","_iterator","_createForOfIteratorHelper","_step","s","line","match","name","rawValue","trim","tag","description","descIdx","indexOf","slice","variable","_parseVariableTag","push","err","type","params","defaultValue","startsWith","numMatch","min","parseFloat","max","toLowerCase","selMatch","map","filter","Boolean","textMatch","rows","parseInt","newLines","hasOwnProperty","newLine","replace","_","p1","p2","p3","keys","join","validateVariableValue","numValue","isNaN","includes","defaults","_iterator2","_step2","convertFormValues","formValues","converted","varMap","_iterator3","_step3","_i","_Object$entries","entries","_Object$entries$_i","_slicedToArray","getVariableByName","find","getVariablesByType","Array","isArray","_renderEmptyState","_renderForm","html","_renderFormField","_renderNumberField","_renderCheckboxField","_renderSelectionField","_renderTextField","_variable$params$min","_variable$params$max","inputStyles","focusBlurHandlers","numberInputHtml","minMaxHtml","checked","selectStyles","option","selected","baseStyles","_variable$params$max2","textareaStyles","_variable$params$max3","renderSuccessMessage","renderLoadingIndicator","form","elements","element","_getElementValue","_markElementAsInvalid","_markElementAsValid","_validateNumberValue","_validateTextValue","_validateSelectionValue","_validateCheckValue","stringValue","_variable","_value","errorMessage","border","_updateErrorMessage","_removeErrorMessage","errorId","errorElement","className","cssText","container","closest","nextSibling","_iterator4","_step4","_loop","addEventListener","Infinity","clampedValue","Math","_ret","clearValidationStates","_iterator5","_step5","_iterator6","_step6","_iterator7","_step7","MonacoEditorManager","GcodeAnnotationSystem","VisualizerModules","NavigationManager","aiManager","aiCommands","HelpSystem","ExampleManager","FileOperationsManager","CompilationSystem","ModalManagerWrapper","storageManager","ApplicationManager","annotationSystem","visualizerModules","navigationManager","helpSystem","exampleManager","fileOperationsManager","compilationSystem","modalManager","configuratorSystem","monacoReady","lastOpenedFilename","pendingMonacoReady","_initializeApplication","makeManagersGloballyAvailable","getLastFilename","initializeMonacoEditor","setupAutoCompileCheckbox","setupFileOperations","initializeApplication","_initializeMonacoEditor","initialInput","initialOutput","editors","getInputContent","getOutputContent","inputContainerId","outputContainerId","event","customCode","onAnnotationUpdate","lineNumber","lineContent","updateAnnotations","getEditors","outputEditor","output","editor","input","setMonacoReady","loadAutoCompileState","loadLastOpenedFilename","setupAutoSave","_this2","autoCheckbox","setAutoCompile","target","_this3","openBtn","fileInput","click","file","files","reader","FileReader","onload","evt","setLastOpenedFilename","readAsText","apiManager","setApiManager","getEditorManager","getAnnotationSystem","getConfiguratorManager","getHelpSystem","getExampleManager","getFileOperationsManager","getCompilationSystem","getModalManager","getConfiguratorSystem","ready","_submitGGcode","firstLineContent","_args","preventDefault","syncEditors","setOutputValue","compiler","compile","resetModalState","getModel","getLineContent","saveContent","ggcodeElement","showCompileLoadingIndicator","show","compileIndicator","body","millDictionary","millAnnotations","annotationsLoaded","lastGCommand","_initialize","loadGcodeDictionaries","_loadGcodeDictionaries","_yield$Promise$all","_yield$Promise$all2","dictResponse","annotResponse","all","fetch","ok","json","isMotionCmd","cmd","test","hasMotionCoords","_Object$keys","k","getAllGcodeLines","getValue","out","findPreviousMotion","targetIdx","parsed","parseGcodeLine","commands","motions","cleanLine","commandMatches","matchAll","commandsUsed","Set","toUpperCase","gCommands","primaryCommand","paramMatches","parameters","letter","fullMatch","has","original","isModal","hasParams","hasMultipleCommands","generateAnnotation","implied","prev","annotation","cmdDesc","desc","_i2","param","paramDesc","sub","annotationsDiv","getModalState","setModalState","state","themeManager","settingsManager","autoCompile","autoCompileTimeout","skipAutoCompile","userFunctions","Map","functionParseTimeout","userFunctionCache","completionData","keywords","functions","constants","axes","operators","brackets","paramMappings","tokenizer","languageConfig","hoverConstants","hoverKeywords","hoverFunctions","signatures","_options$inputContain","_options$outputContai","_options$initialInput","_options$initialOutpu","_options$onAnnotation","_args2","_context3","reject","initializeEditor","_ref","_loadCompletionData","loadAndInitializeTheme","_registerGGcodeLanguage","_createEditors","_setupEventHandlers","_setupDragAndDrop","_parseUserFunctions","monaco","loadMonaco","require","config","paths","vs","attempts","maxAttempts","checkMonaco","Error","_loadCompletionData2","_callee4","loadPromises","_context5","_ref3","_callee3","_ref2","_ref4","filePath","response","data","_context4","status","languages","register","_registerCompletionProvider","_registerHoverProvider","_registerSignatureHelpProvider","languageConfiguration","setLanguageConfiguration","autoClosingPairs","surroundingPairs","folding","markers","start","RegExp","end","kw","word","constant","builtins","func","keywordPattern","constantPattern","builtinPattern","tokenizerConfig","axisChars","axisCharacters","langConfig","tokenizerRules","axisTypes","char","axisFallbackPattern1","charAt","axisFallbackPattern2","variablePattern","numberPattern","commentPatterns","lineComment","blockCommentStart","bracketSymbols","blockEndPattern","blockCommentEnd","setMonarchTokensProvider","symbols","tokenizerSymbolsPattern","root","blockComment","_window$applicationMa","_window$applicationMa2","applicationManager","registerCompletionItemProvider","provideCompletionItems","model","position","_token","_this3$helpSystem","_this3$helpSystem2","getWordUntilPosition","range","startLineNumber","endLineNumber","startColumn","endColumn","suggestions","linePrefix","substring","column","allCompletions","_toConsumableArray","_getGcodeCompletions","_getMcodeCompletions","_getKeywordCompletions","_getFunctionCompletions","_getConstantCompletions","_getAxisCompletions","_getOperatorCompletions","_getBracketCompletions","_getUserFunctionCompletions","_getAxisParametersCompletions","dictionaryCache","_getMillDictionaryCompletions","annotationsCache","_getMillAnnotationsCompletions","sort","b","sortText","localeCompare","incomplete","triggerCharacters","gcodes","completions","gcode","definition","detail","usage","completionItem","label","kind","CompletionItemKind","Class","documentation","_ref5","_ref6","insertText","mcodes","_Object$entries2","_Object$entries2$_i","mcode","Interface","_ref7","_ref8","Keyword","snippet","insertTextRules","CompletionItemInsertTextRule","InsertAsSnippet","Function","Constant","axis","Variable","operator","op","Operator","bracket","pair","Snippet","Value","item","_window$applicationMa3","_window$applicationMa4","dictionary","_i3","_Object$entries3","_Object$entries3$_i","paramDocs","_ref9","_ref0","_window$applicationMa5","_window$applicationMa6","_this4","annotations","isGCode","isMCode","_i4","_Object$entries4","_Object$entries4$_i","gcodeMatch","shouldInclude","altCode","shortForm","searchNum","gcodeNum","displayCode","isFullLinePreset","Property","lineTrimmed","isExactMatch","hasComplexParameters","paramsOnly","completionParams","paramMap","fullPresetPriority","completionLabel","axisParameters","Field","_this5","registerHoverProvider","provideHover","getWordAtPosition","hoverInfo","_getHoverInfo","contents","_window$applicationMa7","_window$applicationMa8","paramList","_ref1","_ref10","altWord","_ref11","_ref12","title","entry","subParams","paramInfo","syntax","returns","keyword","example","userFunc","signature","_this6","registerSignatureHelpProvider","signatureHelpTriggerCharacters","provideSignatureHelp","beforeCursor","functionMatch","functionName","parametersText","signatureInfo","_getFunctionSignature","commaCount","parameterIndex","activeSignature","activeParameter","_registerBracketPairCompletionProvider","_this7","content","clear","functionRegex","exec","functionStart","index","linesBefore","functionLineIndex","noteMatch","set","forEach","docString","_this8","savedInput","savedOutput","inputContent","outputContent","inputLoading","outputLoading","inputContainer","outputContainer","initialSettings","getSettings","language","theme","automaticLayout","minimap","enabled","fontSize","fontFamily","wordWrap","lineNumbers","renderWhitespace","renderIndentGuides","bracketMatching","autoClosingBrackets","autoClosingQuotes","autoClosingDelete","autoClosingOvertype","surroudWithBrackets","tabSize","insertSpaces","bracketPairColorization","applyAllSettingsToEditor","applyThemeToSpecificEditor","_this9","onDidChangeModelContent","clearTimeout","onDidChangeCursorPosition","_this0","editorDom","getDomNode","background","dataTransfer","endsWith","setValue","getOutputValue","setAutoCompileState","getAutoCompile","getAutoCompileState","filename","setLastFilename","getLastOpenedFilename","setInputContent","setOutputContent","_this1","setInterval","isReady","refreshUserFunctions","getUserFunctions","from","ownKeys","getOwnPropertySymbols","getOwnPropertyDescriptor","_objectSpread","_defineProperty","getOwnPropertyDescriptors","defineProperties","AIManager","currentMode","isAutoApprove","pendingCommandData","isStreaming","messageQueue","sessionId","generateSessionId","conversationHistory","userContext","currentTask","lastCommand","codeContext","lastAnalyzed","selectedText","cursorPosition","recentSearches","preferences","autoExecute","verboseMode","maxHistoryLength","Date","now","random","toString","substr","addToConversationHistory","role","timestamp","toISOString","getConversationContext","maxMessages","updateUserContext","contextUpdate","clearConversationHistory","switchMode","mode","setAiMode","updateModeSelector","toggleAutoApprove","toggle","color","setAiAutoApprove","handleChatKeydown","shiftKey","sendMessage","_sendMessage","messagesContainer","userMessage","typingIndicator","context","handleUserConfirmation","addMessage","createTypingIndicator","scrollTop","scrollHeight","buildAIContext","method","headers","JSON","stringify","provider","stream","handleStreamingResponse","removeTypingIndicator","currentGcode","userConfirmation","pendingCommand","_handleStreamingResponse","_response$headers$get","decoder","buffer","responseText","aiResponseContainer","aiResponseContent","_yield$reader$read","readerDone","commandMatch","command","_data","get","handleNonStreamingResponse","getReader","TextDecoder","createAIMessageContainer","querySelector","read","decode","pop","parse","showCommandActions","parseError","parseAICommands","_handleNonStreamingResponse","cleanResponse","_t3","_x6","commandPatterns","_commandPatterns","pattern","implementedCommands","executePendingCommand","addSystemMessage","sender","messageDiv","actionsDiv","previewDiv","executeBtn","previewText","commandNames","scrollIntoView","behavior","block","hideCommandActions","executePendingCommandFromUI","_this$pendingCommandD","confirmationWords","lastAiMessage","querySelectorAll","aiMessageText","modeSelector","updateAutoApproveToggle","showAiChat","loadSettings","focus","closeAiChat","sendAiMessage","handleAiChatKeydown","changeAiMode","switchAiMode","aiQuickAction","action","aiInput","editorContent","getCurrentEditorContent","getSelectedText","cursorPos","getCursorPosition","prompt","selection","getSelection","isEmpty","getValueInRange","getPosition","testAICommands","testResponse","multiCommandResponse","multiResult","testEditor","pos","executeEdits","text","testAIIntegration","analysis","analyzeCode","testAICommandParsing","testCases","testCase","testDirectCommandExecution","testCommands","setupEventListeners","savedMode","getAiMode","savedAutoApprove","getAiAutoApprove","aiChatInput","autoApproveToggle","executeAiCommandBtn","ensureGlobalFunction","showExamples","showModal","loadExamples","setupExamplesSearch","searchInput","_loadExamples","examplesList","examples","getList","preview","_loadExample","getContent","closeModal","alert","loadExample","FileOperations","fileOperations","copyOutput","saveOutput","saveGGcode","clearMemory","supportedExtensions","maxFileSize","validateFile","size","extension","getFileExtension","lastDot","lastIndexOf","determineFileType","isGGcodeContent","isGcodeContent","ggcodePatterns","some","gcodePatterns","processContent","lineCount","hasErrors","warnings","processGGcodeContent","processGcodeContent","lineNum","trimmed","openBrackets","closeBrackets","hasMotionCommands","_readFileWithProgress","onProgress","onprogress","lengthComputable","progress","loaded","total","processed","lastModified","onerror","readFileWithProgress","createDownload","mimeType","blob","Blob","url","URL","createObjectURL","convertFormat","fromType","toType","getFileStats","stats","totalLines","nonEmptyLines","commentLines","codeLines","copyButton","navigator","clipboard","writeText","exportButton","restoreButton","showButtonLoading","lastFilename","localStorage","getItem","suggestedFilename","base","userFilename","utf8Bytes","TextEncoder","encode","href","download","revokeObjectURL","saveButton","dot","confirm","removeItem","FileTreeViewer","currentFile","treeData","markdownContent","initializeAsync","_initializeAsync","scanMarkdownFiles","createTreeStructure","render","bindEvents","_scanMarkdownFiles","markdownFiles","loadMarkdownContent","path","_loadMarkdownContent","encodeURIComponent","tree","pathParts","current","part","children","renderTreeNode","node","level","itemPath","indentation","isExpanded","expandedFolders","toggleFolder","selectFile","updateDisplayedFile","dataset","refresh","_copyFileContent","_callee5","_t4","copyFileContent","_refresh","_callee6","_context6","_loadAndDisplayFile","_callee7","_t5","_context7","displayFileContent","triggerViewModeChange","loadAndDisplayFile","titleElement","fileName","renderedHtml","renderMarkdownContent","_updateDisplayedFile","_callee8","mdContentBody","fileNameSpan","_t6","_context8","showMarkdownFile","fileTreeViewer","_showHelp","savedLanguage","getSelectedLanguage","loadHelpContent","setupLanguageSelector","initializeLanguageSelectorDisplay","addCopyButtons","setupHelpSearch","loadMillDictionaryData","initializeFileTreeViewer","initializeDocumentationControls","showHelp","_loadHelpContent","helpContent","help","renderHelpContent","sections","section","additionalInfo","list","listItem","items","_setupLanguageSelector","selectSelected","languageMap","flag","selectedLanguageInfo","_loadMillDictionaryData","dictionaryResponse","annotationsResponse","annotationsJson","integrateMillDictionaryWithMonaco","_window$editorManager","_window$editorManager2","millCompletions","convertDictionaryToCompletions","signalCompletionRefresh","preElements","pre","onclick","originalSections","searchTerm","showAllSections","removeAllHighlights","performSearch","addClearSearchButton","addSearchHighlightStyles","clearButton","dispatchEvent","helpSections","hasVisibleResults","originalSearchTerm","sectionText","relevanceScore","matchesAnyKeyword","wordBoundaryRegex","escapeRegExp","partialRegex","removeHighlights","highlightSearchTerm","showNoResultsMessage","noResultsMsg","term","walker","createTreeWalker","NodeFilter","SHOW_TEXT","textNodes","nextNode","textNode","lowerText","matches","searchIndex","matchStart","matchEnd","overlaps","lastIndex","highlightedText","tempDiv","fragment","createDocumentFragment","replaceChild","string","marks","mark","outerHTML","_initializeFileTreeViewer","treePanel","toggleTreeBtn","backToHelpBtn","panel","closeTreeBtn","contains","hideTreeView","showTreeView","_document$getElementB","contentPanel","showHelpView","copyBtn","copyMarkdownContent","hideTreeBtn","_document$getElementB2","overlay","toggleBtn","backBtn","_document$getElementB3","_showMarkdownFile","fileContent","_document$getElementB4","renderedContent","renderMarkdownText","_copyMarkdownContent","originalText","ModalManager","closeGcodeViewer","gcode3d","gcodeSimAnimationId","gcodeToolpathPoints","gcodeToolpathSegments","gcodeToolpathModes","gcodeLineMap","gcodeLines","gcodeSegmentCounts","gcodeScene","gcodeCamera","gcodeToolMesh","gcodeRender","activeModals","eventListeners","setupGlobalEventListeners","modals","topModal","closeOnBackdrop","onShow","onClose","backdropHandler","_modalBackdropHandler","focusFirstElement","removeEventListener","isModalOpen","closeAllModals","focusableElements","firstElement","el","createModal","_config$title","_config$content","_config$buttons","buttons","_config$size","modalContent","header","closeButton","footer","buttonConfig","button","onClick","updateModalContent","updateModalTitle","loadingStates","globalLoader","init","setupElements","_e","link","hasAttribute","navigateTo","showLoading","hideLoading","showElementLoader","showGlobalLoader","hideElementLoader","hideGlobalLoader","textElement","rect","getBoundingClientRect","loader","assign","top","left","width","height","location","originalHTML","disabled","showFormLoading","submitButtons","restoreFunctions","inputs","restore","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","_arrayLikeToArray","constructor","parseGcodeOptimized","ChunkLoader","visualizer","isCancelled","isRunning","_loadGcodeProgressive","_options$chunkSize","chunkSize","_options$onProgress","_options$onChunkProce","onChunkProcessed","_options$onCancel","onCancel","totalChunks","processedChunks","accumulatedSegments","accumulatedModes","accumulatedPoints","accumulatedLineMap","currentState","chunkMetaData","loadingProgress","ceil","x","z","currentMotionMode","anyDrawn","chunkIndex","startLine","endLine","chunkLines","chunkResult","chunkStartLine","offsetLineMap","processChunk","segments","modes","points","lineMap","segmentCount","initialState","finalState","yieldToMainThread","_regeneratorValues","cancelled","chunkCount","loadGcodeProgressive","_processChunk","_args3","useWebWorkers","Worker","processChunkWithWorker","parseGcodeChunk","parser","chunkGcode","parseResult","toolpathSegments","toolpathModes","toolpathPoints","segmentCounts","G0","G1","G2","G3","metaData","startIndex","idx","endIndex","requestAnimationFrame","cancel","getProgress","validateStateContinuity","chunkResults","report","issues","stateTransitions","next","transition","fromChunk","toChunk","expectedState","actualInitialState","positionMismatch","abs","modeMismatch","chunk","expected","actual","globalSimState","playing","paused","stopped","globalSimGeneration","segmentCountState","counts","needsFullRecalc","performanceMonitor","frameCount","lastFrameTime","frameTimeHistory","averageFrameTime","adaptiveRendering","targetFPS","skipFrames","frameSkipCounter","lastDrawRangeUpdate","seekDebounceState","seekTimeout","lastSeekPosition","isRapidSeeking","seekStartTime","lastInputTime","rapidSeekThreshold","isDragging","renderThrottleState","lastRenderTime","renderTimeout","maxFPS","minFrameTime","pendingRender","debounce","delay","timeoutId","_len","args","_key","detectRapidSeeking","currentTime","timeSinceLastInput","isInputFrequent","throttledRender","isSeekingOperation","performance","timeSinceLastRender","setupSimulationControls","domElements","simState","simGeneration","progressBar","debouncedSeekUpdate","newIdx","maxSegments","updatePlayPauseIcon","updateVisualizationToIndex","updateCurrentLineDisplay","oninput","gcodeCurrentLineIdx","onchange","onmousedown","onmouseup","ontouchstart","ontouchend","speedSlider","speedValue","step","speed","updateSpeedLabel","speedUnit","round","segsPerTick","playBtn","isAtEnd","isCompleted","resetCommandTracking","resetSegmentCountState","runSimulation","startIdx","resetSeekDebounceState","rewindBtn","forwardBtn","endIdx","runSimulationIcon","playIcon","pauseIcon","restartIcon","currentCommandIndex","segmentIndex","commandLineNumber","updateLineInfoDisplay","updateEditorSelection","lastDisplayedLineNumber","infoContainer","displayLineNumber","infoHtml","actualLineNumber","revealLineInCenter","setPosition","lastDrawRanges","lastVisualizationIndex","calculateIncrementalSegmentCounts","maxIdx","updateDrawRangesBatch","gcodeBatchedGeometries","geometries","newRange","setDrawRange","updatePerformanceMonitoring","frameTime","shift","reduce","avgFPS","floor","validateSegmentCounts","g0Count","g1Count","g2Count","g3Count","stopSimulation","_generation","animate","segmentsThisFrame","lastIdx","shouldRender","finalIdx","ViewerControls","_viewer3d","GeometryManager","GcodeVisualizer","scene","camera","renderer","controls","hoverSystem","geometryManager","chunkLoader","cameraMode","perspectiveCamera","orthographicCamera","lastTime","averageFPS","renderTimeHistory","lastLogTime","logInterval","frameInterval","lastCameraPosition","THREE","Vector3","cameraMoveThreshold","frustum","frustumMatrix","Matrix4","culledObjects","useInstancing","instancedMeshes","progressiveLoading","isLoading","loadingTimeout","setAdaptiveRendering","copy","shouldRenderFrame","timeSinceLastFrame","cameraMovement","distanceTo","isBeingUsed","initializeFrustumCulling","Frustum","updateFrustum","updateMatrixWorld","multiplyMatrices","projectionMatrix","matrixWorldInverse","setFromProjectionMatrix","updatePerformanceMonitor","renderStartTime","renderTime","timeDiff","avgRenderTime","performanceData","averageRenderTime","totalObjects","canvasSize","domElement","memoryInfo","memory","used","usedJSHeapSize","totalJSHeapSize","limit","jsHeapSizeLimit","lastUpdate","toLocaleTimeString","updateGcodeStats","lastConsoleLog","isObjectVisible","object","geometry","userData","boundingBox","intersectsBox","boundingSphere","intersectsSphere","child","applyFrustumCulling","Scene","PerspectiveCamera","offsetWidth","offsetHeight","up","aspect","frustumSize","OrthographicCamera","WebGLRenderer","antialias","alpha","powerPreference","precision","stencil","depth","setClearColor","setClearAlpha","setPixelRatio","devicePixelRatio","setSize","shadowMap","outputColorSpace","SRGBColorSpace","localClippingEnabled","debug","checkShaderErrors","capabilities","isWebGL2","light","DirectionalLight","AxesHelper","setupControls","OrbitControls","mouseButtons","LEFT","MOUSE","PAN","MIDDLE","ROTATE","RIGHT","enablePan","enableZoom","enableRotate","screenSpacePanning","enableDamping","dampingFactor","onResize","h","updateCameraAspect","_renderGcode","renderEndTime","fileRenderTime","fileRenderStartTime","renderGcodeProgressive","renderGcodeImmediate","performanceStats","lastFileRenderTime","renderGcode","startTime","parseStartTime","parseGcode","parseTime","createToolpathLines","fitCameraToToolpath","startAnimationLoop","_renderGcodeProgressive","showLoadingIndicator","maxChunksPerFrame","updateLoadingIndicator","updatePartialToolpath","calculateSegmentCounts","hideError","g0Segments","g1Segments","g2Segments","g3Segments","seg","clearToolpathLines","createLineToolpathLines","createInstancedToolpathLines","g0Mesh","createInstancedLineSystem","setInstancedMeshBoundingBox","g1Mesh","g2Mesh","g3Mesh","gcodeInstancedMeshes","mesh","box","Box3","segment","setFromPoints","radius","expandByScalar","isToolpathObject","g0Points","g1Points","g2Points","g3Points","createLineObject","_step2$value","gcodeBatchedLines","parent","gcodeBatchedCounts","opacity","_lineWidth","BufferGeometry","computeBoundingBox","material","LineBasicMaterial","transparent","LineSegments","loadingIndicator","loadingProgressBar","loadingText","center","getCenter","getSize","maxDim","fov","PI","cameraZ","tan","lookAt","update","switchCameraMode","currentPosition","clone","currentQuaternion","quaternion","currentTarget","exportImage","imageData","toDataURL","isPerspectiveCamera","isOrthographicCamera","right","bottom","updateProjectionMatrix","toggleOptimization","optimization","getPerformanceStats","toFixed","optimizations","frustumCulling","rendererOptimized","dispose","optimizationControls","toggleAdaptiveRendering","gcodeVisualizer","toggleFrustumCulling","enableAllOptimizations","disableAllOptimizations","opt","baseGeometries","getOrCreateBaseGeometry","MeshBasicMaterial","getModeColor","getModeOpacity","instancedMesh","InstancedMesh","matrix","calculateCylinderMatrix","setMatrixAt","instanceMatrix","needsUpdate","visible","count","materialColor","materialOpacity","CylinderGeometry","BoxGeometry","startPoint","endPoint","direction","subVectors","scale","midpoint","addVectors","multiplyScalar","Quaternion","setFromUnitVectors","normalize","compose","colors","opacities","updateInstancedLineSystem","makeScale","showGcodeViewer","statsContainer","visibility","perf","segCounts","vizStats","statsHtml","fpsClass","renderClass","memUsage","memClass","adaptClass","orig","lastStatsUpdate","statsUpdateInterval","canvas","testLineMappingFix","arcSegments","gcodeLine","arc","newMode","exportVisualizerImage","debugCurrentLine","currentSeg","GcodeViewerModal","isVisible","gcodeContent","showError","hide","modalInstance","GCODE_REGEX","G_MODE","X_COORD","Y_COORD","Z_COORD","I_OFFSET","J_OFFSET","R_RADIUS","HAS_COORDS","N_LINE","COMMENT","interpolateArc","isClockwise","sqrt","pow","startAngle","atan2","endAngle","deltaAngle","angle","zVal","cos","sin","lineWithoutComments","allModes","hasCoords","matchX","matchY","matchZ","matchI","matchJ","matchR","targetX","targetY","targetZ","arcStart","arcEnd","arcPoints","dx","dy","mx","my","sign","cx","cy","lastPoint","newSegment"],"sourceRoot":""}