{"version":3,"file":"src_client_js_ui_aiCommands_js.js","mappings":"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","sources":["webpack://ggcode-compiler/./src/client/js/ui/aiCommands.js"],"sourcesContent":["/**\n * AI Commands - Editor integration functions for AI commands\n * Handles execution of AI-generated commands on the editor\n */\n\nclass AICommands {\n  constructor() {\n    this.pendingCommandData = null;\n  }\n\n  /**\n   * Execute pending command\n   * @param {string} command - AI command to execute\n   * @param {string} params - Command parameters\n   */\n  executePendingCommand(command, params) {\n    console.log('Executing pending command:', command, 'with params:', params);\n\n    try {\n      switch (command) {\n        case 'insertat':\n          this.executeInsertAtCommand(params);\n          break;\n        case 'insert':\n          this.executeInsertCommand(params);\n          break;\n        case 'replace':\n          this.executeReplaceCommand(params);\n          break;\n        case 'replacerange':\n          this.executeReplaceRangeCommand(params);\n          break;\n        case 'analyze':\n          this.executeAnalyzeCommand();\n          break;\n        case 'help':\n          this.executeHelpCommand();\n          break;\n        case 'capabilities':\n          this.executeCapabilitiesCommand();\n          break;\n        case 'status':\n          this.executeStatusCommand();\n          break;\n        case 'find':\n          this.executeFindCommand(params);\n          break;\n        case 'getline':\n          this.executeGetLineCommand(params);\n          break;\n        case 'getlines':\n          this.executeGetLinesCommand(params);\n          break;\n        case 'getcontent':\n          this.executeGetContentCommand(params);\n          break;\n        case 'getselection':\n          this.executeGetSelectionCommand(params);\n          break;\n        case 'getcursor':\n          this.executeGetCursorCommand(params);\n          break;\n        default:\n          console.warn('Unknown pending command:', command);\n          this.addSystemMessage(\n            `<strong>System:</strong> Unknown command: ${command}`\n          );\n      }\n    } catch (error) {\n      console.error('Error executing pending command:', error);\n      this.addSystemMessage(\n        `<strong>System:</strong> Error executing command: ${error.message}`\n      );\n    }\n  }\n\n  /**\n   * Execute insert at position command\n   * @param {string} params - Command parameters (lineNumber,column,text)\n   */\n  executeInsertAtCommand(params) {\n    const insertParams = params.match(/(\\d+),(\\d+),(.+)/);\n    if (insertParams) {\n      const lineNumber = parseInt(insertParams[1]);\n      const column = parseInt(insertParams[2]);\n      const text = insertParams[3].replace(/^[\"']|[\"']$/g, '');\n\n      if (this.shouldConfirmCommand()) {\n        if (\n          confirm(`Insert \"${text}\" at line ${lineNumber}, column ${column}?`)\n        ) {\n          this.insertAtPosition(lineNumber, column, text);\n          this.addSystemMessage(\n            `<strong>System:</strong> Successfully inserted text at position (${lineNumber},${column}).`\n          );\n        }\n      } else {\n        this.insertAtPosition(lineNumber, column, text);\n        this.addSystemMessage(\n          `<strong>System:</strong> Successfully inserted text at position (${lineNumber},${column}).`\n        );\n      }\n    }\n  }\n\n  /**\n   * Execute insert at cursor command\n   * @param {string} params - Text to insert\n   */\n  executeInsertCommand(params) {\n    const text = params.replace(/^[\"']|[\"']$/g, '');\n\n    if (this.shouldConfirmCommand()) {\n      if (confirm(`Insert \"${text}\" at cursor position?`)) {\n        this.insertAtCursor(text);\n        this.addSystemMessage(\n          '<strong>System:</strong> Successfully inserted text at cursor position.'\n        );\n      }\n    } else {\n      this.insertAtCursor(text);\n      this.addSystemMessage(\n        '<strong>System:</strong> Successfully inserted text at cursor position.'\n      );\n    }\n  }\n\n  /**\n   * Execute replace selection command\n   * @param {string} params - New text to replace selection with\n   */\n  executeReplaceCommand(params) {\n    const newText = params.replace(/^[\"']|[\"']$/g, '');\n\n    if (this.shouldConfirmCommand()) {\n      if (confirm(`Replace selected text with \"${newText}\"?`)) {\n        this.replaceSelection(newText);\n        this.addSystemMessage(\n          '<strong>System:</strong> Successfully replaced selected text.'\n        );\n      }\n    } else {\n      this.replaceSelection(newText);\n      this.addSystemMessage(\n        '<strong>System:</strong> Successfully replaced selected text.'\n      );\n    }\n  }\n\n  /**\n   * Execute replace range command\n   * @param {string} params - Command parameters (startLine,startColumn,endLine,endColumn,newText)\n   */\n  executeReplaceRangeCommand(params) {\n    const rangeParams = params.match(/(\\d+),(\\d+),(\\d+),(\\d+),(.+)/);\n    if (rangeParams) {\n      const startLine = parseInt(rangeParams[1]);\n      const startColumn = parseInt(rangeParams[2]);\n      const endLine = parseInt(rangeParams[3]);\n      const endColumn = parseInt(rangeParams[4]);\n      const newText = rangeParams[5].replace(/^[\"']|[\"']$/g, '');\n\n      if (this.shouldConfirmCommand()) {\n        if (\n          confirm(\n            `Replace text from (${startLine},${startColumn}) to (${endLine},${endColumn}) with \"${newText}\"?`\n          )\n        ) {\n          this.replaceRange(\n            startLine,\n            startColumn,\n            endLine,\n            endColumn,\n            newText\n          );\n          this.addSystemMessage(\n            `<strong>System:</strong> Successfully replaced text in range (${startLine},${startColumn}) to (${endLine},${endColumn}).`\n          );\n        }\n      } else {\n        this.replaceRange(startLine, startColumn, endLine, endColumn, newText);\n        this.addSystemMessage(\n          `<strong>System:</strong> Successfully replaced text in range (${startLine},${startColumn}) to (${endLine},${endColumn}).`\n        );\n      }\n    } else {\n      console.error('Invalid replacerange parameters:', params);\n      this.addSystemMessage(\n        `<strong>System:</strong> Invalid replacerange parameters: ${params}`\n      );\n    }\n  }\n\n  /**\n   * Execute analyze command\n   */\n  executeAnalyzeCommand() {\n    const analysis = this.analyzeCode();\n    const analysisSummary =\n      '<strong>GGcode Analysis:</strong>' +\n      '<ul>' +\n      '<li>Total Lines: ' +\n      analysis.totalLines +\n      '</li>' +\n      '<li>Code Lines: ' +\n      analysis.codeLines +\n      '</li>' +\n      '<li>Comment Lines: ' +\n      analysis.commentLines +\n      '</li>' +\n      '<li>G-code Commands: ' +\n      analysis.gcodeCommands.length +\n      '</li>' +\n      '<li>Variables: ' +\n      analysis.variables.length +\n      '</li>' +\n      '<li>Functions: ' +\n      analysis.functions.length +\n      '</li>' +\n      '<li>Complexity: ' +\n      analysis.complexity +\n      '%</li>' +\n      '<li>Code Density: ' +\n      analysis.density +\n      '%</li>' +\n      '</ul>';\n    this.addSystemMessage(analysisSummary);\n    console.log('AI analyzed GGcode:', analysis);\n  }\n\n  /**\n   * Execute help command\n   */\n  executeHelpCommand() {\n    const helpText = `<strong>🤖 AI Commands Help:</strong>\n<ul>\n<li><strong>/ai:help</strong> - Show this help</li>\n<li><strong>/ai:capabilities</strong> - List all AI capabilities</li>\n<li><strong>/ai:list</strong> - List commands by category</li>\n<li><strong>/ai:status</strong> - Show current editor state</li>\n<li><strong>/ai:analyze</strong> - Analyze G-code file</li>\n</ul>\n\n<strong>📝 Editing Commands:</strong>\n<ul>\n<li><strong>/ai:insert[\"text\"]</strong> - Insert text at cursor</li>\n<li><strong>/ai:insertat[1,1,\"text\"]</strong> - Insert at specific position</li>\n<li><strong>/ai:replace[\"text\"]</strong> - Replace selected text</li>\n<li><strong>/ai:replacerange[start,end,\"text\"]</strong> - Replace text range</li>\n</ul>\n\n<strong>📖 Reading Commands:</strong>\n<ul>\n<li><strong>/ai:getcontent</strong> - Get entire file content</li>\n<li><strong>/ai:getlines[1,5]</strong> - Get specific lines</li>\n<li><strong>/ai:getline[2]</strong> - Get specific line</li>\n<li><strong>/ai:getselection</strong> - Get selected text</li>\n<li><strong>/ai:getcursor</strong> - Get cursor position</li>\n</ul>\n\n<strong>🔧 G-code Specific:</strong>\n<ul>\n<li><strong>/ai:optimize</strong> - Optimize G-code for efficiency</li>\n<li><strong>/ai:validate</strong> - Validate G-code syntax</li>\n<li><strong>/ai:simulate</strong> - Start G-code simulation</li>\n</ul>\n\n<strong>💡 Usage Tips:</strong>\n<ul>\n<li>Commands are case-sensitive</li>\n<li>Line and column numbers are 1-based</li>\n<li>Text should be quoted with double quotes</li>\n<li>Use /ai:help[\"command\"] for detailed help on specific commands</li>\n</ul>`;\n\n    console.log('📋 AI Help Command Executed');\n    this.addSystemMessage(helpText);\n  }\n\n  /**\n   * Execute capabilities command\n   */\n  executeCapabilitiesCommand() {\n    const capabilitiesText = `<strong>🚀 AI System Capabilities:</strong>\n\n<strong>🤖 AI Model Information:</strong>\n<ul>\n<li><strong>Model:</strong> deepseek-coder-v2:16b</li>\n<li><strong>Type:</strong> Code-focused LLM</li>\n<li><strong>Context:</strong> 32K tokens</li>\n<li><strong>Specialization:</strong> CNC/G-code programming</li>\n</ul>\n\n<strong>📝 Text Editing Capabilities:</strong>\n<ul>\n<li>✅ Insert text at any position</li>\n<li>✅ Replace text selections</li>\n<li>✅ Multi-line text manipulation</li>\n<li>✅ Syntax-aware editing</li>\n<li>✅ Real-time editor integration</li>\n</ul>\n\n<strong>🔍 Code Analysis Features:</strong>\n<ul>\n<li>✅ G-code syntax validation</li>\n<li>✅ Performance optimization suggestions</li>\n<li>✅ Code complexity analysis</li>\n<li>✅ Comment and documentation analysis</li>\n<li>✅ Feed rate and speed optimization</li>\n</ul>\n\n<strong>📊 Data Processing:</strong>\n<ul>\n<li>✅ Real-time G-code parsing</li>\n<li>✅ 3D visualization integration</li>\n<li>✅ Performance metrics tracking</li>\n<li>✅ Error detection and reporting</li>\n<li>✅ Code statistics generation</li>\n</ul>\n\n<strong>🎯 G-code Specific Operations:</strong>\n<ul>\n<li>✅ Rapid move optimization (G0)</li>\n<li>✅ Feed rate analysis and tuning</li>\n<li>✅ Tool path efficiency calculation</li>\n<li>✅ CNC machining best practices</li>\n<li>✅ Multi-axis coordinate validation</li>\n</ul>\n\n<strong>🔄 Integration Features:</strong>\n<ul>\n<li>✅ Real-time AI chat interface</li>\n<li>✅ Command auto-completion</li>\n<li>✅ Error handling and recovery</li>\n<li>✅ User confirmation system</li>\n<li>✅ Undo/redo compatibility</li>\n</ul>\n\n<strong>📈 Performance Metrics:</strong>\n<ul>\n<li><strong>Command Execution:</strong> <50ms average</li>\n<li><strong>AI Response Time:</strong> 2-5 seconds</li>\n<li><strong>Code Analysis:</strong> Real-time</li>\n<li><strong>Memory Usage:</strong> Optimized for large files</li>\n</ul>\n\n<strong>🎨 User Experience:</strong>\n<ul>\n<li>✅ Intuitive command syntax</li>\n<li>✅ Contextual help system</li>\n<li>✅ Visual feedback for all operations</li>\n<li>✅ Error messages with suggestions</li>\n<li>✅ Progress indicators for long operations</li>\n</ul>`;\n\n    console.log('🚀 AI Capabilities Command Executed');\n    this.addSystemMessage(capabilitiesText);\n  }\n\n  /**\n   * Execute status command\n   */\n  executeStatusCommand() {\n    const cursorPosition = this.getCursorPosition();\n    const selectedText = this.getSelectedText();\n    const currentContent = this.getCurrentContent();\n    const lines = currentContent.split('\\n');\n    const totalLines = lines.length;\n    const currentLine = cursorPosition ? cursorPosition.lineNumber : 1;\n    const currentColumn = cursorPosition ? cursorPosition.column : 1;\n\n    const statusText = `<strong>📊 Editor Status:</strong>\n\n<strong>📝 File Information:</strong>\n<ul>\n<li><strong>Total Lines:</strong> ${totalLines}</li>\n<li><strong>File Size:</strong> ${currentContent.length} characters</li>\n<li><strong>Code Density:</strong> ${Math.round((lines.filter((l) => l.trim() !== '').length / totalLines) * 100)}%</li>\n<li><strong>Empty Lines:</strong> ${lines.filter((l) => l.trim() === '').length}</li>\n</ul>\n\n<strong>📍 Cursor Position:</strong>\n<ul>\n<li><strong>Current Line:</strong> ${currentLine} of ${totalLines}</li>\n<li><strong>Current Column:</strong> ${currentColumn}</li>\n<li><strong>Progress:</strong> ${Math.round((currentLine / totalLines) * 100)}% through file</li>\n</ul>\n\n<strong>✂️ Selection Status:</strong>\n<ul>\n<li><strong>Has Selection:</strong> ${selectedText ? 'Yes' : 'No'}</li>\n${selectedText ? `<li><strong>Selected Text:</strong> \"${selectedText.length > 50 ? selectedText.substring(0, 50) + '...' : selectedText}\"</li>` : ''}\n<li><strong>Selection Length:</strong> ${selectedText.length} characters</li>\n</ul>\n\n<strong>🔧 Editor State:</strong>\n<ul>\n<li><strong>Editor Available:</strong> ${window.editor ? 'Yes' : 'No'}</li>\n<li><strong>Editor Manager:</strong> ${window.editorManager ? 'Yes' : 'No'}</li>\n<li><strong>Auto-approve Commands:</strong> ${!this.shouldConfirmCommand() ? 'Yes' : 'No'}</li>\n<li><strong>Command History:</strong> ${this.getPendingCommandData() ? 'Active' : 'None'}</li>\n</ul>\n\n<strong>🎯 Current Line Content:</strong>\n<ul>\n<li><strong>Line ${currentLine}:</strong> \"${this.getLineContent(currentLine)}\"</li>\n</ul>\n\n<strong>📈 Quick Stats:</strong>\n<ul>\n<li><strong>G-code Commands:</strong> ${lines.filter((l) => /\\bG\\d+/.test(l)).length}</li>\n<li><strong>Comments:</strong> ${lines.filter((l) => l.trim().startsWith('//')).length}</li>\n<li><strong>Variables:</strong> ${lines.filter((l) => /\\blet\\s+/.test(l)).length}</li>\n<li><strong>Functions:</strong> ${lines.filter((l) => /\\bfunction\\s+/.test(l)).length}</li>\n</ul>`;\n\n    console.log('📊 AI Status Command Executed');\n    console.log('Current cursor position:', cursorPosition);\n    console.log('Selected text length:', selectedText.length);\n    this.addSystemMessage(statusText);\n  }\n\n  /**\n   * Execute find command with intelligent search patterns\n   * @param {string} params - Text to search for or special search type\n   */\n  executeFindCommand(params) {\n    const searchText = params.replace(/^[\"']|[\"']$/g, '');\n    const currentContent = this.getCurrentContent();\n    const lines = currentContent.split('\\n');\n\n    console.log('🔍 AI Find Command Executed - Searching for:', searchText);\n\n    // Check for special search patterns\n    const searchPattern = this.getIntelligentSearchPattern(searchText);\n    const matches = [];\n\n    lines.forEach((line, index) => {\n      let isMatch = false;\n      let matchIndex = -1;\n\n      if (searchPattern.isRegex) {\n        // Use regex search\n        const regex = new RegExp(\n          searchPattern.pattern,\n          searchPattern.flags || 'gi'\n        );\n        const match = line.match(regex);\n        if (match) {\n          isMatch = true;\n          matchIndex = line.indexOf(match[0]);\n        }\n      } else {\n        // Use text search\n        const lineLower = line.toLowerCase();\n        const patternLower = searchPattern.pattern.toLowerCase();\n        matchIndex = lineLower.indexOf(patternLower);\n        isMatch = matchIndex !== -1;\n      }\n\n      if (isMatch) {\n        matches.push({\n          lineNumber: index + 1,\n          content: line.trim(),\n          matchIndex: matchIndex,\n          searchType: searchPattern.type,\n        });\n      }\n    });\n\n    let findText = `<strong>🔍 Search Results for \"${searchText}\":</strong>`;\n\n    if (matches.length === 0) {\n      findText += `<ul><li><strong>No matches found</strong></li>`;\n      if (searchPattern.suggestions) {\n        findText += `<li><strong>💡 Try:</strong> ${searchPattern.suggestions.join(', ')}</li>`;\n      }\n      findText += `</ul>`;\n    } else {\n      findText += `<ul><li><strong>Found ${matches.length} match(es):</strong></li></ul>`;\n\n      // Show first 10 matches with context\n      matches.slice(0, 10).forEach((match) => {\n        const beforeMatch = match.content.substring(0, match.matchIndex);\n        const matchedText = match.content.substring(\n          match.matchIndex,\n          match.matchIndex +\n            (searchPattern.isRegex\n              ? match.content.match(\n                  new RegExp(searchPattern.pattern, searchPattern.flags || 'gi')\n                )[0].length\n              : searchPattern.pattern.length)\n        );\n        const afterMatch = match.content.substring(\n          match.matchIndex +\n            (searchPattern.isRegex\n              ? match.content.match(\n                  new RegExp(searchPattern.pattern, searchPattern.flags || 'gi')\n                )[0].length\n              : searchPattern.pattern.length)\n        );\n\n        findText += `<ul>\n<li><strong>Line ${match.lineNumber}:</strong> ${beforeMatch}<mark>${matchedText}</mark>${afterMatch}</li>\n</ul>`;\n      });\n\n      if (matches.length > 10) {\n        findText += `<ul><li><strong>... and ${matches.length - 10} more matches</strong></li></ul>`;\n      }\n    }\n\n    // Add search type information\n    if (searchPattern.type !== 'text') {\n      findText += `<strong>🔍 Search Type:</strong> <em>${searchPattern.description}</em><br>`;\n    }\n\n    // Add CSS styles for search buttons\n    findText += `<style>\n.search-quick-actions, .search-context-actions {\n    display: flex;\n    flex-wrap: wrap;\n    gap: 8px;\n    margin: 10px 0;\n}\n\n.search-action-btn, .context-action-btn {\n    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n    color: white;\n    border: none;\n    padding: 8px 12px;\n    border-radius: 6px;\n    cursor: pointer;\n    font-size: 12px;\n    font-weight: 500;\n    transition: all 0.2s ease;\n    box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\n.search-action-btn:hover, .context-action-btn:hover {\n    transform: translateY(-1px);\n    box-shadow: 0 4px 8px rgba(0,0,0,0.15);\n    background: linear-gradient(135deg, #764ba2 0%, #667eea 100%);\n}\n\n.search-action-btn:active, .context-action-btn:active {\n    transform: translateY(0);\n    box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\n.context-action-btn {\n    background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);\n}\n\n.context-action-btn:hover {\n    background: linear-gradient(135deg, #f5576c 0%, #f093fb 100%);\n}\n</style>`;\n\n    // Add quick actions with clickable buttons\n    findText += `<strong>💡 Quick Actions:</strong>\n<div class=\"search-quick-actions\">\n<button class=\"search-action-btn\" onclick=\"executeQuickSearch('variable')\" title=\"Find variable assignments\">\n    🔍 Variables\n</button>\n<button class=\"search-action-btn\" onclick=\"executeQuickSearch('function')\" title=\"Find function definitions\">\n    🔧 Functions\n</button>\n<button class=\"search-action-btn\" onclick=\"executeQuickSearch('comment')\" title=\"Find comments\">\n    💬 Comments\n</button>\n<button class=\"search-action-btn\" onclick=\"executeQuickSearch('gcode')\" title=\"Find G-code commands\">\n    ⚙️ G-code\n</button>\n<button class=\"search-action-btn\" onclick=\"executeQuickSearch('axis')\" title=\"Find axis movements\">\n    📍 Axis\n</button>\n<button class=\"search-action-btn\" onclick=\"executeQuickSearch('loop')\" title=\"Find loop structures\">\n    🔄 Loops\n</button>\n</div>`;\n\n    // Add context viewing for matches\n    if (matches.length > 0) {\n      findText += `<strong>📄 Context Actions:</strong>\n<div class=\"search-context-actions\">`;\n      matches.slice(0, 3).forEach((match) => {\n        const contextStart = Math.max(1, match.lineNumber - 2);\n        const contextEnd = Math.min(lines.length, match.lineNumber + 2);\n        findText += `<button class=\"context-action-btn\" onclick=\"executeQuickContext(${contextStart}, ${contextEnd})\" title=\"View lines ${contextStart}-${contextEnd}\">\n                    👁️ Lines ${contextStart}-${contextEnd}\n                </button>`;\n      });\n      findText += `</div>`;\n    }\n\n    console.log(`Found ${matches.length} matches for \"${searchText}\"`);\n    this.addSystemMessage(findText);\n  }\n\n  /**\n   * Get intelligent search pattern based on input\n   * @param {string} input - Search input\n   * @returns {Object} Search pattern with type, pattern, and flags\n   */\n  getIntelligentSearchPattern(input) {\n    const lowerInput = input.toLowerCase();\n\n    // Special search patterns\n    if (\n      lowerInput === 'variable' ||\n      lowerInput === 'variables' ||\n      lowerInput.includes('set variable')\n    ) {\n      return {\n        type: 'variable',\n        description: 'Variable assignments and declarations',\n        pattern: '\\\\blet\\\\s+[a-zA-Z_]\\\\w*\\\\s*=|\\\\b[a-zA-Z_]\\\\w*\\\\s*=\\\\s*[^;]+',\n        flags: 'gi',\n        isRegex: true,\n        suggestions: ['\"let x = 5\"', '\"x = 10\"', '\"radius = 8\"'],\n      };\n    }\n\n    if (\n      lowerInput === 'function' ||\n      lowerInput === 'functions' ||\n      lowerInput.includes('function')\n    ) {\n      return {\n        type: 'function',\n        description: 'Function definitions',\n        pattern:\n          '\\\\bfunction\\\\s+[a-zA-Z_]\\\\w*|\\\\blet\\\\s+[a-zA-Z_]\\\\w*\\\\s*=\\\\s*function',\n        flags: 'gi',\n        isRegex: true,\n        suggestions: ['\"function spiral\"', '\"let draw = function\"'],\n      };\n    }\n\n    if (lowerInput === 'comment' || lowerInput === 'comments') {\n      return {\n        type: 'comment',\n        description: 'Comments in code',\n        pattern: '//.*$|/\\\\*.*\\\\*/',\n        flags: 'gm',\n        isRegex: true,\n        suggestions: ['\"// Set feed rate\"', '\"/* Multi-line comment */\"'],\n      };\n    }\n\n    if (\n      lowerInput === 'gcode' ||\n      lowerInput === 'g-code' ||\n      lowerInput.includes('g-code')\n    ) {\n      return {\n        type: 'gcode',\n        description: 'G-code commands',\n        pattern: '\\\\bG\\\\d+|\\\\bM\\\\d+',\n        flags: 'gi',\n        isRegex: true,\n        suggestions: ['\"G0 X10 Y20\"', '\"G1 F100\"', '\"M3 S1000\"'],\n      };\n    }\n\n    if (\n      lowerInput === 'axis' ||\n      lowerInput === 'axes' ||\n      lowerInput.includes('axis move')\n    ) {\n      return {\n        type: 'axis',\n        description: 'Axis movements (X, Y, Z)',\n        pattern: '\\\\b[XYZABC][+-]?\\\\d*\\\\.?\\\\d+',\n        flags: 'gi',\n        isRegex: true,\n        suggestions: ['\"X10 Y20\"', '\"Z-5\"', '\"A90\"'],\n      };\n    }\n\n    if (\n      lowerInput === 'loop' ||\n      lowerInput === 'loops' ||\n      lowerInput.includes('loop')\n    ) {\n      return {\n        type: 'loop',\n        description: 'Loop structures',\n        pattern: '\\\\bfor\\\\s*\\\\(|\\\\bwhile\\\\s*\\\\(|\\\\bdo\\\\s*\\\\{',\n        flags: 'gi',\n        isRegex: true,\n        suggestions: ['\"for(let i = 0\"', '\"while(x < 10\"'],\n      };\n    }\n\n    if (\n      lowerInput === 'math' ||\n      lowerInput === 'calculation' ||\n      lowerInput.includes('math')\n    ) {\n      return {\n        type: 'math',\n        description: 'Mathematical operations',\n        pattern: '[+\\\\-*/%]\\\\s*\\\\d|\\\\d\\\\s*[+\\\\-*/%]',\n        flags: 'gi',\n        isRegex: true,\n        suggestions: ['\"x + 5\"', '\"radius * 2\"', '\"angle / 2\"'],\n      };\n    }\n\n    if (\n      lowerInput === 'coordinate' ||\n      lowerInput === 'coordinates' ||\n      lowerInput.includes('coordinate')\n    ) {\n      return {\n        type: 'coordinate',\n        description: 'Coordinate definitions',\n        pattern: '\\\\bX\\\\d+\\\\s+Y\\\\d+|\\\\bY\\\\d+\\\\s+X\\\\d+',\n        flags: 'gi',\n        isRegex: true,\n        suggestions: ['\"X10 Y20\"', '\"Y5 X15\"'],\n      };\n    }\n\n    // Check for regex patterns (enclosed in forward slashes)\n    if (input.startsWith('/') && input.includes('/', 1)) {\n      const lastSlashIndex = input.lastIndexOf('/');\n      const pattern = input.slice(1, lastSlashIndex);\n      const flags = input.slice(lastSlashIndex + 1);\n\n      return {\n        type: 'regex',\n        description: 'Custom regex pattern',\n        pattern: pattern,\n        flags: flags,\n        isRegex: true,\n      };\n    }\n\n    // Default text search\n    return {\n      type: 'text',\n      description: 'Text search',\n      pattern: input,\n      isRegex: false,\n    };\n  }\n\n  /**\n   * Execute get line command\n   * @param {string} params - Line number, negative index, or special keyword (\"last\", \"end\")\n   */\n  executeGetLineCommand(params) {\n    const cleanParams = params.replace(/^[\"']|[\"']$/g, '').toLowerCase();\n\n    let lineNumber;\n    let isSpecialKeyword = false;\n    let isNegativeIndex = false;\n\n    // Handle special keywords\n    if (cleanParams === 'last' || cleanParams === 'end') {\n      // Get the last line of the file\n      const content = this.getCurrentContent();\n      const lines = content.split('\\n');\n      lineNumber = lines.length;\n      isSpecialKeyword = true;\n    } else {\n      // Parse as line number (can be negative for indexing from end)\n      const parsedNumber = parseInt(cleanParams);\n\n      if (isNaN(parsedNumber)) {\n        console.error('Invalid line number parameter:', params);\n        this.addSystemMessage(\n          `<strong>📄 Line Content:</strong><ul><li><strong>Invalid line specification: ${params}</strong></li><li><strong>Examples: [5], [-1], [last], [end]</strong></li></ul>`\n        );\n        return;\n      }\n\n      // Handle negative indexing (Python-style)\n      if (parsedNumber < 0) {\n        const content = this.getCurrentContent();\n        const lines = content.split('\\n');\n        lineNumber = lines.length + parsedNumber + 1; // -1 becomes last line, -2 becomes second to last, etc.\n        isNegativeIndex = true;\n      } else {\n        lineNumber = parsedNumber;\n      }\n    }\n\n    // Validate the calculated line number\n    if (lineNumber < 1) {\n      console.error('Calculated line number is invalid:', lineNumber);\n      this.addSystemMessage(\n        `<strong>📄 Line Content:</strong><ul><li><strong>Invalid line specification: ${params}</strong></li><li><strong>Line number would be out of range</strong></li></ul>`\n      );\n      return;\n    }\n\n    const lineContent = this.getLineContent(lineNumber);\n    const indexType = isSpecialKeyword\n      ? '(last line)'\n      : isNegativeIndex\n        ? `(index ${parseInt(cleanParams)})`\n        : '';\n\n    console.log(\n      '📄 AI Get Line Command Executed - Line:',\n      lineNumber,\n      indexType\n    );\n\n    let getLineText = `<strong>📄 Line ${lineNumber} Content:</strong>`;\n\n    if (lineContent) {\n      getLineText += `<ul><li><strong>Line ${lineNumber}${indexType ? ' ' + indexType : ''}:</strong> \"${lineContent}\"</li></ul>`;\n    } else {\n      getLineText += `<ul><li><strong>Line ${lineNumber} not found - file may have fewer lines</strong></li></ul>`;\n    }\n\n    this.addSystemMessage(getLineText);\n  }\n\n  /**\n   * Execute get lines command\n   * @param {string} params - Start and end line numbers (e.g., \"1,5\" or \"1-5\" or \"1,end\")\n   */\n  executeGetLinesCommand(params) {\n    const cleanParams = params.replace(/^[\"']|[\"']$/g, '').toLowerCase();\n\n    let startLine, endLine;\n\n    // Try comma-separated format first (1,5 or 1,end)\n    if (cleanParams.includes(',')) {\n      const lineParams = cleanParams.split(',');\n      startLine = this.parseLineSpec(lineParams[0]);\n      endLine = this.parseLineSpec(lineParams[1]);\n    }\n    // Try dash format (1-5 or 1-end)\n    else if (cleanParams.includes('-')) {\n      const lineParams = cleanParams.split('-');\n      startLine = this.parseLineSpec(lineParams[0]);\n      endLine = this.parseLineSpec(lineParams[1]);\n    }\n    // Try single number format\n    else {\n      const singleLine = this.parseLineSpec(cleanParams);\n      startLine = singleLine;\n      endLine = singleLine;\n    }\n\n    // Validate parsed values\n    if (\n      isNaN(startLine) ||\n      isNaN(endLine) ||\n      startLine < 1 ||\n      endLine < startLine\n    ) {\n      console.error('Invalid line range parameters:', params);\n      this.addSystemMessage(\n        `<strong>📄 Lines Content:</strong><ul><li><strong>Invalid range format: ${params}</strong></li><li><strong>Examples: [1,5], [1-5], [1,end], [10] for single line</strong></li></ul>`\n      );\n      return;\n    }\n\n    const linesContent = this.getLinesContent(startLine, endLine);\n    console.log(\n      '📄 AI Get Lines Command Executed - Range:',\n      startLine,\n      'to',\n      endLine\n    );\n\n    let getLinesText = `<strong>📄 Lines ${startLine}-${endLine} Content:</strong>`;\n\n    if (linesContent) {\n      const lines = linesContent.split('\\n');\n      getLinesText += '<ul>';\n      lines.forEach((line, index) => {\n        const lineNumber = startLine + index;\n        getLinesText += `<li><strong>Line ${lineNumber}:</strong> \"${line}\"</li>`;\n      });\n      getLinesText += '</ul>';\n    } else {\n      getLinesText += `<ul><li><strong>No content found for lines ${startLine}-${endLine}</strong></li></ul>`;\n    }\n\n    this.addSystemMessage(getLinesText);\n  }\n\n  /**\n   * Parse line specification (number or special keyword)\n   * @param {string} spec - Line specification (e.g., \"5\", \"end\", \"last\")\n   * @returns {number} Parsed line number\n   */\n  parseLineSpec(spec) {\n    if (!spec) return NaN;\n\n    const lowerSpec = spec.toLowerCase();\n\n    // Handle special keywords\n    if (lowerSpec === 'last' || lowerSpec === 'end') {\n      const content = this.getCurrentContent();\n      const lines = content.split('\\n');\n      return lines.length;\n    }\n\n    // Handle negative indexing (Python-style)\n    const parsedNumber = parseInt(lowerSpec);\n    if (!isNaN(parsedNumber)) {\n      if (parsedNumber < 0) {\n        // Handle negative indexing\n        const content = this.getCurrentContent();\n        const lines = content.split('\\n');\n        return lines.length + parsedNumber + 1; // -1 becomes last line, -2 becomes second to last, etc.\n      }\n      return parsedNumber;\n    }\n\n    return NaN;\n  }\n\n  /**\n   * Execute get content command\n   * @param {string} _params - Not used for this command\n   */\n  executeGetContentCommand(_params) {\n    const content = this.getCurrentContent();\n    const lines = content.split('\\n');\n\n    console.log(\n      '📄 AI Get Content Command Executed - Total lines:',\n      lines.length\n    );\n\n    let getContentText = `<strong>📄 Full File Content:</strong>\n<ul>\n<li><strong>Total Lines:</strong> ${lines.length}</li>\n<li><strong>File Size:</strong> ${content.length} characters</li>\n</ul>\n\n<strong>📝 Content Preview (first 20 lines):</strong>\n<ul>`;\n\n    // Show first 20 lines as preview\n    const previewLines = lines.slice(0, 20);\n    previewLines.forEach((line, index) => {\n      getContentText += `<li><strong>Line ${index + 1}:</strong> \"${line}\"</li>`;\n    });\n\n    if (lines.length > 20) {\n      getContentText += `<li><strong>... and ${lines.length - 20} more lines</strong></li>`;\n    }\n\n    getContentText += '</ul>';\n\n    this.addSystemMessage(getContentText);\n  }\n\n  /**\n   * Execute get selection command\n   * @param {string} _params - Not used for this command\n   */\n  executeGetSelectionCommand(_params) {\n    const selectedText = this.getSelectedText();\n\n    console.log(\n      '📄 AI Get Selection Command Executed - Selection length:',\n      selectedText.length\n    );\n\n    let getSelectionText = `<strong>📄 Selected Text:</strong>`;\n\n    if (selectedText) {\n      getSelectionText += `<ul>\n<li><strong>Selected Text:</strong> \"${selectedText}\"</li>\n<li><strong>Selection Length:</strong> ${selectedText.length} characters</li>\n</ul>`;\n    } else {\n      getSelectionText += `<ul><li><strong>No text currently selected</strong></li></ul>`;\n    }\n\n    this.addSystemMessage(getSelectionText);\n  }\n\n  /**\n   * Execute get cursor command\n   * @param {string} _params - Not used for this command\n   */\n  executeGetCursorCommand(_params) {\n    const cursorPos = this.getCursorPosition();\n\n    console.log('📄 AI Get Cursor Command Executed - Position:', cursorPos);\n\n    let getCursorText = `<strong>📄 Cursor Position:</strong>`;\n\n    if (cursorPos) {\n      getCursorText += `<ul>\n<li><strong>Current Line:</strong> ${cursorPos.lineNumber}</li>\n<li><strong>Current Column:</strong> ${cursorPos.column}</li>\n</ul>`;\n    } else {\n      getCursorText += `<ul><li><strong>Cursor position not available</strong></li></ul>`;\n    }\n\n    this.addSystemMessage(getCursorText);\n  }\n\n  /**\n   * Check if commands should be confirmed\n   * @returns {boolean} Whether to ask for confirmation\n   */\n  shouldConfirmCommand() {\n    // Check auto-approve setting\n    const autoApproveToggle = document.getElementById('autoApproveToggle');\n    if (autoApproveToggle) {\n      return !autoApproveToggle.checked;\n    }\n\n    // Fallback to localStorage\n    try {\n      return localStorage.getItem('aiAutoApprove') !== 'true';\n    } catch (error) {\n      console.warn('Failed to get aiAutoApprove from storage:', error);\n      return true; // Default to requiring confirmation\n    }\n  }\n\n  /**\n   * Insert text at specific position\n   * @param {number} lineNumber - Line number (1-based)\n   * @param {number} column - Column number (1-based)\n   * @param {string} text - Text to insert\n   */\n  insertAtPosition(lineNumber, column, text) {\n    console.log('insertAtPosition called with:', { lineNumber, column, text });\n\n    if (window.editor) {\n      console.log(\n        'Current editor content (first 100 chars):',\n        window.editor.getValue().substring(0, 100)\n      );\n      console.log('Editor model exists:', !!window.editor.getModel());\n\n      try {\n        const result = window.editor.executeEdits('ai-agent', [\n          {\n            range: {\n              startLineNumber: lineNumber,\n              startColumn: column,\n              endLineNumber: lineNumber,\n              endColumn: column,\n            },\n            text: text,\n          },\n        ]);\n\n        console.log('executeEdits result:', result);\n        console.log(\n          'New editor content (first 100 chars):',\n          window.editor.getValue().substring(0, 100)\n        );\n\n        // Trigger save\n        if (window.editorManager) {\n          console.log('Triggering saveContent...');\n          window.editorManager.saveContent();\n        }\n      } catch (error) {\n        console.error('Error in insertAtPosition:', error);\n        throw error;\n      }\n    } else {\n      console.error('window.editor is not available');\n      throw new Error('Editor not available');\n    }\n  }\n\n  /**\n   * Insert text at cursor position\n   * @param {string} text - Text to insert\n   */\n  insertAtCursor(text) {\n    console.log('insertAtCursor called with:', text);\n\n    if (window.editor) {\n      const position = window.editor.getPosition();\n      console.log('Current cursor position:', position);\n\n      try {\n        const result = window.editor.executeEdits('ai-agent', [\n          {\n            range: {\n              startLineNumber: position.lineNumber,\n              startColumn: position.column,\n              endLineNumber: position.lineNumber,\n              endColumn: position.column,\n            },\n            text: text,\n          },\n        ]);\n\n        console.log('insertAtCursor executeEdits result:', result);\n\n        // Trigger save\n        if (window.editorManager) {\n          window.editorManager.saveContent();\n        }\n      } catch (error) {\n        console.error('Error in insertAtCursor:', error);\n        throw error;\n      }\n    } else {\n      console.error('window.editor is not available for insertAtCursor');\n      throw new Error('Editor not available');\n    }\n  }\n\n  /**\n   * Replace selected text\n   * @param {string} newText - New text to replace selection with\n   */\n  replaceSelection(newText) {\n    if (window.editor) {\n      const selection = window.editor.getSelection();\n      console.log('Current selection:', selection);\n\n      if (selection && !selection.isEmpty()) {\n        try {\n          const selectedText = window.editor\n            .getModel()\n            .getValueInRange(selection);\n          console.log('Selected text to replace:', selectedText);\n\n          const result = window.editor.executeEdits('ai-agent', [\n            {\n              range: selection,\n              text: newText,\n            },\n          ]);\n\n          console.log('replaceSelection executeEdits result:', result);\n          console.log(\n            'New editor content after replacement:',\n            window.editor.getValue().substring(0, 200)\n          );\n\n          // Trigger save\n          if (window.editorManager) {\n            window.editorManager.saveContent();\n          }\n        } catch (error) {\n          console.error('Error in replaceSelection:', error);\n          throw error;\n        }\n      } else {\n        console.warn(\n          'No text selected for replacement - selection is empty or null'\n        );\n        console.log('Selection details:', {\n          selection,\n          isEmpty: selection ? selection.isEmpty() : 'selection is null',\n        });\n\n        // Alternative: Replace current line if no selection\n        const position = window.editor.getPosition();\n        if (position) {\n          const model = window.editor.getModel();\n          const lineContent = model.getLineContent(position.lineNumber);\n          console.log('Current line content:', lineContent);\n\n          // Replace the entire current line\n          const lineRange = {\n            startLineNumber: position.lineNumber,\n            startColumn: 1,\n            endLineNumber: position.lineNumber,\n            endColumn: lineContent.length + 1,\n          };\n\n          try {\n            const result = window.editor.executeEdits('ai-agent', [\n              {\n                range: lineRange,\n                text: newText,\n              },\n            ]);\n\n            console.log('Replaced current line with:', newText);\n            console.log('replaceLine executeEdits result:', result);\n\n            // Trigger save\n            if (window.editorManager) {\n              window.editorManager.saveContent();\n            }\n          } catch (error) {\n            console.error('Error replacing current line:', error);\n            throw error;\n          }\n        }\n      }\n    } else {\n      console.error('window.editor is not available for replaceSelection');\n      throw new Error('Editor not available');\n    }\n  }\n\n  /**\n   * Analyze current code\n   * @returns {Object} Analysis results\n   */\n  analyzeCode() {\n    const content = this.getCurrentContent();\n    const lines = content.split('\\n');\n    const gcodeCommands = [];\n    const variables = [];\n    const functions = [];\n    const comments = [];\n    const axisMoves = [];\n\n    lines.forEach((line, index) => {\n      // Find G-code commands\n      const gcodeMatches = line.match(/\\b(G\\d+)/g);\n      if (gcodeMatches) {\n        gcodeCommands.push(\n          ...gcodeMatches.map((cmd) => ({\n            command: cmd,\n            line: index + 1,\n            content: line.trim(),\n          }))\n        );\n      }\n\n      // Find variable declarations\n      const varMatches = line.match(/\\b(let\\s+[a-zA-Z_]\\w*)/g);\n      if (varMatches) {\n        variables.push(\n          ...varMatches.map((v) => ({\n            declaration: v,\n            line: index + 1,\n            content: line.trim(),\n          }))\n        );\n      }\n\n      // Find function declarations\n      const funcMatches = line.match(/\\bfunction\\s+([a-zA-Z_]\\w*)/g);\n      if (funcMatches) {\n        functions.push(\n          ...funcMatches.map((f) => ({\n            declaration: f,\n            line: index + 1,\n            content: line.trim(),\n          }))\n        );\n      }\n\n      // Find comments\n      const commentMatches = line.match(/(\\/\\/.*$|\\/\\*.*?\\*\\/)/g);\n      if (commentMatches) {\n        comments.push(\n          ...commentMatches.map((c) => ({\n            content: c,\n            line: index + 1,\n          }))\n        );\n      }\n\n      // Find axis moves (X, Y, Z, etc.)\n      const axisMatches = line.match(/\\b([XYZABC][+-]?\\d*\\.?\\d+)/g);\n      if (axisMatches) {\n        axisMoves.push(\n          ...axisMatches.map((a) => ({\n            axis: a.charAt(0),\n            value: a.substring(1),\n            line: index + 1,\n            content: line.trim(),\n          }))\n        );\n      }\n    });\n\n    // Calculate complexity metrics\n    const totalLines = lines.length;\n    const codeLines = lines.filter(\n      (line) => line.trim() !== '' && !line.trim().startsWith('//')\n    ).length;\n    const commentLines = comments.length;\n    const emptyLines = totalLines - codeLines - commentLines;\n\n    return {\n      totalLines,\n      codeLines,\n      commentLines,\n      emptyLines,\n      gcodeCommands,\n      variables,\n      functions,\n      comments,\n      axisMoves,\n      complexity:\n        Math.round(\n          ((gcodeCommands.length + variables.length + functions.length) /\n            Math.max(codeLines, 1)) *\n            100\n        ) || 0,\n      density: Math.round((codeLines / Math.max(totalLines, 1)) * 100) || 0,\n    };\n  }\n\n  /**\n   * Get current editor content\n   * @returns {string} Current editor content\n   */\n  getCurrentContent() {\n    if (window.editorManager) {\n      return window.editorManager.getInputValue();\n    }\n    if (window.editor) {\n      return window.editor.getValue();\n    }\n    return '';\n  }\n\n  /**\n   * Get selected text\n   * @returns {string} Selected text\n   */\n  getSelectedText() {\n    if (window.editor) {\n      const selection = window.editor.getSelection();\n      if (selection && !selection.isEmpty()) {\n        return window.editor.getModel().getValueInRange(selection);\n      }\n    }\n    return '';\n  }\n\n  /**\n   * Get cursor position\n   * @returns {Object|null} Cursor position\n   */\n  getCursorPosition() {\n    if (window.editor) {\n      return window.editor.getPosition();\n    }\n    return null;\n  }\n\n  /**\n   * Set GGcode content in editor\n   * @param {string} content - Content to set\n   */\n  setGGcodeContent(content) {\n    if (window.editorManager) {\n      window.editorManager.setInputValue(content);\n    } else if (window.editor) {\n      window.editor.setValue(content);\n    }\n  }\n\n  /**\n   * Get GGcode content from editor (alias for getCurrentContent)\n   * @returns {string} Current editor content\n   */\n  getGGcodeContent() {\n    return this.getCurrentContent();\n  }\n\n  /**\n   * Insert GGcode text at cursor (alias for insertAtCursor)\n   * @param {string} text - Text to insert\n   */\n  insertGGcodeText(text) {\n    this.insertAtCursor(text);\n  }\n\n  /**\n   * Replace selected GGcode text (alias for replaceSelection)\n   * @param {string} newText - New text to replace selection with\n   */\n  replaceSelectedText(newText) {\n    this.replaceSelection(newText);\n  }\n\n  /**\n   * Get line content at specific line number\n   * @param {number} lineNumber - Line number (1-based)\n   * @returns {string} Line content\n   */\n  getLineContent(lineNumber) {\n    if (window.editor && lineNumber > 0) {\n      const model = window.editor.getModel();\n      if (lineNumber <= model.getLineCount()) {\n        return model.getLineContent(lineNumber);\n      }\n    }\n    return '';\n  }\n\n  /**\n   * Get multiple lines of content\n   * @param {number} startLine - Start line number (1-based)\n   * @param {number} endLine - End line number (1-based)\n   * @returns {string} Lines content\n   */\n  getLinesContent(startLine, endLine) {\n    if (window.editor && startLine > 0 && endLine >= startLine) {\n      const model = window.editor.getModel();\n      if (\n        startLine <= model.getLineCount() &&\n        endLine <= model.getLineCount()\n      ) {\n        let content = '';\n        for (let i = startLine; i <= endLine; i++) {\n          content += model.getLineContent(i) + '\\n';\n        }\n        return content.trim();\n      }\n    }\n    return '';\n  }\n\n  /**\n   * Replace content in a specific range\n   * @param {number} startLine - Start line number (1-based)\n   * @param {number} startColumn - Start column number (1-based)\n   * @param {number} endLine - End line number (1-based)\n   * @param {number} endColumn - End column number (1-based)\n   * @param {string} newText - New text to replace with\n   */\n  replaceRange(startLine, startColumn, endLine, endColumn, newText) {\n    if (window.editor) {\n      try {\n        const result = window.editor.executeEdits('ai-agent', [\n          {\n            range: {\n              startLineNumber: startLine,\n              startColumn: startColumn,\n              endLineNumber: endLine,\n              endColumn: endColumn,\n            },\n            text: newText,\n          },\n        ]);\n\n        console.log('replaceRange executeEdits result:', result);\n\n        // Trigger save\n        if (window.editorManager) {\n          window.editorManager.saveContent();\n        }\n      } catch (error) {\n        console.error('Error in replaceRange:', error);\n        throw error;\n      }\n    } else {\n      console.error('window.editor is not available for replaceRange');\n      throw new Error('Editor not available');\n    }\n  }\n\n  /**\n   * Analyze GGcode (alias for analyzeCode)\n   * @returns {Object} Analysis results\n   */\n  analyzeGGcode() {\n    return this.analyzeCode();\n  }\n\n  /**\n   * Add system message to chat\n   * @param {string} message - System message to add\n   */\n  addSystemMessage(message) {\n    const messagesContainer = document.getElementById('aiChatMessages');\n    if (!messagesContainer) return;\n\n    const messageDiv = document.createElement('div');\n    messageDiv.className = 'ai-message ai-system';\n    messageDiv.innerHTML = `<div class=\"ai-message-content\">${message}</div>`;\n\n    messagesContainer.appendChild(messageDiv);\n    messagesContainer.scrollTop = messagesContainer.scrollHeight;\n  }\n\n  /**\n   * Set pending command data\n   * @param {Object} data - Command data\n   */\n  setPendingCommandData(data) {\n    this.pendingCommandData = data;\n  }\n\n  /**\n   * Get pending command data\n   * @returns {Object|null} Pending command data\n   */\n  getPendingCommandData() {\n    return this.pendingCommandData;\n  }\n\n  /**\n   * Clear pending command data\n   */\n  clearPendingCommandData() {\n    this.pendingCommandData = null;\n  }\n}\n\n// Create and export singleton instance\nconst aiCommands = new AICommands();\nexport default aiCommands;\n\n// Global functions for search button clicks\nwindow.executeQuickSearch = function (searchType) {\n  console.log('🔍 Executing quick search:', searchType);\n  if (aiCommands && typeof aiCommands.executePendingCommand === 'function') {\n    aiCommands.executePendingCommand('find', `\"${searchType}\"`);\n    console.log('✅ Quick search executed successfully');\n  } else {\n    console.warn('AI Commands not available for quick search');\n  }\n};\n\nwindow.executeQuickContext = function (startLine, endLine) {\n  console.log('👁️ Executing quick context view:', startLine, 'to', endLine);\n  if (aiCommands && typeof aiCommands.executePendingCommand === 'function') {\n    aiCommands.executePendingCommand('getlines', `${startLine},${endLine}`);\n    console.log('✅ Quick context view executed successfully');\n  } else {\n    console.warn('AI Commands not available for quick context');\n  }\n};\n\n// Initialize testing framework\nexport function initializeMockEditor() {\n  // Mock Editor System\n  window.mockEditor = {\n    content: [],\n    cursor: { line: 1, column: 1 },\n    selection: null,\n    clipboard: '',\n    undoStack: [],\n    redoStack: [],\n\n    getValue() {\n      return this.content.join('\\n');\n    },\n    setValue(text) {\n      this.content = text.split('\\n');\n    },\n    getPosition() {\n      return this.cursor;\n    },\n    setPosition(position) {\n      this.cursor = position;\n    },\n    getSelection() {\n      return this.selection;\n    },\n    setSelection(range) {\n      this.selection = range;\n    },\n    executeEdits(source, edits) {\n      console.log('📝 MOCK EDIT:', edits);\n      // Simulate edit execution with detailed logging\n      edits.forEach((edit) => {\n        const startLine = edit.range.startLineNumber - 1;\n        const newText = edit.text;\n\n        console.log(\n          `  Line ${startLine + 1}: \"${this.content[startLine] || ''}\" → \"${newText}\"`\n        );\n      });\n      return edits.length;\n    },\n  };\n\n  // AI Testing API\n  window.aiTest = {\n    testCommand(command, params) {\n      console.log(`\\n🧪 Testing: /ai:${command}[${params}]`);\n      const startState = this.captureState();\n\n      try {\n        const result = aiCommands.executePendingCommand(command, params);\n        const endState = this.captureState();\n\n        console.log('✅ Command executed successfully');\n        console.log('📊 State changes:', this.diffStates(startState, endState));\n        console.log('📝 Current content:', window.mockEditor.getValue());\n        return result;\n      } catch (error) {\n        console.error('❌ Command failed:', error.message);\n        return null;\n      }\n    },\n\n    testAIInput(userInput) {\n      console.log(`\\n🤖 Testing AI Input: \"${userInput}\"`);\n      console.log('Expected: AI should use appropriate command(s)');\n      // Placeholder for AI simulation\n      return 'AI would analyze and respond with commands';\n    },\n\n    captureState() {\n      return {\n        content: [...window.mockEditor.content],\n        cursor: { ...window.mockEditor.cursor },\n        selection: window.mockEditor.selection\n          ? { ...window.mockEditor.selection }\n          : null,\n        timestamp: Date.now(),\n      };\n    },\n\n    diffStates(before, after) {\n      const changes = [];\n      if (JSON.stringify(before.content) !== JSON.stringify(after.content)) {\n        changes.push('content');\n      }\n      if (JSON.stringify(before.cursor) !== JSON.stringify(after.cursor)) {\n        changes.push('cursor');\n      }\n      if (before.selection !== after.selection) {\n        changes.push('selection');\n      }\n      return changes.length > 0 ? changes : ['none'];\n    },\n  };\n\n  // Quick access functions for console testing\n  window.testCmd = (cmd, params) => window.aiTest?.testCommand(cmd, params);\n  window.testAI = (input) => window.aiTest?.testAIInput(input);\n  window.showState = () => {\n    console.log('📋 Current Editor State:');\n    console.log('Content:', window.mockEditor.getValue());\n    console.log('Cursor:', window.mockEditor.getPosition());\n    console.log('Selection:', window.mockEditor.getSelection());\n  };\n  window.setTestContent = (text) => {\n    window.mockEditor.setValue(text);\n    console.log('📝 Test content set:');\n    console.log(window.mockEditor.getValue());\n  };\n  window.resetEditor = () => {\n    window.mockEditor.content = [];\n    window.mockEditor.cursor = { line: 1, column: 1 };\n    window.mockEditor.selection = null;\n    console.log('🔄 Editor reset to empty state');\n  };\n\n  // Initialize other gcode-related global variables\n  if (!window.gcodeLines) window.gcodeLines = [];\n  if (!window.gcodeCurrentLineIdx) window.gcodeCurrentLineIdx = 1;\n  if (!window.gcodeSegmentCounts)\n    window.gcodeSegmentCounts = { G0: 0, G1: 0, G2: 0, G3: 0 };\n  if (!window.performanceStats) window.performanceStats = {};\n  if (!window.performanceData) window.performanceData = {};\n}\n"],"names":["AICommands","_classCallCheck","pendingCommandData","_createClass","key","value","executePendingCommand","command","params","console","log","executeInsertAtCommand","executeInsertCommand","executeReplaceCommand","executeReplaceRangeCommand","executeAnalyzeCommand","executeHelpCommand","executeCapabilitiesCommand","executeStatusCommand","executeFindCommand","executeGetLineCommand","executeGetLinesCommand","executeGetContentCommand","executeGetSelectionCommand","executeGetCursorCommand","warn","addSystemMessage","concat","error","message","insertParams","match","lineNumber","parseInt","column","text","replace","shouldConfirmCommand","confirm","insertAtPosition","insertAtCursor","newText","replaceSelection","rangeParams","startLine","startColumn","endLine","endColumn","replaceRange","analysis","analyzeCode","analysisSummary","totalLines","codeLines","commentLines","gcodeCommands","length","variables","functions","complexity","density","helpText","capabilitiesText","cursorPosition","getCursorPosition","selectedText","getSelectedText","currentContent","getCurrentContent","lines","split","currentLine","currentColumn","statusText","Math","round","filter","l","trim","substring","window","editor","editorManager","getPendingCommandData","getLineContent","test","startsWith","searchText","searchPattern","getIntelligentSearchPattern","matches","forEach","line","index","isMatch","matchIndex","isRegex","regex","RegExp","pattern","flags","indexOf","lineLower","toLowerCase","patternLower","push","content","searchType","type","findText","suggestions","join","slice","beforeMatch","matchedText","afterMatch","description","contextStart","max","contextEnd","min","input","lowerInput","includes","lastSlashIndex","lastIndexOf","cleanParams","isSpecialKeyword","isNegativeIndex","parsedNumber","isNaN","lineContent","indexType","getLineText","lineParams","parseLineSpec","singleLine","linesContent","getLinesContent","getLinesText","spec","NaN","lowerSpec","_params","getContentText","previewLines","getSelectionText","cursorPos","getCursorText","autoApproveToggle","document","getElementById","checked","localStorage","getItem","getValue","getModel","result","executeEdits","range","startLineNumber","endLineNumber","saveContent","Error","position","getPosition","selection","getSelection","isEmpty","getValueInRange","model","lineRange","comments","axisMoves","gcodeMatches","apply","_toConsumableArray","map","cmd","varMatches","v","declaration","funcMatches","f","commentMatches","c","axisMatches","a","axis","charAt","emptyLines","getInputValue","setGGcodeContent","setInputValue","setValue","getGGcodeContent","insertGGcodeText","replaceSelectedText","getLineCount","i","analyzeGGcode","messagesContainer","messageDiv","createElement","className","innerHTML","appendChild","scrollTop","scrollHeight","setPendingCommandData","data","clearPendingCommandData","aiCommands","executeQuickSearch","executeQuickContext","initializeMockEditor","mockEditor","cursor","clipboard","undoStack","redoStack","setPosition","setSelection","source","edits","_this","edit","aiTest","testCommand","startState","captureState","endState","diffStates","testAIInput","userInput","_objectSpread","timestamp","Date","now","before","after","changes","JSON","stringify","testCmd","_window$aiTest","testAI","_window$aiTest2","showState","setTestContent","resetEditor","gcodeLines","gcodeCurrentLineIdx","gcodeSegmentCounts","G0","G1","G2","G3","performanceStats","performanceData"],"sourceRoot":""}